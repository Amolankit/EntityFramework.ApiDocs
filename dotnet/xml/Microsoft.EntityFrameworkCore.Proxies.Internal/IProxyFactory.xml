<Type Name="IProxyFactory" FullName="Microsoft.EntityFrameworkCore.Proxies.Internal.IProxyFactory">
  <TypeSignature Language="C#" Value="public interface IProxyFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProxyFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Proxies.Internal.IProxyFactory" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProxyFactory" />
  <TypeSignature Language="F#" Value="type IProxyFactory = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Proxies</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public object Create (Microsoft.EntityFrameworkCore.DbContext context, Type entityClrType, params object[] constructorArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Create(class Microsoft.EntityFrameworkCore.DbContext context, class System.Type entityClrType, object[] constructorArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Proxies.Internal.IProxyFactory.Create(Microsoft.EntityFrameworkCore.DbContext,System.Type,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Create (context As DbContext, entityClrType As Type, ParamArray constructorArguments As Object()) As Object" />
      <MemberSignature Language="F#" Value="abstract member Create : Microsoft.EntityFrameworkCore.DbContext * Type * obj[] -&gt; obj" Usage="iProxyFactory.Create (context, entityClrType, constructorArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Proxies</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.DbContext" />
        <Parameter Name="entityClrType" Type="System.Type" />
        <Parameter Name="constructorArguments" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="efcore-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="entityClrType">To be added.</param>
        <param name="constructorArguments">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLazyLoadingProxy">
      <MemberSignature Language="C#" Value="public object CreateLazyLoadingProxy (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, Microsoft.EntityFrameworkCore.Infrastructure.ILazyLoader loader, object[] constructorArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateLazyLoadingProxy(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class Microsoft.EntityFrameworkCore.Infrastructure.ILazyLoader loader, object[] constructorArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Proxies.Internal.IProxyFactory.CreateLazyLoadingProxy(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Infrastructure.ILazyLoader,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateLazyLoadingProxy (entityType As IEntityType, loader As ILazyLoader, constructorArguments As Object()) As Object" />
      <MemberSignature Language="F#" Value="abstract member CreateLazyLoadingProxy : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Infrastructure.ILazyLoader * obj[] -&gt; obj" Usage="iProxyFactory.CreateLazyLoadingProxy (entityType, loader, constructorArguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Proxies</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="loader" Type="Microsoft.EntityFrameworkCore.Infrastructure.ILazyLoader" />
        <Parameter Name="constructorArguments" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <param name="loader">To be added.</param>
        <param name="constructorArguments">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateLazyLoadingProxyType">
      <MemberSignature Language="C#" Value="public Type CreateLazyLoadingProxyType (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type CreateLazyLoadingProxyType(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Proxies.Internal.IProxyFactory.CreateLazyLoadingProxyType(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateLazyLoadingProxyType (entityType As IEntityType) As Type" />
      <MemberSignature Language="F#" Value="abstract member CreateLazyLoadingProxyType : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Type" Usage="iProxyFactory.CreateLazyLoadingProxyType entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Proxies</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="entityType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
