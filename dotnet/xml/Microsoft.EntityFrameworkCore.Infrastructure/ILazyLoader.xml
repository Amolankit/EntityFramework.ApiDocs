<Type Name="ILazyLoader" FullName="Microsoft.EntityFrameworkCore.Infrastructure.ILazyLoader">
  <TypeSignature Language="C#" Value="public interface ILazyLoader : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILazyLoader implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Infrastructure.ILazyLoader" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILazyLoader&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type ILazyLoader = interface&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Abstractions</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
                    A service that can be injected into entities to give them the capability
                    of loading navigation properties automatically the first time they are accessed.
                </para>
      <para>
                    The service lifetime is 'ServiceLifetime.Transient'. This means that each
                    entity instance will use its own instance of this service.
                    The implementation may depend on other services registered with any lifetime.
                    The implementation does not need to be thread-safe.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (object entity, string navigationName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(object entity, string navigationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.ILazyLoader.Load(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (entity As Object, Optional navigationName As String = null)" />
      <MemberSignature Language="F#" Value="abstract member Load : obj * string -&gt; unit" Usage="iLazyLoader.Load (entity, navigationName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Abstractions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="navigationName" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="efcore-2.1">
              <AttributeName>System.Runtime.CompilerServices.CallerMemberName</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="entity"> The entity on which the navigation property is located. </param>
        <param name="navigationName"> The navigation property name. </param>
        <summary>
                Loads a navigation property if it has not already been loaded.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LoadAsync (object entity, System.Threading.CancellationToken cancellationToken = null, string navigationName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task LoadAsync(object entity, valuetype System.Threading.CancellationToken cancellationToken, string navigationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.ILazyLoader.LoadAsync(System.Object,System.Threading.CancellationToken,System.String)" />
      <MemberSignature Language="F#" Value="abstract member LoadAsync : obj * System.Threading.CancellationToken * string -&gt; System.Threading.Tasks.Task" Usage="iLazyLoader.LoadAsync (entity, cancellationToken, navigationName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Abstractions</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        <Parameter Name="navigationName" Type="System.String">
          <Attributes>
            <Attribute FrameworkAlternate="efcore-2.1">
              <AttributeName>System.Runtime.CompilerServices.CallerMemberName</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="entity"> The entity on which the navigation property is located. </param>
        <param name="cancellationToken"> A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete. </param>
        <param name="navigationName"> The navigation property name. </param>
        <summary>
                Loads a navigation property if it has not already been loaded.
            </summary>
        <returns> A task that represents the asynchronous operation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLoaded">
      <MemberSignature Language="C#" Value="public void SetLoaded (object entity, string navigationName = &quot;&quot;, bool loaded = true);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLoaded(object entity, string navigationName, bool loaded) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Infrastructure.ILazyLoader.SetLoaded(System.Object,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLoaded (entity As Object, Optional navigationName As String = &quot;&quot;, Optional loaded As Boolean = true)" />
      <MemberSignature Language="F#" Value="abstract member SetLoaded : obj * string * bool -&gt; unit" Usage="iLazyLoader.SetLoaded (entity, navigationName, loaded)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Abstractions</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="navigationName" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1">
          <Attributes>
            <Attribute FrameworkAlternate="efcore-3.0">
              <AttributeName>System.Runtime.CompilerServices.CallerMemberName</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="loaded" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="entity"> The entity on which the navigation property is located. </param>
        <param name="navigationName"> The navigation property name. </param>
        <param name="loaded"> Determines whether the navigation is set as loaded or not. </param>
        <summary>
                Sets the given navigation as known to be completely loaded or known to be
                no longer completely loaded.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
