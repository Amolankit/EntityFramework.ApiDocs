<Type Name="SqlServerTypeMappingSource" FullName="Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerTypeMappingSource">
  <TypeSignature Language="C#" Value="public class SqlServerTypeMappingSource : Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlServerTypeMappingSource extends Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingSource" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerTypeMappingSource" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlServerTypeMappingSource&#xA;Inherits RelationalTypeMappingSource" />
  <TypeSignature Language="F#" Value="type SqlServerTypeMappingSource = class&#xA;    inherit RelationalTypeMappingSource" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingSource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                    the same compatibility standards as public APIs. It may be changed or removed without notice in
                    any release. You should only use it directly in your code with extreme caution and knowing that
                    doing so can result in application failures when updating to a new Entity Framework Core release.
                </para>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Singleton" />. This means a single instance
                    is used by many <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instances. The implementation must be thread-safe.
                    This service cannot depend on services registered as <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlServerTypeMappingSource (Microsoft.EntityFrameworkCore.Storage.TypeMappingSourceDependencies dependencies, Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingSourceDependencies relationalDependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.TypeMappingSourceDependencies dependencies, class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingSourceDependencies relationalDependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerTypeMappingSource.#ctor(Microsoft.EntityFrameworkCore.Storage.TypeMappingSourceDependencies,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingSourceDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As TypeMappingSourceDependencies, relationalDependencies As RelationalTypeMappingSourceDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerTypeMappingSource : Microsoft.EntityFrameworkCore.Storage.TypeMappingSourceDependencies * Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingSourceDependencies -&gt; Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerTypeMappingSource" Usage="new Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerTypeMappingSource (dependencies, relationalDependencies)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Storage.TypeMappingSourceDependencies" />
        <Parameter Name="relationalDependencies" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingSourceDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <param name="relationalDependencies">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindMapping">
      <MemberSignature Language="C#" Value="protected override Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping FindMapping (Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo mappingInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping FindMapping([in]valuetype Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo mappingInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerTypeMappingSource.FindMapping(Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo@|System.Runtime.InteropServices.InAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FindMapping (mappingInfo As RelationalTypeMappingInfo) As RelationalTypeMapping" />
      <MemberSignature Language="F#" Value="override this.FindMapping : RelationalTypeMappingInfo -&gt; Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" Usage="sqlServerTypeMappingSource.FindMapping mappingInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mappingInfo" Type="Microsoft.EntityFrameworkCore.Storage.RelationalTypeMappingInfo" />
      </Parameters>
      <Docs>
        <param name="mappingInfo">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateMapping">
      <MemberSignature Language="C#" Value="protected override void ValidateMapping (Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping mapping, Microsoft.EntityFrameworkCore.Metadata.IProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ValidateMapping(class Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping mapping, class Microsoft.EntityFrameworkCore.Metadata.IProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerTypeMappingSource.ValidateMapping(Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping,Microsoft.EntityFrameworkCore.Metadata.IProperty)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ValidateMapping (mapping As CoreTypeMapping, property As IProperty)" />
      <MemberSignature Language="F#" Value="override this.ValidateMapping : Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping * Microsoft.EntityFrameworkCore.Metadata.IProperty -&gt; unit" Usage="sqlServerTypeMappingSource.ValidateMapping (mapping, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mapping" Type="Microsoft.EntityFrameworkCore.Storage.CoreTypeMapping" />
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
      </Parameters>
      <Docs>
        <param name="mapping">To be added.</param>
        <param name="property">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
