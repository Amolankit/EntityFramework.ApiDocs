<Type Name="IConventionEntityType" FullName="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType">
  <TypeSignature Language="C#" Value="public interface IConventionEntityType : Microsoft.EntityFrameworkCore.Metadata.IConventionTypeBase, Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IConventionEntityType implements class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotatable, class Microsoft.EntityFrameworkCore.Metadata.IConventionTypeBase, class Microsoft.EntityFrameworkCore.Metadata.IEntityType, class Microsoft.EntityFrameworkCore.Metadata.ITypeBase" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" />
  <TypeSignature Language="VB.NET" Value="Public Interface IConventionEntityType&#xA;Implements IConventionTypeBase, IEntityType" />
  <TypeSignature Language="F#" Value="type IConventionEntityType = interface&#xA;    interface IEntityType&#xA;    interface ITypeBase&#xA;    interface IAnnotatable&#xA;    interface IConventionTypeBase&#xA;    interface IConventionAnnotatable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IConventionTypeBase</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.IEntityType</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.ITypeBase</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
                    Represents an entity in an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IConventionModel" />.
                </para>
      <para>
                    This interface is used during model creation and allows the metadata to be modified.
                    Once the model is built, <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IEntityType" /> represents a read-only view of the same metadata.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddForeignKey">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey AddForeignKey (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; properties, Microsoft.EntityFrameworkCore.Metadata.IConventionKey principalKey, Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType principalEntityType, bool setComponentConfigurationSource = true, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey AddForeignKey(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; properties, class Microsoft.EntityFrameworkCore.Metadata.IConventionKey principalKey, class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType principalEntityType, bool setComponentConfigurationSource, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.AddForeignKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IConventionProperty},Microsoft.EntityFrameworkCore.Metadata.IConventionKey,Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddForeignKey (properties As IReadOnlyList(Of IConventionProperty), principalKey As IConventionKey, principalEntityType As IConventionEntityType, Optional setComponentConfigurationSource As Boolean = true, Optional fromDataAnnotation As Boolean = false) As IConventionForeignKey" />
      <MemberSignature Language="F#" Value="abstract member AddForeignKey : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; * Microsoft.EntityFrameworkCore.Metadata.IConventionKey * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * bool * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey" Usage="iConventionEntityType.AddForeignKey (properties, principalKey, principalEntityType, setComponentConfigurationSource, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt;" />
        <Parameter Name="principalKey" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionKey" />
        <Parameter Name="principalEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" />
        <Parameter Name="setComponentConfigurationSource" Type="System.Boolean" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="properties"> The properties that the foreign key is defined on. </param>
        <param name="principalKey"> The primary or alternate key that is referenced. </param>
        <param name="principalEntityType">
                The entity type that the relationship targets. This may be different from the type that <paramref name="principalKey" />
                is defined on when the relationship targets a derived type in an inheritance hierarchy (since the key is defined on the
                base type of the hierarchy).
            </param>
        <param name="setComponentConfigurationSource">
                Indicates whether the configuration source should be set for the properties, principal key and principal end.
            </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Adds a new relationship to this entity type.
            </summary>
        <returns> The newly created foreign key. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIndex">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionIndex AddIndex (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; properties, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex AddIndex(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; properties, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.AddIndex(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IConventionProperty},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddIndex (properties As IReadOnlyList(Of IConventionProperty), Optional fromDataAnnotation As Boolean = false) As IConventionIndex" />
      <MemberSignature Language="F#" Value="abstract member AddIndex : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" Usage="iConventionEntityType.AddIndex (properties, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionIndex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="properties"> The properties that are to be indexed. </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Adds an unnamed index to this entity type.
            </summary>
        <returns> The newly created index. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddIndex">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionIndex AddIndex (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; properties, string name, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex AddIndex(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; properties, string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.AddIndex(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IConventionProperty},System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddIndex (properties As IReadOnlyList(Of IConventionProperty), name As String, Optional fromDataAnnotation As Boolean = false) As IConventionIndex" />
      <MemberSignature Language="F#" Value="abstract member AddIndex : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; * string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" Usage="iConventionEntityType.AddIndex (properties, name, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionIndex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt;" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="properties"> The properties that are to be indexed. </param>
        <param name="name"> The name of the index. </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Adds a named index to this entity type.
            </summary>
        <returns> The newly created index. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKey">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionKey AddKey (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; properties, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionKey AddKey(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; properties, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.AddKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IConventionProperty},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddKey (properties As IReadOnlyList(Of IConventionProperty), Optional fromDataAnnotation As Boolean = false) As IConventionKey" />
      <MemberSignature Language="F#" Value="abstract member AddKey : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionKey" Usage="iConventionEntityType.AddKey (properties, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="properties"> The properties that make up the alternate key. </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Adds a new alternate key to this entity type.
            </summary>
        <returns> The newly created key. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProperty">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionProperty AddProperty (string name, Type propertyType, System.Reflection.MemberInfo memberInfo, bool setTypeConfigurationSource = true, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty AddProperty(string name, class System.Type propertyType, class System.Reflection.MemberInfo memberInfo, bool setTypeConfigurationSource, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.AddProperty(System.String,System.Type,System.Reflection.MemberInfo,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddProperty (name As String, propertyType As Type, memberInfo As MemberInfo, Optional setTypeConfigurationSource As Boolean = true, Optional fromDataAnnotation As Boolean = false) As IConventionProperty" />
      <MemberSignature Language="F#" Value="abstract member AddProperty : string * Type * System.Reflection.MemberInfo * bool * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" Usage="iConventionEntityType.AddProperty (name, propertyType, memberInfo, setTypeConfigurationSource, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="setTypeConfigurationSource" Type="System.Boolean" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the property to add. </param>
        <param name="propertyType"> The type of value the property will hold. </param>
        <param name="memberInfo">
          <para>
                    The corresponding CLR type member or <see langword="null" /> for a shadow property.
                </para>
          <para>
                    An indexer with a <see cref="T:System.String" /> parameter and <see cref="T:System.Object" /> return type can be used.
                </para>
        </param>
        <param name="setTypeConfigurationSource"> Indicates whether the type configuration source should be set. </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Adds a property to this entity type.
            </summary>
        <returns> The newly created property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddServiceProperty">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionServiceProperty AddServiceProperty (System.Reflection.MemberInfo memberInfo, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionServiceProperty AddServiceProperty(class System.Reflection.MemberInfo memberInfo, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.AddServiceProperty(System.Reflection.MemberInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddServiceProperty (memberInfo As MemberInfo, Optional fromDataAnnotation As Boolean = false) As IConventionServiceProperty" />
      <MemberSignature Language="F#" Value="abstract member AddServiceProperty : System.Reflection.MemberInfo * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionServiceProperty" Usage="iConventionEntityType.AddServiceProperty (memberInfo, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionServiceProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="memberInfo"> The <see cref="T:System.Reflection.PropertyInfo" /> or <see cref="T:System.Reflection.FieldInfo" /> of the property to add. </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Adds a <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IConventionServiceProperty" /> to this entity type.
            </summary>
        <returns> The newly created property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSkipNavigation">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation AddSkipNavigation (string name, System.Reflection.MemberInfo memberInfo, Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType targetEntityType, bool collection, bool onDependent, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation AddSkipNavigation(string name, class System.Reflection.MemberInfo memberInfo, class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType targetEntityType, bool collection, bool onDependent, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.AddSkipNavigation(System.String,System.Reflection.MemberInfo,Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddSkipNavigation (name As String, memberInfo As MemberInfo, targetEntityType As IConventionEntityType, collection As Boolean, onDependent As Boolean, Optional fromDataAnnotation As Boolean = false) As IConventionSkipNavigation" />
      <MemberSignature Language="F#" Value="abstract member AddSkipNavigation : string * System.Reflection.MemberInfo * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * bool * bool * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation" Usage="iConventionEntityType.AddSkipNavigation (name, memberInfo, targetEntityType, collection, onDependent, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" Index="1" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="targetEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" Index="2" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="collection" Type="System.Boolean" Index="3" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="onDependent" Type="System.Boolean" Index="4" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="5" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the skip navigation property to add. </param>
        <param name="memberInfo">
          <para>
                    The corresponding CLR type member or <see langword="null" /> for a shadow property.
                </para>
          <para>
                    An indexer with a <see cref="T:System.String" /> parameter and <see cref="T:System.Object" /> return type can be used.
                </para>
        </param>
        <param name="targetEntityType"> The entity type that the skip navigation property will hold an instance(s) of.</param>
        <param name="collection"> Whether the navigation property is a collection property. </param>
        <param name="onDependent">
                Whether the navigation property is defined on the dependent side of the underlying foreign key.
            </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Adds a new skip navigation properties to this entity type.
            </summary>
        <returns> The newly created skip navigation property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType BaseType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As IConventionEntityType" />
      <MemberSignature Language="F#" Value="member this.BaseType : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" Usage="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the base type of this entity type. Returns <see langword="null" /> if this is not a derived type in an inheritance hierarchy.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Builder">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder Builder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder Builder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.Builder" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Builder As IConventionEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="member this.Builder : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Usage="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.Builder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the builder that can be used to configure this entity type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefiningEntityType">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType DefiningEntityType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType DefiningEntityType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.DefiningEntityType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefiningEntityType As IConventionEntityType" />
      <MemberSignature Language="F#" Value="member this.DefiningEntityType : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" Usage="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.DefiningEntityType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the defining entity type.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindDeclaredSkipNavigation">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation FindDeclaredSkipNavigation (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation FindDeclaredSkipNavigation(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.FindDeclaredSkipNavigation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindDeclaredSkipNavigation (name As String) As IConventionSkipNavigation" />
      <MemberSignature Language="F#" Value="abstract member FindDeclaredSkipNavigation : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation&#xA;override this.FindDeclaredSkipNavigation : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation" Usage="iConventionEntityType.FindDeclaredSkipNavigation name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the navigation property on the entity class. </param>
        <summary>
                Gets a skip navigation property on this entity type. Does not return skip navigation properties defined on a base type.
                Returns <see langword="null" /> if no skip navigation property is found.
            </summary>
        <returns> The navigation property, or <see langword="null" /> if none is found. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindForeignKey">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey FindForeignKey (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty&gt; properties, Microsoft.EntityFrameworkCore.Metadata.IKey principalKey, Microsoft.EntityFrameworkCore.Metadata.IEntityType principalEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey FindForeignKey(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IProperty&gt; properties, class Microsoft.EntityFrameworkCore.Metadata.IKey principalKey, class Microsoft.EntityFrameworkCore.Metadata.IEntityType principalEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.FindForeignKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindForeignKey (properties As IReadOnlyList(Of IProperty), principalKey As IKey, principalEntityType As IEntityType) As IConventionForeignKey" />
      <MemberSignature Language="F#" Value="abstract member FindForeignKey : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty&gt; * Microsoft.EntityFrameworkCore.Metadata.IKey * Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey" Usage="iConventionEntityType.FindForeignKey (properties, principalKey, principalEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty&gt;" />
        <Parameter Name="principalKey" Type="Microsoft.EntityFrameworkCore.Metadata.IKey" />
        <Parameter Name="principalEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
      </Parameters>
      <Docs>
        <param name="properties"> The properties that the foreign key is defined on. </param>
        <param name="principalKey"> The primary or alternate key that is referenced. </param>
        <param name="principalEntityType">
                The entity type that the relationship targets. This may be different from the type that <paramref name="principalKey" />
                is defined on when the relationship targets a derived type in an inheritance hierarchy (since the key is defined on the
                base type of the hierarchy).
            </param>
        <summary>
                Gets the foreign key for the given properties that points to a given primary or alternate key.
                Returns <see langword="null" /> if no foreign key is found.
            </summary>
        <returns> The foreign key, or <see langword="null" /> if none is defined. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindIndex">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionIndex FindIndex (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty&gt; properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex FindIndex(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IProperty&gt; properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.FindIndex(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindIndex (properties As IReadOnlyList(Of IProperty)) As IConventionIndex" />
      <MemberSignature Language="F#" Value="abstract member FindIndex : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" Usage="iConventionEntityType.FindIndex properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionIndex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty&gt;" />
      </Parameters>
      <Docs>
        <param name="properties"> The properties to find the index on. </param>
        <summary>
          <para>
                    Gets the unnamed index defined on the given properties. Returns <see langword="null" /> if no index is defined.
                </para>
          <para>
                    Named indexes will not be returned even if the list of properties matches.
                </para>
        </summary>
        <returns> The index, or <see langword="null" /> if none is found. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindIndex">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionIndex FindIndex (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex FindIndex(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.FindIndex(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindIndex (name As String) As IConventionIndex" />
      <MemberSignature Language="F#" Value="abstract member FindIndex : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" Usage="iConventionEntityType.FindIndex name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionIndex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the index to find. </param>
        <summary>
                Gets the index with the given name. Returns <see langword="null" /> if no such index exists.
            </summary>
        <returns> The index, or <see langword="null" /> if none is found. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindKey">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionKey FindKey (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty&gt; properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionKey FindKey(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IProperty&gt; properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.FindKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})" />
      <MemberSignature Language="VB.NET" Value="Public Function FindKey (properties As IReadOnlyList(Of IProperty)) As IConventionKey" />
      <MemberSignature Language="F#" Value="abstract member FindKey : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty&gt; -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionKey" Usage="iConventionEntityType.FindKey properties" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IProperty&gt;" />
      </Parameters>
      <Docs>
        <param name="properties"> The properties that make up the key. </param>
        <summary>
                Gets the primary or alternate key that is defined on the given properties.
                Returns <see langword="null" /> if no key is defined for the given properties.
            </summary>
        <returns> The key, or <see langword="null" /> if none is defined. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindPrimaryKey">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionKey FindPrimaryKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionKey FindPrimaryKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.FindPrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public Function FindPrimaryKey () As IConventionKey" />
      <MemberSignature Language="F#" Value="abstract member FindPrimaryKey : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionKey" Usage="iConventionEntityType.FindPrimaryKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionKey</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Gets primary key for this entity type. Returns <see langword="null" /> if no primary key is defined.
            </summary>
        <returns> The primary key, or <see langword="null" /> if none is defined. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindProperty">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionProperty FindProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty FindProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.FindProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindProperty (name As String) As IConventionProperty" />
      <MemberSignature Language="F#" Value="abstract member FindProperty : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" Usage="iConventionEntityType.FindProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the property. </param>
        <summary>
          <para>
                    Gets the property with a given name. Returns <see langword="null" /> if no property with the given name is defined.
                </para>
          <para>
                    This API only finds scalar properties and does not find navigation properties. Use
                    <see cref="M:Microsoft.EntityFrameworkCore.ConventionEntityTypeExtensions.FindNavigation(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.String)" /> to find
                    a navigation property.
                </para>
        </summary>
        <returns> The property, or <see langword="null" /> if none is found. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindServiceProperty">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionServiceProperty FindServiceProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionServiceProperty FindServiceProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.FindServiceProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindServiceProperty (name As String) As IConventionServiceProperty" />
      <MemberSignature Language="F#" Value="abstract member FindServiceProperty : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionServiceProperty" Usage="iConventionEntityType.FindServiceProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionServiceProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the property. </param>
        <summary>
          <para>
                    Gets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IConventionServiceProperty" /> with a given name.
                    Returns <see langword="null" /> if no property with the given name is defined.
                </para>
          <para>
                    This API only finds service properties and does not find scalar or navigation properties.
                </para>
        </summary>
        <returns> The service property, or <see langword="null" /> if none is found. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindSkipNavigation">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation FindSkipNavigation (System.Reflection.MemberInfo memberInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation FindSkipNavigation(class System.Reflection.MemberInfo memberInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.FindSkipNavigation(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindSkipNavigation (memberInfo As MemberInfo) As IConventionSkipNavigation" />
      <MemberSignature Language="F#" Value="abstract member FindSkipNavigation : System.Reflection.MemberInfo -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation&#xA;override this.FindSkipNavigation : System.Reflection.MemberInfo -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation" Usage="iConventionEntityType.FindSkipNavigation memberInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="memberInfo"> The navigation property on the entity class. </param>
        <summary>
                Gets a skip navigation property on this entity type. Returns <see langword="null" /> if no navigation property is found.
            </summary>
        <returns> The navigation property, or <see langword="null" /> if none is found. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindSkipNavigation">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation FindSkipNavigation (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation FindSkipNavigation(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.FindSkipNavigation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindSkipNavigation (name As String) As IConventionSkipNavigation" />
      <MemberSignature Language="F#" Value="abstract member FindSkipNavigation : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation" Usage="iConventionEntityType.FindSkipNavigation name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the navigation property on the entity class. </param>
        <summary>
                Gets a skip navigation property on this entity type. Returns <see langword="null" /> if no skip navigation property is found.
            </summary>
        <returns> The navigation property, or <see langword="null" /> if none is found. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBaseTypeConfigurationSource">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetBaseTypeConfigurationSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetBaseTypeConfigurationSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.GetBaseTypeConfigurationSource" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBaseTypeConfigurationSource () As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="abstract member GetBaseTypeConfigurationSource : unit -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="iConventionEntityType.GetBaseTypeConfigurationSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Returns the configuration source for the BaseType property.
            </summary>
        <returns> The configuration source for the BaseType property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfigurationSource">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource GetConfigurationSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource GetConfigurationSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.GetConfigurationSource" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConfigurationSource () As ConfigurationSource" />
      <MemberSignature Language="F#" Value="abstract member GetConfigurationSource : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" Usage="iConventionEntityType.GetConfigurationSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Gets the configuration source for this entity type.
            </summary>
        <returns> The configuration source. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeclaredSkipNavigations">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation&gt; GetDeclaredSkipNavigations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation&gt; GetDeclaredSkipNavigations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.GetDeclaredSkipNavigations" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDeclaredSkipNavigations () As IEnumerable(Of IConventionSkipNavigation)" />
      <MemberSignature Language="F#" Value="abstract member GetDeclaredSkipNavigations : unit -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation&gt;&#xA;override this.GetDeclaredSkipNavigations : unit -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation&gt;" Usage="iConventionEntityType.GetDeclaredSkipNavigations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
                    Gets the skip navigation properties declared on this entity type.
                </para>
          <para>
                    This method does not return skip navigation properties declared declared on base types.
                    It is useful when iterating over all entity types to avoid processing the same foreign key more than once.
                    Use <see cref="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.GetSkipNavigations" /> to also return skip navigation properties declared on base types.
                </para>
        </summary>
        <returns> Declared foreign keys. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetForeignKeys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt; GetForeignKeys ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt; GetForeignKeys() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.GetForeignKeys" />
      <MemberSignature Language="VB.NET" Value="Public Function GetForeignKeys () As IEnumerable(Of IConventionForeignKey)" />
      <MemberSignature Language="F#" Value="abstract member GetForeignKeys : unit -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt;" Usage="iConventionEntityType.GetForeignKeys " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Gets the foreign keys defined on this entity type.
            </summary>
        <returns> The foreign keys defined on this entity type. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIndexes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionIndex&gt; GetIndexes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex&gt; GetIndexes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.GetIndexes" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIndexes () As IEnumerable(Of IConventionIndex)" />
      <MemberSignature Language="F#" Value="abstract member GetIndexes : unit -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionIndex&gt;" Usage="iConventionEntityType.GetIndexes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionIndex&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Gets the indexes defined on this entity type.
            </summary>
        <returns> The indexes defined on this entity type. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsKeylessConfigurationSource">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetIsKeylessConfigurationSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetIsKeylessConfigurationSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.GetIsKeylessConfigurationSource" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsKeylessConfigurationSource () As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="abstract member GetIsKeylessConfigurationSource : unit -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="iConventionEntityType.GetIsKeylessConfigurationSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Returns the configuration source for the IsKeyless property.
            </summary>
        <returns> The configuration source for the IsKeyless property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionKey&gt; GetKeys ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionKey&gt; GetKeys() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.GetKeys" />
      <MemberSignature Language="VB.NET" Value="Public Function GetKeys () As IEnumerable(Of IConventionKey)" />
      <MemberSignature Language="F#" Value="abstract member GetKeys : unit -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionKey&gt;" Usage="iConventionEntityType.GetKeys " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionKey&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Gets the primary and alternate keys for this entity type.
            </summary>
        <returns> The primary and alternate keys. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryKeyConfigurationSource">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetPrimaryKeyConfigurationSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetPrimaryKeyConfigurationSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.GetPrimaryKeyConfigurationSource" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryKeyConfigurationSource () As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="abstract member GetPrimaryKeyConfigurationSource : unit -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="iConventionEntityType.GetPrimaryKeyConfigurationSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Returns the configuration source for the primary key.
            </summary>
        <returns> The configuration source for the primary key. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; GetProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; GetProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.GetProperties" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperties () As IEnumerable(Of IConventionProperty)" />
      <MemberSignature Language="F#" Value="abstract member GetProperties : unit -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt;" Usage="iConventionEntityType.GetProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
                    Gets the properties defined on this entity type.
                </para>
          <para>
                    This API only returns scalar properties and does not return navigation properties. Use
                    <see cref="M:Microsoft.EntityFrameworkCore.ConventionEntityTypeExtensions.GetNavigations(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType)" /> to get navigation
                    properties.
                </para>
        </summary>
        <returns> The properties defined on this entity type. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetServiceProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionServiceProperty&gt; GetServiceProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionServiceProperty&gt; GetServiceProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.GetServiceProperties" />
      <MemberSignature Language="VB.NET" Value="Public Function GetServiceProperties () As IEnumerable(Of IConventionServiceProperty)" />
      <MemberSignature Language="F#" Value="abstract member GetServiceProperties : unit -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionServiceProperty&gt;" Usage="iConventionEntityType.GetServiceProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionServiceProperty&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
                    Gets all the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IConventionServiceProperty" /> defined on this entity type.
                </para>
          <para>
                    This API only returns service properties and does not return scalar or navigation properties.
                </para>
        </summary>
        <returns> The service properties defined on this entity type. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSkipNavigations">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation&gt; GetSkipNavigations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation&gt; GetSkipNavigations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.GetSkipNavigations" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSkipNavigations () As IEnumerable(Of IConventionSkipNavigation)" />
      <MemberSignature Language="F#" Value="abstract member GetSkipNavigations : unit -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation&gt;" Usage="iConventionEntityType.GetSkipNavigations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                Gets all skip navigation properties on this entity type.
            </summary>
        <returns> All skip navigation properties on this entity type. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasBaseType">
      <MemberSignature Language="C#" Value="public void HasBaseType (Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HasBaseType(class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.HasBaseType(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub HasBaseType (entityType As IConventionEntityType, Optional fromDataAnnotation As Boolean = false)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="abstract member HasBaseType : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * bool -&gt; unit" Usage="iConventionEntityType.HasBaseType (entityType, fromDataAnnotation)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public virtual void HasBaseType (Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub HasBaseType (entityType As IConventionEntityType, Optional fromDataAnnotation As Boolean = false)" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="abstract member HasBaseType : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * bool -&gt; unit&#xA;override this.HasBaseType : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * bool -&gt; unit" Usage="iConventionEntityType.HasBaseType (entityType, fromDataAnnotation)" FrameworkAlternate="efcore-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0">
          <AttributeName Language="C#">[System.Obsolete("Use SetBaseType")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use SetBaseType")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entityType"> The base entity type.</param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Sets the base type of this entity type. Returns <see langword="null" /> if this is not a derived type in an inheritance hierarchy.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasNoKey">
      <MemberSignature Language="C#" Value="public void HasNoKey (bool? keyless, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HasNoKey(valuetype System.Nullable`1&lt;bool&gt; keyless, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.HasNoKey(System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub HasNoKey (keyless As Nullable(Of Boolean), Optional fromDataAnnotation As Boolean = false)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="abstract member HasNoKey : Nullable&lt;bool&gt; * bool -&gt; unit" Usage="iConventionEntityType.HasNoKey (keyless, fromDataAnnotation)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public virtual void HasNoKey (bool? keyless, bool fromDataAnnotation = false);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub HasNoKey (keyless As Nullable(Of Boolean), Optional fromDataAnnotation As Boolean = false)" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="abstract member HasNoKey : Nullable&lt;bool&gt; * bool -&gt; unit&#xA;override this.HasNoKey : Nullable&lt;bool&gt; * bool -&gt; unit" Usage="iConventionEntityType.HasNoKey (keyless, fromDataAnnotation)" FrameworkAlternate="efcore-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0">
          <AttributeName Language="C#">[System.Obsolete("Use SetIsKeyless")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use SetIsKeyless")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyless" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="keyless"> A value indicating whether the entity type to has no keys. </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Sets a value indicating whether the entity type has no keys.
                When set to <see langword="true" /> it will only be usable for queries.
                <see langword="null" /> to reset to default.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyless">
      <MemberSignature Language="C#" Value="public bool IsKeyless { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyless" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.IsKeyless" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyless As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsKeyless : bool" Usage="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.IsKeyless" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets a value indicating whether the entity type has no keys.
                If <see langword="true" /> it will only be usable for queries.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Model">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionModel Model { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.IConventionModel Model" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.Model" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Model As IConventionModel" />
      <MemberSignature Language="F#" Value="member this.Model : Microsoft.EntityFrameworkCore.Metadata.IConventionModel" Usage="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.Model" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Metadata.IConventionTypeBase.Model</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets the model this entity belongs to.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveForeignKey">
      <MemberSignature Language="C#" Value="public void RemoveForeignKey (Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey foreignKey);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveForeignKey(class Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey foreignKey) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.RemoveForeignKey(Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveForeignKey (foreignKey As IConventionForeignKey)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="abstract member RemoveForeignKey : Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey -&gt; unit" Usage="iConventionEntityType.RemoveForeignKey foreignKey" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey RemoveForeignKey (Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey foreignKey);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey RemoveForeignKey(class Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey foreignKey) cil managed" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveForeignKey (foreignKey As IConventionForeignKey) As IConventionForeignKey" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="abstract member RemoveForeignKey : Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey" Usage="iConventionEntityType.RemoveForeignKey foreignKey" FrameworkAlternate="efcore-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Void</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0">Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey" />
      </Parameters>
      <Docs>
        <param name="foreignKey"> The foreign key to be removed. </param>
        <summary>
                Removes a foreign key from this entity type.
            </summary>
        <returns> The removed foreign key. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveIndex">
      <MemberSignature Language="C#" Value="public void RemoveIndex (Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveIndex(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.RemoveIndex(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveIndex (index As IConventionIndex)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="abstract member RemoveIndex : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex -&gt; unit" Usage="iConventionEntityType.RemoveIndex index" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionIndex RemoveIndex (Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex RemoveIndex(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index) cil managed" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveIndex (index As IConventionIndex) As IConventionIndex" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="abstract member RemoveIndex : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" Usage="iConventionEntityType.RemoveIndex index" FrameworkAlternate="efcore-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Void</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0">Microsoft.EntityFrameworkCore.Metadata.IConventionIndex</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" />
      </Parameters>
      <Docs>
        <param name="index"> The index to remove. </param>
        <summary>
                Removes an index from this entity type.
            </summary>
        <returns> The removed index. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveKey">
      <MemberSignature Language="C#" Value="public void RemoveKey (Microsoft.EntityFrameworkCore.Metadata.IConventionKey key);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveKey(class Microsoft.EntityFrameworkCore.Metadata.IConventionKey key) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.RemoveKey(Microsoft.EntityFrameworkCore.Metadata.IConventionKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveKey (key As IConventionKey)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="abstract member RemoveKey : Microsoft.EntityFrameworkCore.Metadata.IConventionKey -&gt; unit" Usage="iConventionEntityType.RemoveKey key" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionKey RemoveKey (Microsoft.EntityFrameworkCore.Metadata.IConventionKey key);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionKey RemoveKey(class Microsoft.EntityFrameworkCore.Metadata.IConventionKey key) cil managed" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveKey (key As IConventionKey) As IConventionKey" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="abstract member RemoveKey : Microsoft.EntityFrameworkCore.Metadata.IConventionKey -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionKey" Usage="iConventionEntityType.RemoveKey key" FrameworkAlternate="efcore-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Void</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0">Microsoft.EntityFrameworkCore.Metadata.IConventionKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionKey" />
      </Parameters>
      <Docs>
        <param name="key"> The key to be removed. </param>
        <summary>
                Removes a primary or alternate key from this entity type.
            </summary>
        <returns> The removed key. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public void RemoveProperty (Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property);" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveProperty(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property) cil managed" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.RemoveProperty(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveProperty (property As IConventionProperty)" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="F#" Value="abstract member RemoveProperty : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty -&gt; unit" Usage="iConventionEntityType.RemoveProperty property" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionProperty RemoveProperty (Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property);" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty RemoveProperty(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property) cil managed" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveProperty (property As IConventionProperty) As IConventionProperty" FrameworkAlternate="efcore-5.0" />
      <MemberSignature Language="F#" Value="abstract member RemoveProperty : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" Usage="iConventionEntityType.RemoveProperty property" FrameworkAlternate="efcore-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-3.0;efcore-3.1">System.Void</ReturnType>
        <ReturnType FrameworkAlternate="efcore-5.0">Microsoft.EntityFrameworkCore.Metadata.IConventionProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" />
      </Parameters>
      <Docs>
        <param name="property"> The property to remove. </param>
        <summary>
                Removes a property from this entity type.
            </summary>
        <returns> The removed property. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveServiceProperty">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionServiceProperty RemoveServiceProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionServiceProperty RemoveServiceProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.RemoveServiceProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveServiceProperty (name As String) As IConventionServiceProperty" />
      <MemberSignature Language="F#" Value="abstract member RemoveServiceProperty : string -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionServiceProperty" Usage="iConventionEntityType.RemoveServiceProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionServiceProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"> The name of the property to remove. </param>
        <summary>
                Removes an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IConventionServiceProperty" /> from this entity type.
            </summary>
        <returns> The property that was removed. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSkipNavigation">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation RemoveSkipNavigation (Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation RemoveSkipNavigation(class Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.RemoveSkipNavigation(Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveSkipNavigation (navigation As IConventionSkipNavigation) As IConventionSkipNavigation" />
      <MemberSignature Language="F#" Value="abstract member RemoveSkipNavigation : Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation" Usage="iConventionEntityType.RemoveSkipNavigation navigation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="navigation"> The skip navigation to be removed. </param>
        <summary>
                Removes a skip navigation property from this entity type.
            </summary>
        <returns> The removed skip navigation. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBaseType">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType SetBaseType (Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType SetBaseType(class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.SetBaseType(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetBaseType (entityType As IConventionEntityType, Optional fromDataAnnotation As Boolean = false) As IConventionEntityType" />
      <MemberSignature Language="F#" Value="abstract member SetBaseType : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" Usage="iConventionEntityType.SetBaseType (entityType, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="entityType"> The base entity type.</param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Sets the base type of this entity type. Returns <see langword="null" /> if this is not a derived type in an inheritance hierarchy.
            </summary>
        <returns> The new base type. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsKeyless">
      <MemberSignature Language="C#" Value="public bool? SetIsKeyless (bool? keyless, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Nullable`1&lt;bool&gt; SetIsKeyless(valuetype System.Nullable`1&lt;bool&gt; keyless, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.SetIsKeyless(System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetIsKeyless (keyless As Nullable(Of Boolean), Optional fromDataAnnotation As Boolean = false) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetIsKeyless : Nullable&lt;bool&gt; * bool -&gt; Nullable&lt;bool&gt;" Usage="iConventionEntityType.SetIsKeyless (keyless, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyless" Type="System.Nullable&lt;System.Boolean&gt;" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="keyless"> A value indicating whether the entity type to has no keys. </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Sets a value indicating whether the entity type has no keys.
                When set to <see langword="true" /> it will only be usable for queries.
                <see langword="null" /> to reset to default.
            </summary>
        <returns> The new configuration value. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPrimaryKey">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IConventionKey SetPrimaryKey (Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionKey SetPrimaryKey(class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty property, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.SetPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.IConventionProperty,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetPrimaryKey (property As IConventionProperty, Optional fromDataAnnotation As Boolean = false) As IConventionKey" />
      <MemberSignature Language="F#" Value="abstract member SetPrimaryKey : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionKey&#xA;override this.SetPrimaryKey : Microsoft.EntityFrameworkCore.Metadata.IConventionProperty * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionKey" Usage="iConventionEntityType.SetPrimaryKey (property, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionProperty" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="1" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="property"> The primary key property. </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Sets the primary key for this entity type.
            </summary>
        <returns> The newly created key. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPrimaryKey">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Metadata.IConventionKey SetPrimaryKey (System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; properties, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionKey SetPrimaryKey(class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; properties, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType.SetPrimaryKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IConventionProperty},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetPrimaryKey (properties As IReadOnlyList(Of IConventionProperty), Optional fromDataAnnotation As Boolean = false) As IConventionKey" />
      <MemberSignature Language="F#" Value="abstract member SetPrimaryKey : System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt; * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionKey" Usage="iConventionEntityType.SetPrimaryKey (properties, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionProperty&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="properties"> The properties that make up the primary key. </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Sets the primary key for this entity type.
            </summary>
        <returns> The newly created key. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
