<Type Name="RelationalQueryContextDependencies" FullName="Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies">
  <TypeSignature Language="C#" Value="public sealed class RelationalQueryContextDependencies" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RelationalQueryContextDependencies extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RelationalQueryContextDependencies" />
  <TypeSignature Language="F#" Value="type RelationalQueryContextDependencies = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    Service dependencies parameter class for <see cref="T:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext" /></para>
      <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
      <para>
                    Do not construct instances of this class directly from either provider or application code as the
                    constructor signature may change as new dependencies are added. Instead, use this type in
                    your constructor so that an instance will be created and injected automatically by the
                    dependency injection container. To create an instance with some dependent services replaced,
                    first resolve the object from the dependency injection container, then replace selected
                    services using the 'With...' methods. Do not call the constructor at any point in this process.
                </para>
      <para>
                    The service lifetime is <see cref="F:Microsoft.Extensions.DependencyInjection.ServiceLifetime.Scoped" />. This means that each
                    <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instance will use its own instance of this service.
                    The implementation may depend on other services registered with any lifetime.
                    The implementation does not need to be thread-safe.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalQueryContextDependencies (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection relationalConnection, Microsoft.EntityFrameworkCore.Query.IRelationalQueryStringFactory relationalQueryStringFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection relationalConnection, class Microsoft.EntityFrameworkCore.Query.IRelationalQueryStringFactory relationalQueryStringFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Query.IRelationalQueryStringFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (relationalConnection As IRelationalConnection, relationalQueryStringFactory As IRelationalQueryStringFactory)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * Microsoft.EntityFrameworkCore.Query.IRelationalQueryStringFactory -&gt; Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies" Usage="new Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies (relationalConnection, relationalQueryStringFactory)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-5.0">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="relationalConnection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="0" FrameworkAlternate="efcore-5.0" />
        <Parameter Name="relationalQueryStringFactory" Type="Microsoft.EntityFrameworkCore.Query.IRelationalQueryStringFactory" Index="1" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="relationalConnection">To be added.</param>
        <param name="relationalQueryStringFactory">To be added.</param>
        <summary>
          <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext" />.
                </para>
          <para>
                    Do not call this constructor directly from either provider or application code as it may change
                    as new dependencies are added. Instead, use this type in your constructor so that an instance
                    will be created and injected automatically by the dependency injection container. To create
                    an instance with some dependent services replaced, first resolve the object from the dependency
                    injection container, then replace selected services using the 'With...' methods. Do not call
                    the constructor at any point in this process.
                </para>
          <para>
                    This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                    the same compatibility standards as public APIs. It may be changed or removed without notice in
                    any release. You should only use it directly in your code with extreme caution and knowing that
                    doing so can result in application failures when updating to a new Entity Framework Core release.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalQueryContextDependencies (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection relationalConnection, Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory executionStrategyFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection relationalConnection, class Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory executionStrategyFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (relationalConnection As IRelationalConnection, executionStrategyFactory As IExecutionStrategyFactory)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory -&gt; Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies" Usage="new Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies (relationalConnection, executionStrategyFactory)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="relationalConnection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="executionStrategyFactory" Type="Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="relationalConnection">To be added.</param>
        <param name="executionStrategyFactory">To be added.</param>
        <summary>
          <para>
                    Creates the service dependencies parameter object for a <see cref="T:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext" />.
                </para>
          <para>
                    Do not call this constructor directly from either provider or application code as it may change
                    as new dependencies are added. Instead, use this type in your constructor so that an instance
                    will be created and injected automatically by the dependency injection container. To create
                    an instance with some dependent services replaced, first resolve the object from the dependency
                    injection container, then replace selected services using the 'With...' methods. Do not call
                    the constructor at any point in this process.
                </para>
          <para>
                    This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                    the same compatibility standards as public APIs. It may be changed or removed without notice in
                    any release. You should only use it directly in your code with extreme caution and knowing that
                    doing so can result in application failures when updating to a new Entity Framework Core release.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionStrategyFactory">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory ExecutionStrategyFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory ExecutionStrategyFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies.ExecutionStrategyFactory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExecutionStrategyFactory As IExecutionStrategyFactory" />
      <MemberSignature Language="F#" Value="member this.ExecutionStrategyFactory : Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory" Usage="Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies.ExecutionStrategyFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.1">
          <AttributeName Language="C#">[System.Obsolete("Moved to QueryContextDependencies")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Moved to QueryContextDependencies")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The execution strategy.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationalConnection">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Storage.IRelationalConnection RelationalConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection RelationalConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies.RelationalConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationalConnection As IRelationalConnection" />
      <MemberSignature Language="F#" Value="member this.RelationalConnection : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Usage="Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies.RelationalConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The connection.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationalQueryStringFactory">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.IRelationalQueryStringFactory RelationalQueryStringFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.IRelationalQueryStringFactory RelationalQueryStringFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies.RelationalQueryStringFactory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RelationalQueryStringFactory As IRelationalQueryStringFactory" />
      <MemberSignature Language="F#" Value="member this.RelationalQueryStringFactory : Microsoft.EntityFrameworkCore.Query.IRelationalQueryStringFactory" Usage="Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies.RelationalQueryStringFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.IRelationalQueryStringFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                A factory for creating a readable query string from a <see cref="T:System.Data.Common.DbCommand" /></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies With (Microsoft.EntityFrameworkCore.Query.IRelationalQueryStringFactory relationalQueryStringFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies With(class Microsoft.EntityFrameworkCore.Query.IRelationalQueryStringFactory relationalQueryStringFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies.With(Microsoft.EntityFrameworkCore.Query.IRelationalQueryStringFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (relationalQueryStringFactory As IRelationalQueryStringFactory) As RelationalQueryContextDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Query.IRelationalQueryStringFactory -&gt; Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies" Usage="relationalQueryContextDependencies.With relationalQueryStringFactory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationalQueryStringFactory" Type="Microsoft.EntityFrameworkCore.Query.IRelationalQueryStringFactory" Index="0" FrameworkAlternate="efcore-5.0" />
      </Parameters>
      <Docs>
        <param name="relationalQueryStringFactory"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies With (Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory executionStrategyFactory);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies With(class Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory executionStrategyFactory) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies.With(Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (executionStrategyFactory As IExecutionStrategyFactory) As RelationalQueryContextDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory -&gt; Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies" Usage="relationalQueryContextDependencies.With executionStrategyFactory" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executionStrategyFactory" Type="Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="executionStrategyFactory"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="With">
      <MemberSignature Language="C#" Value="public Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies With (Microsoft.EntityFrameworkCore.Storage.IRelationalConnection relationalConnection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies With(class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection relationalConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies.With(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Function With (relationalConnection As IRelationalConnection) As RelationalQueryContextDependencies" />
      <MemberSignature Language="F#" Value="member this.With : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection -&gt; Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies" Usage="relationalQueryContextDependencies.With relationalConnection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.RelationalQueryContextDependencies</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationalConnection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
      </Parameters>
      <Docs>
        <param name="relationalConnection"> A replacement for the current dependency of this type. </param>
        <summary>
                Clones this dependency parameter object with one service replaced.
            </summary>
        <returns> A new parameter object with the given service replaced. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
