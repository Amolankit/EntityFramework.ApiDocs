<Type Name="TransparentIdentifierFactory" FullName="Microsoft.EntityFrameworkCore.Query.TransparentIdentifierFactory">
  <TypeSignature Language="C#" Value="public static class TransparentIdentifierFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit TransparentIdentifierFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.TransparentIdentifierFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class TransparentIdentifierFactory" />
  <TypeSignature Language="F#" Value="type TransparentIdentifierFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Type Create (Type outerType, Type innerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type Create(class System.Type outerType, class System.Type innerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.TransparentIdentifierFactory.Create(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (outerType As Type, innerType As Type) As Type" />
      <MemberSignature Language="F#" Value="static member Create : Type * Type -&gt; Type" Usage="Microsoft.EntityFrameworkCore.Query.TransparentIdentifierFactory.Create (outerType, innerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outerType" Type="System.Type" />
        <Parameter Name="innerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="outerType">To be added.</param>
        <param name="innerType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
