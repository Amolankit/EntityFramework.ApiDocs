<Type Name="QuerySqlGenerator" FullName="Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator">
  <TypeSignature Language="C#" Value="public class QuerySqlGenerator : Microsoft.EntityFrameworkCore.Query.SqlExpressionVisitor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QuerySqlGenerator extends Microsoft.EntityFrameworkCore.Query.SqlExpressionVisitor" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator" />
  <TypeSignature Language="VB.NET" Value="Public Class QuerySqlGenerator&#xA;Inherits SqlExpressionVisitor" />
  <TypeSignature Language="F#" Value="type QuerySqlGenerator = class&#xA;    inherit SqlExpressionVisitor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Query.SqlExpressionVisitor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QuerySqlGenerator (Microsoft.EntityFrameworkCore.Query.QuerySqlGeneratorDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Query.QuerySqlGeneratorDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.#ctor(Microsoft.EntityFrameworkCore.Query.QuerySqlGeneratorDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As QuerySqlGeneratorDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator : Microsoft.EntityFrameworkCore.Query.QuerySqlGeneratorDependencies -&gt; Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator" Usage="new Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Query.QuerySqlGeneratorDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AliasSeparator">
      <MemberSignature Language="C#" Value="protected virtual string AliasSeparator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AliasSeparator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.AliasSeparator" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property AliasSeparator As String" />
      <MemberSignature Language="F#" Value="member this.AliasSeparator : string" Usage="Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.AliasSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                The default alias separator.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependencies">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Query.QuerySqlGeneratorDependencies Dependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Query.QuerySqlGeneratorDependencies Dependencies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.Dependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Dependencies As QuerySqlGeneratorDependencies" />
      <MemberSignature Language="F#" Value="member this.Dependencies : Microsoft.EntityFrameworkCore.Query.QuerySqlGeneratorDependencies" Usage="Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.Dependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Query.QuerySqlGeneratorDependencies</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateLimitOffset">
      <MemberSignature Language="C#" Value="protected virtual void GenerateLimitOffset (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateLimitOffset(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.GenerateLimitOffset(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression)" />
      <MemberSignature Language="F#" Value="abstract member GenerateLimitOffset : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression -&gt; unit&#xA;override this.GenerateLimitOffset : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression -&gt; unit" Usage="querySqlGenerator.GenerateLimitOffset selectExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression" />
      </Parameters>
      <Docs>
        <param name="selectExpression">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateOperator">
      <MemberSignature Language="C#" Value="protected virtual string GenerateOperator (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlBinaryExpression binaryExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GenerateOperator(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlBinaryExpression binaryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.GenerateOperator(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlBinaryExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GenerateOperator (binaryExpression As SqlBinaryExpression) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateOperator : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlBinaryExpression -&gt; string&#xA;override this.GenerateOperator : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlBinaryExpression -&gt; string" Usage="querySqlGenerator.GenerateOperator binaryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binaryExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlBinaryExpression" />
      </Parameters>
      <Docs>
        <param name="binaryExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateOrderings">
      <MemberSignature Language="C#" Value="protected virtual void GenerateOrderings (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateOrderings(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.GenerateOrderings(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression)" />
      <MemberSignature Language="F#" Value="abstract member GenerateOrderings : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression -&gt; unit&#xA;override this.GenerateOrderings : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression -&gt; unit" Usage="querySqlGenerator.GenerateOrderings selectExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression" />
      </Parameters>
      <Docs>
        <param name="selectExpression">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateSetOperation">
      <MemberSignature Language="C#" Value="protected virtual void GenerateSetOperation (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SetOperationBase setOperation);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateSetOperation(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SetOperationBase setOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.GenerateSetOperation(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SetOperationBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateSetOperation (setOperation As SetOperationBase)" />
      <MemberSignature Language="F#" Value="abstract member GenerateSetOperation : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SetOperationBase -&gt; unit&#xA;override this.GenerateSetOperation : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SetOperationBase -&gt; unit" Usage="querySqlGenerator.GenerateSetOperation setOperation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setOperation" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SetOperationBase" />
      </Parameters>
      <Docs>
        <param name="setOperation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateSetOperationOperand">
      <MemberSignature Language="C#" Value="protected virtual void GenerateSetOperationOperand (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SetOperationBase setOperation, Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression operand);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateSetOperationOperand(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SetOperationBase setOperation, class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression operand) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.GenerateSetOperationOperand(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SetOperationBase,Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GenerateSetOperationOperand (setOperation As SetOperationBase, operand As SelectExpression)" />
      <MemberSignature Language="F#" Value="abstract member GenerateSetOperationOperand : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SetOperationBase * Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression -&gt; unit&#xA;override this.GenerateSetOperationOperand : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SetOperationBase * Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression -&gt; unit" Usage="querySqlGenerator.GenerateSetOperationOperand (setOperation, operand)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setOperation" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SetOperationBase" />
        <Parameter Name="operand" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression" />
      </Parameters>
      <Docs>
        <param name="setOperation">To be added.</param>
        <param name="operand">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateTagsHeaderComment">
      <MemberSignature Language="C#" Value="protected virtual void GenerateTagsHeaderComment (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateTagsHeaderComment(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.GenerateTagsHeaderComment(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression)" />
      <MemberSignature Language="F#" Value="abstract member GenerateTagsHeaderComment : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression -&gt; unit&#xA;override this.GenerateTagsHeaderComment : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression -&gt; unit" Usage="querySqlGenerator.GenerateTagsHeaderComment selectExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression" />
      </Parameters>
      <Docs>
        <param name="selectExpression">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateTop">
      <MemberSignature Language="C#" Value="protected virtual void GenerateTop (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GenerateTop(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.GenerateTop(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression)" />
      <MemberSignature Language="F#" Value="abstract member GenerateTop : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression -&gt; unit&#xA;override this.GenerateTop : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression -&gt; unit" Usage="querySqlGenerator.GenerateTop selectExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression" />
      </Parameters>
      <Docs>
        <param name="selectExpression">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCommand">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.IRelationalCommand GetCommand (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Storage.IRelationalCommand GetCommand(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.GetCommand(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression)" />
      <MemberSignature Language="F#" Value="abstract member GetCommand : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommand&#xA;override this.GetCommand : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression -&gt; Microsoft.EntityFrameworkCore.Storage.IRelationalCommand" Usage="querySqlGenerator.GetCommand selectExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression" />
      </Parameters>
      <Docs>
        <param name="selectExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sql">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder Sql { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder Sql" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.Sql" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Sql As IRelationalCommandBuilder" />
      <MemberSignature Language="F#" Value="member this.Sql : Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" Usage="Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.Sql" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitCase">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitCase (Microsoft.EntityFrameworkCore.Query.SqlExpressions.CaseExpression caseExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitCase(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.CaseExpression caseExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.VisitCase(Microsoft.EntityFrameworkCore.Query.SqlExpressions.CaseExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitCase : Microsoft.EntityFrameworkCore.Query.SqlExpressions.CaseExpression -&gt; System.Linq.Expressions.Expression" Usage="querySqlGenerator.VisitCase caseExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="caseExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.CaseExpression" />
      </Parameters>
      <Docs>
        <param name="caseExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitColumn">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitColumn (Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression columnExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitColumn(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression columnExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.VisitColumn(Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitColumn : Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression -&gt; System.Linq.Expressions.Expression" Usage="querySqlGenerator.VisitColumn columnExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ColumnExpression" />
      </Parameters>
      <Docs>
        <param name="columnExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitCrossApply">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitCrossApply (Microsoft.EntityFrameworkCore.Query.SqlExpressions.CrossApplyExpression crossApplyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitCrossApply(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.CrossApplyExpression crossApplyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.VisitCrossApply(Microsoft.EntityFrameworkCore.Query.SqlExpressions.CrossApplyExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitCrossApply : Microsoft.EntityFrameworkCore.Query.SqlExpressions.CrossApplyExpression -&gt; System.Linq.Expressions.Expression" Usage="querySqlGenerator.VisitCrossApply crossApplyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="crossApplyExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.CrossApplyExpression" />
      </Parameters>
      <Docs>
        <param name="crossApplyExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitCrossJoin">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitCrossJoin (Microsoft.EntityFrameworkCore.Query.SqlExpressions.CrossJoinExpression crossJoinExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitCrossJoin(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.CrossJoinExpression crossJoinExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.VisitCrossJoin(Microsoft.EntityFrameworkCore.Query.SqlExpressions.CrossJoinExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitCrossJoin : Microsoft.EntityFrameworkCore.Query.SqlExpressions.CrossJoinExpression -&gt; System.Linq.Expressions.Expression" Usage="querySqlGenerator.VisitCrossJoin crossJoinExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="crossJoinExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.CrossJoinExpression" />
      </Parameters>
      <Docs>
        <param name="crossJoinExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExcept">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitExcept (Microsoft.EntityFrameworkCore.Query.SqlExpressions.ExceptExpression exceptExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitExcept(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.ExceptExpression exceptExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.VisitExcept(Microsoft.EntityFrameworkCore.Query.SqlExpressions.ExceptExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitExcept : Microsoft.EntityFrameworkCore.Query.SqlExpressions.ExceptExpression -&gt; System.Linq.Expressions.Expression" Usage="querySqlGenerator.VisitExcept exceptExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exceptExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ExceptExpression" />
      </Parameters>
      <Docs>
        <param name="exceptExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExists">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitExists (Microsoft.EntityFrameworkCore.Query.SqlExpressions.ExistsExpression existsExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitExists(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.ExistsExpression existsExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.VisitExists(Microsoft.EntityFrameworkCore.Query.SqlExpressions.ExistsExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitExists : Microsoft.EntityFrameworkCore.Query.SqlExpressions.ExistsExpression -&gt; System.Linq.Expressions.Expression" Usage="querySqlGenerator.VisitExists existsExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="existsExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ExistsExpression" />
      </Parameters>
      <Docs>
        <param name="existsExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitFromSql">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitFromSql (Microsoft.EntityFrameworkCore.Query.SqlExpressions.FromSqlExpression fromSqlExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitFromSql(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.FromSqlExpression fromSqlExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.VisitFromSql(Microsoft.EntityFrameworkCore.Query.SqlExpressions.FromSqlExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitFromSql : Microsoft.EntityFrameworkCore.Query.SqlExpressions.FromSqlExpression -&gt; System.Linq.Expressions.Expression" Usage="querySqlGenerator.VisitFromSql fromSqlExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromSqlExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.FromSqlExpression" />
      </Parameters>
      <Docs>
        <param name="fromSqlExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitIn">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitIn (Microsoft.EntityFrameworkCore.Query.SqlExpressions.InExpression inExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitIn(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.InExpression inExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.VisitIn(Microsoft.EntityFrameworkCore.Query.SqlExpressions.InExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitIn : Microsoft.EntityFrameworkCore.Query.SqlExpressions.InExpression -&gt; System.Linq.Expressions.Expression" Usage="querySqlGenerator.VisitIn inExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.InExpression" />
      </Parameters>
      <Docs>
        <param name="inExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitInnerJoin">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitInnerJoin (Microsoft.EntityFrameworkCore.Query.SqlExpressions.InnerJoinExpression innerJoinExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitInnerJoin(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.InnerJoinExpression innerJoinExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.VisitInnerJoin(Microsoft.EntityFrameworkCore.Query.SqlExpressions.InnerJoinExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitInnerJoin : Microsoft.EntityFrameworkCore.Query.SqlExpressions.InnerJoinExpression -&gt; System.Linq.Expressions.Expression" Usage="querySqlGenerator.VisitInnerJoin innerJoinExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="innerJoinExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.InnerJoinExpression" />
      </Parameters>
      <Docs>
        <param name="innerJoinExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitIntersect">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitIntersect (Microsoft.EntityFrameworkCore.Query.SqlExpressions.IntersectExpression intersectExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitIntersect(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.IntersectExpression intersectExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.VisitIntersect(Microsoft.EntityFrameworkCore.Query.SqlExpressions.IntersectExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitIntersect : Microsoft.EntityFrameworkCore.Query.SqlExpressions.IntersectExpression -&gt; System.Linq.Expressions.Expression" Usage="querySqlGenerator.VisitIntersect intersectExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intersectExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.IntersectExpression" />
      </Parameters>
      <Docs>
        <param name="intersectExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLeftJoin">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitLeftJoin (Microsoft.EntityFrameworkCore.Query.SqlExpressions.LeftJoinExpression leftJoinExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitLeftJoin(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.LeftJoinExpression leftJoinExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.VisitLeftJoin(Microsoft.EntityFrameworkCore.Query.SqlExpressions.LeftJoinExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitLeftJoin : Microsoft.EntityFrameworkCore.Query.SqlExpressions.LeftJoinExpression -&gt; System.Linq.Expressions.Expression" Usage="querySqlGenerator.VisitLeftJoin leftJoinExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftJoinExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.LeftJoinExpression" />
      </Parameters>
      <Docs>
        <param name="leftJoinExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLike">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitLike (Microsoft.EntityFrameworkCore.Query.SqlExpressions.LikeExpression likeExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitLike(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.LikeExpression likeExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.VisitLike(Microsoft.EntityFrameworkCore.Query.SqlExpressions.LikeExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitLike : Microsoft.EntityFrameworkCore.Query.SqlExpressions.LikeExpression -&gt; System.Linq.Expressions.Expression" Usage="querySqlGenerator.VisitLike likeExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="likeExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.LikeExpression" />
      </Parameters>
      <Docs>
        <param name="likeExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitOrdering">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitOrdering (Microsoft.EntityFrameworkCore.Query.SqlExpressions.OrderingExpression orderingExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitOrdering(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.OrderingExpression orderingExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.VisitOrdering(Microsoft.EntityFrameworkCore.Query.SqlExpressions.OrderingExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitOrdering : Microsoft.EntityFrameworkCore.Query.SqlExpressions.OrderingExpression -&gt; System.Linq.Expressions.Expression" Usage="querySqlGenerator.VisitOrdering orderingExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="orderingExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.OrderingExpression" />
      </Parameters>
      <Docs>
        <param name="orderingExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitOuterApply">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitOuterApply (Microsoft.EntityFrameworkCore.Query.SqlExpressions.OuterApplyExpression outerApplyExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitOuterApply(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.OuterApplyExpression outerApplyExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.VisitOuterApply(Microsoft.EntityFrameworkCore.Query.SqlExpressions.OuterApplyExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitOuterApply : Microsoft.EntityFrameworkCore.Query.SqlExpressions.OuterApplyExpression -&gt; System.Linq.Expressions.Expression" Usage="querySqlGenerator.VisitOuterApply outerApplyExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outerApplyExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.OuterApplyExpression" />
      </Parameters>
      <Docs>
        <param name="outerApplyExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitProjection">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitProjection (Microsoft.EntityFrameworkCore.Query.SqlExpressions.ProjectionExpression projectionExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitProjection(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.ProjectionExpression projectionExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.VisitProjection(Microsoft.EntityFrameworkCore.Query.SqlExpressions.ProjectionExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitProjection : Microsoft.EntityFrameworkCore.Query.SqlExpressions.ProjectionExpression -&gt; System.Linq.Expressions.Expression" Usage="querySqlGenerator.VisitProjection projectionExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectionExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ProjectionExpression" />
      </Parameters>
      <Docs>
        <param name="projectionExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitRowNumber">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitRowNumber (Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression rowNumberExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitRowNumber(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression rowNumberExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.VisitRowNumber(Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitRowNumber : Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression -&gt; System.Linq.Expressions.Expression" Usage="querySqlGenerator.VisitRowNumber rowNumberExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowNumberExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.RowNumberExpression" />
      </Parameters>
      <Docs>
        <param name="rowNumberExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSelect">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitSelect (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitSelect(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression selectExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.VisitSelect(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitSelect : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression -&gt; System.Linq.Expressions.Expression" Usage="querySqlGenerator.VisitSelect selectExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SelectExpression" />
      </Parameters>
      <Docs>
        <param name="selectExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSqlBinary">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitSqlBinary (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlBinaryExpression sqlBinaryExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitSqlBinary(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlBinaryExpression sqlBinaryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.VisitSqlBinary(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlBinaryExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitSqlBinary : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlBinaryExpression -&gt; System.Linq.Expressions.Expression" Usage="querySqlGenerator.VisitSqlBinary sqlBinaryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlBinaryExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlBinaryExpression" />
      </Parameters>
      <Docs>
        <param name="sqlBinaryExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSqlConstant">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitSqlConstant (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlConstantExpression sqlConstantExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitSqlConstant(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlConstantExpression sqlConstantExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.VisitSqlConstant(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlConstantExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitSqlConstant : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlConstantExpression -&gt; System.Linq.Expressions.Expression" Usage="querySqlGenerator.VisitSqlConstant sqlConstantExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlConstantExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlConstantExpression" />
      </Parameters>
      <Docs>
        <param name="sqlConstantExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSqlFragment">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitSqlFragment (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFragmentExpression sqlFragmentExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitSqlFragment(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFragmentExpression sqlFragmentExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.VisitSqlFragment(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFragmentExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitSqlFragment : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFragmentExpression -&gt; System.Linq.Expressions.Expression" Usage="querySqlGenerator.VisitSqlFragment sqlFragmentExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlFragmentExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFragmentExpression" />
      </Parameters>
      <Docs>
        <param name="sqlFragmentExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSqlFunction">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitSqlFunction (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFunctionExpression sqlFunctionExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitSqlFunction(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFunctionExpression sqlFunctionExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.VisitSqlFunction(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFunctionExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitSqlFunction : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFunctionExpression -&gt; System.Linq.Expressions.Expression" Usage="querySqlGenerator.VisitSqlFunction sqlFunctionExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlFunctionExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlFunctionExpression" />
      </Parameters>
      <Docs>
        <param name="sqlFunctionExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSqlParameter">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitSqlParameter (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression sqlParameterExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitSqlParameter(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression sqlParameterExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.VisitSqlParameter(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitSqlParameter : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression -&gt; System.Linq.Expressions.Expression" Usage="querySqlGenerator.VisitSqlParameter sqlParameterExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlParameterExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlParameterExpression" />
      </Parameters>
      <Docs>
        <param name="sqlParameterExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSqlUnary">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitSqlUnary (Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlUnaryExpression sqlUnaryExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitSqlUnary(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlUnaryExpression sqlUnaryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.VisitSqlUnary(Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlUnaryExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitSqlUnary : Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlUnaryExpression -&gt; System.Linq.Expressions.Expression" Usage="querySqlGenerator.VisitSqlUnary sqlUnaryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sqlUnaryExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.SqlUnaryExpression" />
      </Parameters>
      <Docs>
        <param name="sqlUnaryExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSubSelect">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitSubSelect (Microsoft.EntityFrameworkCore.Query.SqlExpressions.ScalarSubqueryExpression scalarSubqueryExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitSubSelect(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.ScalarSubqueryExpression scalarSubqueryExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.VisitSubSelect(Microsoft.EntityFrameworkCore.Query.SqlExpressions.ScalarSubqueryExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitSubSelect : Microsoft.EntityFrameworkCore.Query.SqlExpressions.ScalarSubqueryExpression -&gt; System.Linq.Expressions.Expression" Usage="querySqlGenerator.VisitSubSelect scalarSubqueryExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scalarSubqueryExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.ScalarSubqueryExpression" />
      </Parameters>
      <Docs>
        <param name="scalarSubqueryExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitTable">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitTable (Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpression tableExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitTable(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpression tableExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.VisitTable(Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitTable : Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpression -&gt; System.Linq.Expressions.Expression" Usage="querySqlGenerator.VisitTable tableExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tableExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.TableExpression" />
      </Parameters>
      <Docs>
        <param name="tableExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitUnion">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitUnion (Microsoft.EntityFrameworkCore.Query.SqlExpressions.UnionExpression unionExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitUnion(class Microsoft.EntityFrameworkCore.Query.SqlExpressions.UnionExpression unionExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.QuerySqlGenerator.VisitUnion(Microsoft.EntityFrameworkCore.Query.SqlExpressions.UnionExpression)" />
      <MemberSignature Language="F#" Value="override this.VisitUnion : Microsoft.EntityFrameworkCore.Query.SqlExpressions.UnionExpression -&gt; System.Linq.Expressions.Expression" Usage="querySqlGenerator.VisitUnion unionExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unionExpression" Type="Microsoft.EntityFrameworkCore.Query.SqlExpressions.UnionExpression" />
      </Parameters>
      <Docs>
        <param name="unionExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
