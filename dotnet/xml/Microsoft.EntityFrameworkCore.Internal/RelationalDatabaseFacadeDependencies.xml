<Type Name="RelationalDatabaseFacadeDependencies" FullName="Microsoft.EntityFrameworkCore.Internal.RelationalDatabaseFacadeDependencies">
  <TypeSignature Language="C#" Value="public class RelationalDatabaseFacadeDependencies : Microsoft.EntityFrameworkCore.Internal.DatabaseFacadeDependencies, Microsoft.EntityFrameworkCore.Internal.IRelationalDatabaseFacadeDependencies" FrameworkAlternate="efcore-3.0;efcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationalDatabaseFacadeDependencies extends Microsoft.EntityFrameworkCore.Internal.DatabaseFacadeDependencies implements class Microsoft.EntityFrameworkCore.Internal.IDatabaseFacadeDependencies, class Microsoft.EntityFrameworkCore.Internal.IRelationalDatabaseFacadeDependencies" FrameworkAlternate="efcore-3.0;efcore-3.1" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Internal.RelationalDatabaseFacadeDependencies" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationalDatabaseFacadeDependencies&#xA;Inherits DatabaseFacadeDependencies&#xA;Implements IRelationalDatabaseFacadeDependencies" FrameworkAlternate="efcore-3.0;efcore-3.1" />
  <TypeSignature Language="F#" Value="type RelationalDatabaseFacadeDependencies = class&#xA;    inherit DatabaseFacadeDependencies&#xA;    interface IRelationalDatabaseFacadeDependencies&#xA;    interface IDatabaseFacadeDependencies" FrameworkAlternate="efcore-3.0;efcore-3.1" />
  <TypeSignature Language="C#" Value="public class RelationalDatabaseFacadeDependencies : Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependencies, Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseFacadeDependencies" FrameworkAlternate="efcore-5.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationalDatabaseFacadeDependencies extends System.Object implements class Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependencies, class Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseFacadeDependencies" FrameworkAlternate="efcore-5.0" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationalDatabaseFacadeDependencies&#xA;Implements IDatabaseFacadeDependencies, IRelationalDatabaseFacadeDependencies" FrameworkAlternate="efcore-5.0" />
  <TypeSignature Language="F#" Value="type RelationalDatabaseFacadeDependencies = class&#xA;    interface IRelationalDatabaseFacadeDependencies&#xA;    interface IDatabaseFacadeDependencies" FrameworkAlternate="efcore-5.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Internal.DatabaseFacadeDependencies</BaseTypeName>
    <BaseTypeName FrameworkAlternate="efcore-5.0">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="efcore-3.0;efcore-3.1">
      <InterfaceName>Microsoft.EntityFrameworkCore.Internal.IDatabaseFacadeDependencies</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-3.0;efcore-3.1">
      <InterfaceName>Microsoft.EntityFrameworkCore.Internal.IRelationalDatabaseFacadeDependencies</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-5.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependencies</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="efcore-5.0">
      <InterfaceName>Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseFacadeDependencies</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationalDatabaseFacadeDependencies (Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager transactionManager, Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator databaseCreator, Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory executionStrategyFactory, System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider&gt; databaseProviders, Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; commandLogger, Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector concurrencyDetector, Microsoft.EntityFrameworkCore.Storage.IRelationalConnection relationalConnection, Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder rawSqlCommandBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager transactionManager, class Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator databaseCreator, class Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory executionStrategyFactory, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider&gt; databaseProviders, class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; commandLogger, class Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector concurrencyDetector, class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection relationalConnection, class Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder rawSqlCommandBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Internal.RelationalDatabaseFacadeDependencies.#ctor(Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager,Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider},Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger{Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command},Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (transactionManager As IDbContextTransactionManager, databaseCreator As IDatabaseCreator, executionStrategyFactory As IExecutionStrategyFactory, databaseProviders As IEnumerable(Of IDatabaseProvider), commandLogger As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command), concurrencyDetector As IConcurrencyDetector, relationalConnection As IRelationalConnection, rawSqlCommandBuilder As IRawSqlCommandBuilder)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Internal.RelationalDatabaseFacadeDependencies : Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager * Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator * Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory * seq&lt;Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider&gt; * Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; * Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector * Microsoft.EntityFrameworkCore.Storage.IRelationalConnection * Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder -&gt; Microsoft.EntityFrameworkCore.Internal.RelationalDatabaseFacadeDependencies" Usage="new Microsoft.EntityFrameworkCore.Internal.RelationalDatabaseFacadeDependencies (transactionManager, databaseCreator, executionStrategyFactory, databaseProviders, commandLogger, concurrencyDetector, relationalConnection, rawSqlCommandBuilder)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="transactionManager" Type="Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager" />
        <Parameter Name="databaseCreator" Type="Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator" />
        <Parameter Name="executionStrategyFactory" Type="Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory" />
        <Parameter Name="databaseProviders" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider&gt;" />
        <Parameter Name="commandLogger" Type="Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Command&gt;" />
        <Parameter Name="concurrencyDetector" Type="Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector" />
        <Parameter Name="relationalConnection" Type="Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" />
        <Parameter Name="rawSqlCommandBuilder" Type="Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder" />
      </Parameters>
      <Docs>
        <param name="transactionManager">To be added.</param>
        <param name="databaseCreator">To be added.</param>
        <param name="executionStrategyFactory">To be added.</param>
        <param name="databaseProviders">To be added.</param>
        <param name="commandLogger">To be added.</param>
        <param name="concurrencyDetector">To be added.</param>
        <param name="relationalConnection">To be added.</param>
        <param name="rawSqlCommandBuilder">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandLogger">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt; CommandLogger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger`1&lt;class Microsoft.EntityFrameworkCore.DbLoggerCategory/Database/Command&gt; CommandLogger" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalDatabaseFacadeDependencies.CommandLogger" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CommandLogger As IDiagnosticsLogger(Of DbLoggerCategory.Database.Command)" />
      <MemberSignature Language="F#" Value="member this.CommandLogger : Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory.Database.Command&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalDatabaseFacadeDependencies.CommandLogger" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependencies.CommandLogger</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Diagnostics.IDiagnosticsLogger&lt;Microsoft.EntityFrameworkCore.DbLoggerCategory+Database+Command&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConcurrencyDetector">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector ConcurrencyDetector { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector ConcurrencyDetector" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalDatabaseFacadeDependencies.ConcurrencyDetector" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ConcurrencyDetector As IConcurrencyDetector" />
      <MemberSignature Language="F#" Value="member this.ConcurrencyDetector : Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalDatabaseFacadeDependencies.ConcurrencyDetector" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependencies.ConcurrencyDetector</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.IConcurrencyDetector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DatabaseCreator">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator DatabaseCreator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator DatabaseCreator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalDatabaseFacadeDependencies.DatabaseCreator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DatabaseCreator As IDatabaseCreator" />
      <MemberSignature Language="F#" Value="member this.DatabaseCreator : Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalDatabaseFacadeDependencies.DatabaseCreator" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependencies.DatabaseCreator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DatabaseProviders">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider&gt; DatabaseProviders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider&gt; DatabaseProviders" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalDatabaseFacadeDependencies.DatabaseProviders" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DatabaseProviders As IEnumerable(Of IDatabaseProvider)" />
      <MemberSignature Language="F#" Value="member this.DatabaseProviders : seq&lt;Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider&gt;" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalDatabaseFacadeDependencies.DatabaseProviders" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependencies.DatabaseProviders</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecutionStrategyFactory">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory ExecutionStrategyFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory ExecutionStrategyFactory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalDatabaseFacadeDependencies.ExecutionStrategyFactory" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ExecutionStrategyFactory As IExecutionStrategyFactory" />
      <MemberSignature Language="F#" Value="member this.ExecutionStrategyFactory : Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalDatabaseFacadeDependencies.ExecutionStrategyFactory" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependencies.ExecutionStrategyFactory</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RawSqlCommandBuilder">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder RawSqlCommandBuilder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder RawSqlCommandBuilder" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalDatabaseFacadeDependencies.RawSqlCommandBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RawSqlCommandBuilder As IRawSqlCommandBuilder" />
      <MemberSignature Language="F#" Value="member this.RawSqlCommandBuilder : Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalDatabaseFacadeDependencies.RawSqlCommandBuilder" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-3.0;efcore-3.1">P:Microsoft.EntityFrameworkCore.Internal.IRelationalDatabaseFacadeDependencies.RawSqlCommandBuilder</InterfaceMember>
        <InterfaceMember FrameworkAlternate="efcore-5.0">P:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseFacadeDependencies.RawSqlCommandBuilder</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationalConnection">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.IRelationalConnection RelationalConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IRelationalConnection RelationalConnection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalDatabaseFacadeDependencies.RelationalConnection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RelationalConnection As IRelationalConnection" />
      <MemberSignature Language="F#" Value="member this.RelationalConnection : Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalDatabaseFacadeDependencies.RelationalConnection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="efcore-3.0;efcore-3.1">P:Microsoft.EntityFrameworkCore.Internal.IRelationalDatabaseFacadeDependencies.RelationalConnection</InterfaceMember>
        <InterfaceMember FrameworkAlternate="efcore-5.0">P:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseFacadeDependencies.RelationalConnection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IRelationalConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionManager">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager TransactionManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager TransactionManager" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Internal.RelationalDatabaseFacadeDependencies.TransactionManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TransactionManager As IDbContextTransactionManager" />
      <MemberSignature Language="F#" Value="member this.TransactionManager : Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager" Usage="Microsoft.EntityFrameworkCore.Internal.RelationalDatabaseFacadeDependencies.TransactionManager" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.EntityFrameworkCore.Storage.IDatabaseFacadeDependencies.TransactionManager</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
