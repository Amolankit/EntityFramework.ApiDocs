<Type Name="EntityEntryGraphNode&lt;TState&gt;" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode&lt;TState&gt;">
  <TypeSignature Language="C#" Value="public class EntityEntryGraphNode&lt;TState&gt; : Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntityEntryGraphNode`1&lt;TState&gt; extends Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode`1" />
  <TypeSignature Language="VB.NET" Value="Public Class EntityEntryGraphNode(Of TState)&#xA;Inherits EntityEntryGraphNode" />
  <TypeSignature Language="F#" Value="type EntityEntryGraphNode&lt;'State&gt; = class&#xA;    inherit EntityEntryGraphNode" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TState" />
  </TypeParameters>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TState">To be added.</typeparam>
    <summary>
                Provides access to change tracking information and operations for a node in a
                graph of entities that is being traversed.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityEntryGraphNode (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, TState state, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry sourceEntry, Microsoft.EntityFrameworkCore.Metadata.INavigation inboundNavigation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry entry, !TState state, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry sourceEntry, class Microsoft.EntityFrameworkCore.Metadata.INavigation inboundNavigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode`1.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,`0,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entry As InternalEntityEntry, state As TState, sourceEntry As InternalEntityEntry, inboundNavigation As INavigation)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode&lt;'State&gt; : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * 'State * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode&lt;'State&gt;" Usage="new Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode&lt;'State&gt; (entry, state, sourceEntry, inboundNavigation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="entry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="state" Type="TState" />
        <Parameter Name="sourceEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="inboundNavigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
      </Parameters>
      <Docs>
        <param name="entry">To be added.</param>
        <param name="state">To be added.</param>
        <param name="sourceEntry">To be added.</param>
        <param name="inboundNavigation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateNode">
      <MemberSignature Language="C#" Value="public override Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode CreateNode (Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode currentNode, Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, Microsoft.EntityFrameworkCore.Metadata.INavigation reachedVia);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode CreateNode(class Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode currentNode, class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntityEntry, class Microsoft.EntityFrameworkCore.Metadata.INavigation reachedVia) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode`1.CreateNode(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateNode (currentNode As EntityEntryGraphNode, internalEntityEntry As InternalEntityEntry, reachedVia As INavigation) As EntityEntryGraphNode" />
      <MemberSignature Language="F#" Value="override this.CreateNode : Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode * Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode" Usage="entityEntryGraphNode.CreateNode (currentNode, internalEntityEntry, reachedVia)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="currentNode" Type="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode" />
        <Parameter Name="internalEntityEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="reachedVia" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
      </Parameters>
      <Docs>
        <param name="currentNode"> The node that the entity is being traversed from. </param>
        <param name="internalEntityEntry">
                The internal entry tracking information about the entity being traversed to.
            </param>
        <param name="reachedVia"> The navigation property that is being traversed to reach the new node. </param>
        <summary>
                Creates a new node for the entity that is being traversed next in the graph.
            </summary>
        <returns> The newly created node. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeState">
      <MemberSignature Language="C#" Value="public virtual TState NodeState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TState NodeState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode`1.NodeState" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NodeState As TState" />
      <MemberSignature Language="F#" Value="member this.NodeState : 'State" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode&lt;'State&gt;.NodeState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets or sets state that will be available to all nodes that are visited after this node.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
