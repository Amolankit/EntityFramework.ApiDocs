<Type Name="CollectionEntry" FullName="Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry">
  <TypeSignature Language="C#" Value="public class CollectionEntry : Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CollectionEntry extends Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry" />
  <TypeSignature Language="VB.NET" Value="Public Class CollectionEntry&#xA;Inherits NavigationEntry" />
  <TypeSignature Language="F#" Value="type CollectionEntry = class&#xA;    inherit NavigationEntry" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>
                    Provides access to change tracking and loading information for a collection
                    navigation property that associates this entity to a collection of another entities.
                </para>
      <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> API and it is
                    not designed to be directly constructed in your application code.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CollectionEntry (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntry, Microsoft.EntityFrameworkCore.Metadata.INavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntry, class Microsoft.EntityFrameworkCore.Metadata.INavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (internalEntry As InternalEntityEntry, navigation As INavigation)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * Microsoft.EntityFrameworkCore.Metadata.INavigation -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry" Usage="new Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry (internalEntry, navigation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="internalEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.INavigation" />
      </Parameters>
      <Docs>
        <param name="internalEntry">To be added.</param>
        <param name="navigation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CollectionEntry (Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntry, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry internalEntry, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (internalEntry As InternalEntityEntry, name As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry : Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry * string -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry" Usage="new Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry (internalEntry, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-3.0;efcore-3.1">
          <AttributeName Language="C#">[Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal]</AttributeName>
          <AttributeName Language="F#">[&lt;Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkInternal&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="internalEntry" Type="Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="internalEntry">To be added.</param>
        <param name="name">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentValue">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerable CurrentValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable CurrentValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.CurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CurrentValue As IEnumerable" />
      <MemberSignature Language="F#" Value="member this.CurrentValue : System.Collections.IEnumerable with get, set" Usage="Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.CurrentValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Gets or sets the value currently assigned to this property. If the current value is set using this property,
                the change tracker is aware of the change and <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges" /> is not required
                for the context to detect the change.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureInitialized">
      <MemberSignature Language="C#" Value="protected virtual void EnsureInitialized ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureInitialized() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.EnsureInitialized" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EnsureInitialized ()" />
      <MemberSignature Language="F#" Value="abstract member EnsureInitialized : unit -&gt; unit&#xA;override this.EnsureInitialized : unit -&gt; unit" Usage="collectionEntry.EnsureInitialized " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindEntry">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry FindEntry (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry FindEntry(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.FindEntry(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindEntry (entity As Object) As EntityEntry" />
      <MemberSignature Language="F#" Value="abstract member FindEntry : obj -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry&#xA;override this.FindEntry : obj -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" Usage="collectionEntry.FindEntry entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="entity"> The entity to get the entry for. </param>
        <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" /> of an entity this navigation targets.
            </summary>
        <returns> An entry for an entity that this navigation targets. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInternalTargetEntry">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry GetInternalTargetEntry (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry GetInternalTargetEntry(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.GetInternalTargetEntry(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetInternalTargetEntry (entity As Object) As InternalEntityEntry" />
      <MemberSignature Language="F#" Value="abstract member GetInternalTargetEntry : obj -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry&#xA;override this.GetInternalTargetEntry : obj -&gt; Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry" Usage="collectionEntry.GetInternalTargetEntry entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="entity">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Load" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Load ()" />
      <MemberSignature Language="F#" Value="override this.Load : unit -&gt; unit" Usage="collectionEntry.Load " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
                    Loads the entities referenced by this navigation property, unless <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded" />
                    is already set to true.
                </para>
          <para>
                    Note that entities that are already being tracked are not overwritten with new data from the database.
                </para>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task LoadAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task LoadAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.LoadAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LoadAsync (Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="override this.LoadAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="collectionEntry.LoadAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
        <summary>
          <para>
                    Loads entities referenced by this navigation property, unless <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded" />
                    is already set to true.
                </para>
          <para>
                    Note that entities that are already being tracked are not overwritten with new data from the database.
                </para>
          <para>
                    Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                    that any asynchronous operations have completed before calling another method on this context.
                </para>
        </summary>
        <returns>
                A task that represents the asynchronous save operation.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Query">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable Query ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable Query() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Query" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Query () As IQueryable" />
      <MemberSignature Language="F#" Value="override this.Query : unit -&gt; System.Linq.IQueryable" Usage="collectionEntry.Query " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
                    Returns the query that would be used by <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Load" /> to load entities referenced by
                    this navigation property.
                </para>
          <para>
                    The query can be composed over using LINQ to perform filtering, counting, etc. without
                    actually loading all entities from the database.
                </para>
        </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
