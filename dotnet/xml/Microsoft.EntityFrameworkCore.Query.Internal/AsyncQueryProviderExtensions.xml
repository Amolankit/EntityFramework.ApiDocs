<Type Name="AsyncQueryProviderExtensions" FullName="Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryProviderExtensions">
  <TypeSignature Language="C#" Value="public static class AsyncQueryProviderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AsyncQueryProviderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryProviderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module AsyncQueryProviderExtensions" />
  <TypeSignature Language="F#" Value="type AsyncQueryProviderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateEntityQueryableExpression">
      <MemberSignature Language="C#" Value="public static System.Linq.Expressions.ConstantExpression CreateEntityQueryableExpression (this Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider entityQueryProvider, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.Expressions.ConstantExpression CreateEntityQueryableExpression(class Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider entityQueryProvider, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryProviderExtensions.CreateEntityQueryableExpression(Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CreateEntityQueryableExpression (entityQueryProvider As IAsyncQueryProvider, type As Type) As ConstantExpression" />
      <MemberSignature Language="F#" Value="static member CreateEntityQueryableExpression : Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider * Type -&gt; System.Linq.Expressions.ConstantExpression" Usage="Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryProviderExtensions.CreateEntityQueryableExpression (entityQueryProvider, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.ConstantExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityQueryProvider" Type="Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider" RefType="this" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="entityQueryProvider">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
