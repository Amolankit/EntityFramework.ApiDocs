<Type Name="SqlServerIndexExtensions" FullName="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions">
  <TypeSignature Language="C#" Value="public static class SqlServerIndexExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SqlServerIndexExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module SqlServerIndexExtensions" />
  <TypeSignature Language="F#" Value="type SqlServerIndexExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IIndex" /> for SQL Server-specific metadata.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetIncludeProperties">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IReadOnlyList&lt;string&gt; GetIncludeProperties (this Microsoft.EntityFrameworkCore.Metadata.IIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; GetIncludeProperties(class Microsoft.EntityFrameworkCore.Metadata.IIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetIncludeProperties(Microsoft.EntityFrameworkCore.Metadata.IIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIncludeProperties (index As IIndex) As IReadOnlyList(Of String)" />
      <MemberSignature Language="F#" Value="static member GetIncludeProperties : Microsoft.EntityFrameworkCore.Metadata.IIndex -&gt; System.Collections.Generic.IReadOnlyList&lt;string&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetIncludeProperties index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" RefType="this" />
      </Parameters>
      <Docs>
        <param name="index"> The index. </param>
        <summary>
                Returns included property names, or <c>null</c> if they have not been specified.
            </summary>
        <returns> The included property names, or <c>null</c> if they have not been specified. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIncludePropertiesConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetIncludePropertiesConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetIncludePropertiesConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetIncludePropertiesConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIncludePropertiesConfigurationSource (index As IConventionIndex) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetIncludePropertiesConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetIncludePropertiesConfigurationSource index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" RefType="this" />
      </Parameters>
      <Docs>
        <param name="index"> The index. </param>
        <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the included property names.
            </summary>
        <returns> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the included property names. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsClusteredConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetIsClusteredConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetIsClusteredConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetIsClusteredConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIsClusteredConfigurationSource (property As IConventionIndex) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetIsClusteredConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetIsClusteredConfigurationSource property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" RefType="this" />
      </Parameters>
      <Docs>
        <param name="property"> The property. </param>
        <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for whether the index is clustered.
            </summary>
        <returns> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for whether the index is clustered. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsCreatedOnlineConfigurationSource">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource? GetIsCreatedOnlineConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetIsCreatedOnlineConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetIsCreatedOnlineConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetIsCreatedOnlineConfigurationSource (index As IConventionIndex) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetIsCreatedOnlineConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.GetIsCreatedOnlineConfigurationSource index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" RefType="this" />
      </Parameters>
      <Docs>
        <param name="index"> The index. </param>
        <summary>
                Returns the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for whether the index is online.
            </summary>
        <returns> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for whether the index is online. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsClustered">
      <MemberSignature Language="C#" Value="public static bool? IsClustered (this Microsoft.EntityFrameworkCore.Metadata.IIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; IsClustered(class Microsoft.EntityFrameworkCore.Metadata.IIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.IsClustered(Microsoft.EntityFrameworkCore.Metadata.IIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsClustered (index As IIndex) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member IsClustered : Microsoft.EntityFrameworkCore.Metadata.IIndex -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.IsClustered index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" RefType="this" />
      </Parameters>
      <Docs>
        <param name="index"> The index. </param>
        <summary>
                Returns a value indicating whether the index is clustered.
            </summary>
        <returns>
          <c>true</c> if the index is clustered. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCreatedOnline">
      <MemberSignature Language="C#" Value="public static bool? IsCreatedOnline (this Microsoft.EntityFrameworkCore.Metadata.IIndex index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;bool&gt; IsCreatedOnline(class Microsoft.EntityFrameworkCore.Metadata.IIndex index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.IsCreatedOnline(Microsoft.EntityFrameworkCore.Metadata.IIndex)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsCreatedOnline (index As IIndex) As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member IsCreatedOnline : Microsoft.EntityFrameworkCore.Metadata.IIndex -&gt; Nullable&lt;bool&gt;" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.IsCreatedOnline index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" RefType="this" />
      </Parameters>
      <Docs>
        <param name="index"> The index. </param>
        <summary>
                Returns a value indicating whether the index is online.
            </summary>
        <returns>
          <c>true</c> if the index is online. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIncludeProperties">
      <MemberSignature Language="C#" Value="public static void SetIncludeProperties (this Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, System.Collections.Generic.IReadOnlyList&lt;string&gt; properties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIncludeProperties(class Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetIncludeProperties(Microsoft.EntityFrameworkCore.Metadata.IMutableIndex,System.Collections.Generic.IReadOnlyList{System.String})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetIncludeProperties (index As IMutableIndex, properties As IReadOnlyList(Of String))" />
      <MemberSignature Language="F#" Value="static member SetIncludeProperties : Microsoft.EntityFrameworkCore.Metadata.IMutableIndex * System.Collections.Generic.IReadOnlyList&lt;string&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetIncludeProperties (index, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableIndex" RefType="this" />
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="index"> The index. </param>
        <param name="properties"> The value to set. </param>
        <summary>
                Sets included property names.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIncludeProperties">
      <MemberSignature Language="C#" Value="public static void SetIncludeProperties (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, System.Collections.Generic.IReadOnlyList&lt;string&gt; properties, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIncludeProperties(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, class System.Collections.Generic.IReadOnlyList`1&lt;string&gt; properties, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetIncludeProperties(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex,System.Collections.Generic.IReadOnlyList{System.String},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetIncludeProperties (index As IConventionIndex, properties As IReadOnlyList(Of String), Optional fromDataAnnotation As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member SetIncludeProperties : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex * System.Collections.Generic.IReadOnlyList&lt;string&gt; * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetIncludeProperties (index, properties, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" RefType="this" />
        <Parameter Name="properties" Type="System.Collections.Generic.IReadOnlyList&lt;System.String&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="index"> The index. </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <param name="properties"> The value to set. </param>
        <summary>
                Sets included property names.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsClustered">
      <MemberSignature Language="C#" Value="public static void SetIsClustered (this Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, bool? value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsClustered(class Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, valuetype System.Nullable`1&lt;bool&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetIsClustered(Microsoft.EntityFrameworkCore.Metadata.IMutableIndex,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetIsClustered (index As IMutableIndex, value As Nullable(Of Boolean))" />
      <MemberSignature Language="F#" Value="static member SetIsClustered : Microsoft.EntityFrameworkCore.Metadata.IMutableIndex * Nullable&lt;bool&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetIsClustered (index, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableIndex" RefType="this" />
        <Parameter Name="value" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="value"> The value to set. </param>
        <param name="index"> The index. </param>
        <summary>
                Sets a value indicating whether the index is clustered.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsClustered">
      <MemberSignature Language="C#" Value="public static void SetIsClustered (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, bool? value, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsClustered(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, valuetype System.Nullable`1&lt;bool&gt; value, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetIsClustered(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex,System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetIsClustered (index As IConventionIndex, value As Nullable(Of Boolean), Optional fromDataAnnotation As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member SetIsClustered : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex * Nullable&lt;bool&gt; * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetIsClustered (index, value, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" RefType="this" />
        <Parameter Name="value" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value"> The value to set. </param>
        <param name="index"> The index. </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Sets a value indicating whether the index is clustered.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsCreatedOnline">
      <MemberSignature Language="C#" Value="public static void SetIsCreatedOnline (this Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, bool? createdOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsCreatedOnline(class Microsoft.EntityFrameworkCore.Metadata.IMutableIndex index, valuetype System.Nullable`1&lt;bool&gt; createdOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetIsCreatedOnline(Microsoft.EntityFrameworkCore.Metadata.IMutableIndex,System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetIsCreatedOnline (index As IMutableIndex, createdOnline As Nullable(Of Boolean))" />
      <MemberSignature Language="F#" Value="static member SetIsCreatedOnline : Microsoft.EntityFrameworkCore.Metadata.IMutableIndex * Nullable&lt;bool&gt; -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetIsCreatedOnline (index, createdOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableIndex" RefType="this" />
        <Parameter Name="createdOnline" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="index"> The index. </param>
        <param name="createdOnline"> The value to set. </param>
        <summary>
                Sets a value indicating whether the index is online.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsCreatedOnline">
      <MemberSignature Language="C#" Value="public static void SetIsCreatedOnline (this Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, bool? createdOnline, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsCreatedOnline(class Microsoft.EntityFrameworkCore.Metadata.IConventionIndex index, valuetype System.Nullable`1&lt;bool&gt; createdOnline, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetIsCreatedOnline(Microsoft.EntityFrameworkCore.Metadata.IConventionIndex,System.Nullable{System.Boolean},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetIsCreatedOnline (index As IConventionIndex, createdOnline As Nullable(Of Boolean), Optional fromDataAnnotation As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member SetIsCreatedOnline : Microsoft.EntityFrameworkCore.Metadata.IConventionIndex * Nullable&lt;bool&gt; * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.SqlServerIndexExtensions.SetIsCreatedOnline (index, createdOnline, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.SqlServer</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionIndex" RefType="this" />
        <Parameter Name="createdOnline" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="index"> The index. </param>
        <param name="createdOnline"> The value to set. </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Sets a value indicating whether the index is online.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
