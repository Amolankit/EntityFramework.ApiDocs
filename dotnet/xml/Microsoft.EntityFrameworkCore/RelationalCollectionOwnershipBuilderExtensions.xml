<Type Name="RelationalCollectionOwnershipBuilderExtensions" FullName="Microsoft.EntityFrameworkCore.RelationalCollectionOwnershipBuilderExtensions">
  <TypeSignature Language="C#" Value="public static class RelationalCollectionOwnershipBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RelationalCollectionOwnershipBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.RelationalCollectionOwnershipBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RelationalCollectionOwnershipBuilderExtensions" />
  <TypeSignature Language="F#" Value="type RelationalCollectionOwnershipBuilderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Relational database specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="HasConstraintName">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder HasConstraintName (this Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder referenceReferenceBuilder, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder HasConstraintName(class Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder referenceReferenceBuilder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalCollectionOwnershipBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasConstraintName (referenceReferenceBuilder As CollectionOwnershipBuilder, name As String) As CollectionOwnershipBuilder" />
      <MemberSignature Language="F#" Value="static member HasConstraintName : Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalCollectionOwnershipBuilderExtensions.HasConstraintName (referenceReferenceBuilder, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="referenceReferenceBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="referenceReferenceBuilder"> The builder being used to configure the relationship. </param>
        <param name="name"> The name of the foreign key constraint. </param>
        <summary>
                Configures the foreign key constraint name for this relationship when targeting a relational database.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasConstraintName&lt;TEntity,TDependentEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder&lt;TEntity,TDependentEntity&gt; HasConstraintName&lt;TEntity,TDependentEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder&lt;TEntity,TDependentEntity&gt; referenceReferenceBuilder, string name) where TEntity : class where TDependentEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder`2&lt;!!TEntity, !!TDependentEntity&gt; HasConstraintName&lt;class TEntity, class TDependentEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder`2&lt;!!TEntity, !!TDependentEntity&gt; referenceReferenceBuilder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalCollectionOwnershipBuilderExtensions.HasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder{``0,``1},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasConstraintName(Of TEntity As Class, TDependentEntity As Class) (referenceReferenceBuilder As CollectionOwnershipBuilder(Of TEntity, TDependentEntity), name As String) As CollectionOwnershipBuilder(Of TEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="static member HasConstraintName : Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder&lt;'Entity, 'DependentEntity (requires 'Entity : null and 'DependentEntity : null)&gt; * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder&lt;'Entity, 'DependentEntity (requires 'Entity : null and 'DependentEntity : null)&gt; (requires 'Entity : null and 'DependentEntity : null)" Usage="Microsoft.EntityFrameworkCore.RelationalCollectionOwnershipBuilderExtensions.HasConstraintName (referenceReferenceBuilder, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder&lt;TEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TDependentEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="referenceReferenceBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder&lt;TEntity,TDependentEntity&gt;" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity"> The entity type on one end of the relationship. </typeparam>
        <typeparam name="TDependentEntity"> The entity type on the other end of the relationship. </typeparam>
        <param name="referenceReferenceBuilder"> The builder being used to configure the relationship. </param>
        <param name="name"> The name of the foreign key constraint. </param>
        <summary>
                Configures the foreign key constraint name for this relationship when targeting a relational database.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTable">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder ToTable (this Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder collectionOwnershipBuilder, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder ToTable(class Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder collectionOwnershipBuilder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalCollectionOwnershipBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder,System.String)" />
      <MemberSignature Language="F#" Value="static member ToTable : Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalCollectionOwnershipBuilderExtensions.ToTable (collectionOwnershipBuilder, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionOwnershipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collectionOwnershipBuilder"> The builder for the entity type being configured. </param>
        <param name="name"> The name of the view or table. </param>
        <summary>
                Configures the view or table that the entity maps to when targeting a relational database.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTable">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder ToTable (this Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder collectionOwnershipBuilder, string name, string schema);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder ToTable(class Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder collectionOwnershipBuilder, string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalCollectionOwnershipBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder,System.String,System.String)" />
      <MemberSignature Language="F#" Value="static member ToTable : Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder * string * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalCollectionOwnershipBuilderExtensions.ToTable (collectionOwnershipBuilder, name, schema)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionOwnershipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collectionOwnershipBuilder"> The builder for the entity type being configured. </param>
        <param name="name"> The name of the view or table. </param>
        <param name="schema"> The schema of the view or table. </param>
        <summary>
                Configures the view or table that the entity maps to when targeting a relational database.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTable&lt;TEntity,TDependentEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder&lt;TEntity,TDependentEntity&gt; ToTable&lt;TEntity,TDependentEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder&lt;TEntity,TDependentEntity&gt; collectionOwnershipBuilder, string name) where TEntity : class where TDependentEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder`2&lt;!!TEntity, !!TDependentEntity&gt; ToTable&lt;class TEntity, class TDependentEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder`2&lt;!!TEntity, !!TDependentEntity&gt; collectionOwnershipBuilder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalCollectionOwnershipBuilderExtensions.ToTable``2(Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder{``0,``1},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTable(Of TEntity As Class, TDependentEntity As Class) (collectionOwnershipBuilder As CollectionOwnershipBuilder(Of TEntity, TDependentEntity), name As String) As CollectionOwnershipBuilder(Of TEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="static member ToTable : Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder&lt;'Entity, 'DependentEntity (requires 'Entity : null and 'DependentEntity : null)&gt; * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder&lt;'Entity, 'DependentEntity (requires 'Entity : null and 'DependentEntity : null)&gt; (requires 'Entity : null and 'DependentEntity : null)" Usage="Microsoft.EntityFrameworkCore.RelationalCollectionOwnershipBuilderExtensions.ToTable (collectionOwnershipBuilder, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder&lt;TEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TDependentEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="collectionOwnershipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder&lt;TEntity,TDependentEntity&gt;" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity"> The entity type being configured. </typeparam>
        <typeparam name="TDependentEntity"> The entity type that this relationship targets. </typeparam>
        <param name="collectionOwnershipBuilder"> The builder for the entity type being configured. </param>
        <param name="name"> The name of the view or table. </param>
        <summary>
                Configures the view or table that the entity maps to when targeting a relational database.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTable&lt;TEntity,TDependentEntity&gt;">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder&lt;TEntity,TDependentEntity&gt; ToTable&lt;TEntity,TDependentEntity&gt; (this Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder&lt;TEntity,TDependentEntity&gt; collectionOwnershipBuilder, string name, string schema) where TEntity : class where TDependentEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder`2&lt;!!TEntity, !!TDependentEntity&gt; ToTable&lt;class TEntity, class TDependentEntity&gt;(class Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder`2&lt;!!TEntity, !!TDependentEntity&gt; collectionOwnershipBuilder, string name, string schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalCollectionOwnershipBuilderExtensions.ToTable``2(Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder{``0,``1},System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToTable(Of TEntity As Class, TDependentEntity As Class) (collectionOwnershipBuilder As CollectionOwnershipBuilder(Of TEntity, TDependentEntity), name As String, schema As String) As CollectionOwnershipBuilder(Of TEntity, TDependentEntity)" />
      <MemberSignature Language="F#" Value="static member ToTable : Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder&lt;'Entity, 'DependentEntity (requires 'Entity : null and 'DependentEntity : null)&gt; * string * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder&lt;'Entity, 'DependentEntity (requires 'Entity : null and 'DependentEntity : null)&gt; (requires 'Entity : null and 'DependentEntity : null)" Usage="Microsoft.EntityFrameworkCore.RelationalCollectionOwnershipBuilderExtensions.ToTable (collectionOwnershipBuilder, name, schema)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder&lt;TEntity,TDependentEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TDependentEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="collectionOwnershipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionOwnershipBuilder&lt;TEntity,TDependentEntity&gt;" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="schema" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity"> The entity type being configured. </typeparam>
        <typeparam name="TDependentEntity"> The entity type that this relationship targets. </typeparam>
        <param name="collectionOwnershipBuilder"> The builder for the entity type being configured. </param>
        <param name="name"> The name of the view or table. </param>
        <param name="schema"> The schema of the view or table. </param>
        <summary>
                Configures the view or table that the entity maps to when targeting a relational database.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
