<Type Name="RelationalKeyBuilderExtensions" FullName="Microsoft.EntityFrameworkCore.RelationalKeyBuilderExtensions">
  <TypeSignature Language="C#" Value="public static class RelationalKeyBuilderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RelationalKeyBuilderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.RelationalKeyBuilderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RelationalKeyBuilderExtensions" />
  <TypeSignature Language="F#" Value="type RelationalKeyBuilderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Relational database specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CanSetName">
      <MemberSignature Language="C#" Value="public static bool CanSetName (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder keyBuilder, string name, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanSetName(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder keyBuilder, string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalKeyBuilderExtensions.CanSetName(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CanSetName (keyBuilder As IConventionKeyBuilder, name As String, Optional fromDataAnnotation As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="static member CanSetName : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder * string * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.RelationalKeyBuilderExtensions.CanSetName (keyBuilder, name, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder" Index="0" FrameworkAlternate="efcore-3.0" RefType="this" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0" />
      </Parameters>
      <Docs>
        <param name="keyBuilder"> The builder for the key being configured. </param>
        <param name="name"> The name of the index. </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Returns a value indicating whether the given name can be set for the key constraint.
            </summary>
        <returns>
          <c>true</c> if the given name can be set for the key constraint. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasName">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder HasName (this Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder keyBuilder, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder HasName(class Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder keyBuilder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalKeyBuilderExtensions.HasName(Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder,System.String)" />
      <MemberSignature Language="F#" Value="static member HasName : Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalKeyBuilderExtensions.HasName (keyBuilder, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyBuilder"> The builder for the key being configured. </param>
        <param name="name"> The name of the key. </param>
        <summary>
                Configures the name of the key constraint in the database when targeting a relational database.
            </summary>
        <returns> The same builder instance so that multiple calls can be chained. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasName">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder HasName (this Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder keyBuilder, string name, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder HasName(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder keyBuilder, string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalKeyBuilderExtensions.HasName(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function HasName (keyBuilder As IConventionKeyBuilder, name As String, Optional fromDataAnnotation As Boolean = false) As IConventionKeyBuilder" />
      <MemberSignature Language="F#" Value="static member HasName : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder * string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder" Usage="Microsoft.EntityFrameworkCore.RelationalKeyBuilderExtensions.HasName (keyBuilder, name, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder" Index="0" FrameworkAlternate="efcore-3.0" RefType="this" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" Index="2" FrameworkAlternate="efcore-3.0" />
      </Parameters>
      <Docs>
        <param name="keyBuilder"> The builder for the key being configured. </param>
        <param name="name"> The name of the key. </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Configures the name of the key constraint in the database when targeting a relational database.
            </summary>
        <returns>
                The same builder instance if the configuration was applied,
                <c>null</c> otherwise.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
