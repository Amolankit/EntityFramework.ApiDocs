<Type Name="RelationalEntityTypeExtensions" FullName="Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions">
  <TypeSignature Language="C#" Value="public static class RelationalEntityTypeExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RelationalEntityTypeExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RelationalEntityTypeExtensions" />
  <TypeSignature Language="F#" Value="type RelationalEntityTypeExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IEntityType" /> for relational database metadata.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddCheckConstraint">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint AddCheckConstraint (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, string name, string sql);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint AddCheckConstraint(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, string name, string sql) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.AddCheckConstraint(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddCheckConstraint (entityType As IMutableEntityType, name As String, sql As String) As ICheckConstraint" />
      <MemberSignature Language="F#" Value="static member AddCheckConstraint : Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType * string * string -&gt; Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint" Usage="Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.AddCheckConstraint (entityType, name, sql)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="sql" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to add the check constraint to. </param>
        <param name="name"> The check constraint name. </param>
        <param name="sql"> The logical constraint sql used in the check constraint. </param>
        <summary>
                Creates a new check constraint with the given name on entity type. Throws an exception
                if a check constraint with the same name exists on the same entity type.
            </summary>
        <returns> The new check constraint. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCheckConstraint">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionCheckConstraint AddCheckConstraint (this Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, string name, string sql, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IConventionCheckConstraint AddCheckConstraint(class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, string name, string sql, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.AddCheckConstraint(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddCheckConstraint (entityType As IConventionEntityType, name As String, sql As String, Optional fromDataAnnotation As Boolean = false) As IConventionCheckConstraint" />
      <MemberSignature Language="F#" Value="static member AddCheckConstraint : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * string * string * bool -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionCheckConstraint" Usage="Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.AddCheckConstraint (entityType, name, sql, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionCheckConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="sql" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to add the check constraint to. </param>
        <param name="name"> The check constraint name. </param>
        <param name="sql"> The logical constraint sql used in the check constraint. </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Creates a new check constraint with the given name on entity type. Throws an exception
                if a check constraint with the same name exists on the same entity type.
            </summary>
        <returns> The new check constraint. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindCheckConstraint">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.IConventionCheckConstraint FindCheckConstraint (this Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.IConventionCheckConstraint FindCheckConstraint(class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.FindCheckConstraint(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindCheckConstraint (entityType As IConventionEntityType, name As String) As IConventionCheckConstraint" />
      <MemberSignature Language="F#" Value="static member FindCheckConstraint : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * string -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionCheckConstraint" Usage="Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.FindCheckConstraint (entityType, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionCheckConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to find the check constraint for. </param>
        <param name="name"> The check constraint name. </param>
        <summary>
                Finds an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IConventionCheckConstraint" /> with the given name.
            </summary>
        <returns>
                The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IConventionCheckConstraint" /> or <c>null</c> if no check constraint with the
                given name in the given entity type was found.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindCheckConstraint">
      <MemberSignature Language="C#" Value="public static Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint FindCheckConstraint (this Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint FindCheckConstraint(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.FindCheckConstraint(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FindCheckConstraint (entityType As IEntityType, name As String) As ICheckConstraint" />
      <MemberSignature Language="F#" Value="static member FindCheckConstraint : Microsoft.EntityFrameworkCore.Metadata.IEntityType * string -&gt; Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint" Usage="Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.FindCheckConstraint (entityType, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to find the check constraint for. </param>
        <param name="name"> The check constraint name. </param>
        <summary>
                Finds an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint" /> with the given name.
            </summary>
        <returns>
                The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint" /> or <c>null</c> if no check constraint with the
                given name in the given entity type was found.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCheckConstraints">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint&gt; GetCheckConstraints (this Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint&gt; GetCheckConstraints(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.GetCheckConstraints(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCheckConstraints (entityType As IEntityType) As IEnumerable(Of ICheckConstraint)" />
      <MemberSignature Language="F#" Value="static member GetCheckConstraints : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; seq&lt;Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.GetCheckConstraints entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" RefType="this" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to get the check constraints for. </param>
        <summary>
                Returns all <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint" /> contained in the entity type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComment">
      <MemberSignature Language="C#" Value="public static string GetComment (this Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetComment(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.GetComment(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetComment (entityType As IEntityType) As String" />
      <MemberSignature Language="F#" Value="static member GetComment : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.GetComment entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" RefType="this" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type. </param>
        <summary>
                Returns the comment for the column this property is mapped to.
            </summary>
        <returns> The comment for the column this property is mapped to. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultSchema">
      <MemberSignature Language="C#" Value="public static string GetDefaultSchema (this Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDefaultSchema(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.GetDefaultSchema(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultSchema (entityType As IEntityType) As String" />
      <MemberSignature Language="F#" Value="static member GetDefaultSchema : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.GetDefaultSchema entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" RefType="this" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to get the table name for. </param>
        <summary>
                Returns the default database schema that would be used for this entity type.
            </summary>
        <returns> The default database schema to which the entity type would be mapped. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultTableName">
      <MemberSignature Language="C#" Value="public static string GetDefaultTableName (this Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDefaultTableName(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.GetDefaultTableName(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDefaultTableName (entityType As IEntityType) As String" />
      <MemberSignature Language="F#" Value="static member GetDefaultTableName : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.GetDefaultTableName entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" RefType="this" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to get the table name for. </param>
        <summary>
                Returns the default table name that would be used for this entity type.
            </summary>
        <returns> The default name of the table to which the entity type would be mapped. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public static string GetSchema (this Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetSchema(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.GetSchema(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSchema (entityType As IEntityType) As String" />
      <MemberSignature Language="F#" Value="static member GetSchema : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.GetSchema entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" RefType="this" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to get the schema for. </param>
        <summary>
                Returns the database schema that contains the mapped table.
            </summary>
        <returns> The database schema that contains the mapped table. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaConfigurationSource">
      <MemberSignature Language="C#" Value="public static Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetSchemaConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetSchemaConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.GetSchemaConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetSchemaConfigurationSource (entityType As IConventionEntityType) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetSchemaConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.GetSchemaConfigurationSource entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" RefType="this" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to find configuration source for. </param>
        <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the database schema.
            </summary>
        <returns> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the database schema. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTableName">
      <MemberSignature Language="C#" Value="public static string GetTableName (this Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTableName(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.GetTableName(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTableName (entityType As IEntityType) As String" />
      <MemberSignature Language="F#" Value="static member GetTableName : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; string" Usage="Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.GetTableName entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" RefType="this" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to get the table name for. </param>
        <summary>
                Returns the name of the table to which the entity type is mapped.
            </summary>
        <returns> The name of the table to which the entity type is mapped. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTableNameConfigurationSource">
      <MemberSignature Language="C#" Value="public static Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetTableNameConfigurationSource (this Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt; GetTableNameConfigurationSource(class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.GetTableNameConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTableNameConfigurationSource (entityType As IConventionEntityType) As Nullable(Of ConfigurationSource)" />
      <MemberSignature Language="F#" Value="static member GetTableNameConfigurationSource : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType -&gt; Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;" Usage="Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.GetTableNameConfigurationSource entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" RefType="this" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to find configuration source for. </param>
        <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the table name.
            </summary>
        <returns> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ConfigurationSource" /> for the table name. </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIgnoredByMigrations">
      <MemberSignature Language="C#" Value="public static bool IsIgnoredByMigrations (this Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsIgnoredByMigrations(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.IsIgnoredByMigrations(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsIgnoredByMigrations (entityType As IEntityType) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsIgnoredByMigrations : Microsoft.EntityFrameworkCore.Metadata.IEntityType -&gt; bool" Usage="Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.IsIgnoredByMigrations entityType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" RefType="this" />
      </Parameters>
      <Docs>
        <param name="entityType">The entity type.</param>
        <summary>
                Gets a value indicating whether the entity type is ignored by Migrations.
            </summary>
        <returns>A value indicating whether the entity type is ignored by Migrations.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveCheckConstraint">
      <MemberSignature Language="C#" Value="public static bool RemoveCheckConstraint (this Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RemoveCheckConstraint(class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.RemoveCheckConstraint(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RemoveCheckConstraint (entityType As IConventionEntityType, name As String) As Boolean" />
      <MemberSignature Language="F#" Value="static member RemoveCheckConstraint : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * string -&gt; bool" Usage="Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.RemoveCheckConstraint (entityType, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to remove the check constraint from. </param>
        <param name="name"> The check constraint name. </param>
        <summary>
                Removes the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IConventionCheckConstraint" /> with the given name.
            </summary>
        <returns>
                True if the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IConventionCheckConstraint" /> is successfully found and removed; otherwise, false.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveCheckConstraint">
      <MemberSignature Language="C#" Value="public static bool RemoveCheckConstraint (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RemoveCheckConstraint(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.RemoveCheckConstraint(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RemoveCheckConstraint (entityType As IMutableEntityType, name As String) As Boolean" />
      <MemberSignature Language="F#" Value="static member RemoveCheckConstraint : Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType * string -&gt; bool" Usage="Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.RemoveCheckConstraint (entityType, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to remove the check constraint from. </param>
        <param name="name"> The check constraint name to be removed. </param>
        <summary>
                Removes the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint" /> with the given name.
            </summary>
        <returns>
                True if the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ICheckConstraint" /> is successfully found and removed; otherwise, false.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetComment">
      <MemberSignature Language="C#" Value="public static void SetComment (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, string comment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetComment(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, string comment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.SetComment(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetComment (entityType As IMutableEntityType, comment As String)" />
      <MemberSignature Language="F#" Value="static member SetComment : Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.SetComment (entityType, comment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="comment" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type. </param>
        <param name="comment"> The comment for the column. </param>
        <summary>
                Configures a comment to be applied to the column this property is mapped to.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetComment">
      <MemberSignature Language="C#" Value="public static void SetComment (this Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, string comment, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetComment(class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, string comment, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.SetComment(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetComment (entityType As IConventionEntityType, comment As String, Optional fromDataAnnotation As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member SetComment : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * string * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.SetComment (entityType, comment, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" RefType="this" />
        <Parameter Name="comment" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type. </param>
        <param name="comment"> The comment for the column. </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Configures a comment to be applied to the column this property is mapped to.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSchema">
      <MemberSignature Language="C#" Value="public static void SetSchema (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSchema(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.SetSchema(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetSchema (entityType As IMutableEntityType, value As String)" />
      <MemberSignature Language="F#" Value="static member SetSchema : Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.SetSchema (entityType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to set the schema for. </param>
        <param name="value"> The value to set. </param>
        <summary>
                Sets the database schema that contains the mapped table.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSchema">
      <MemberSignature Language="C#" Value="public static void SetSchema (this Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, string value, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSchema(class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, string value, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.SetSchema(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetSchema (entityType As IConventionEntityType, value As String, Optional fromDataAnnotation As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member SetSchema : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * string * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.SetSchema (entityType, value, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" RefType="this" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to set the schema for. </param>
        <param name="value"> The value to set. </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Sets the database schema that contains the mapped table.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTableName">
      <MemberSignature Language="C#" Value="public static void SetTableName (this Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTableName(class Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType entityType, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.SetTableName(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetTableName (entityType As IMutableEntityType, name As String)" />
      <MemberSignature Language="F#" Value="static member SetTableName : Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType * string -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.SetTableName (entityType, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to set the table name for. </param>
        <param name="name"> The name to set. </param>
        <summary>
                Sets the name of the table to which the entity type is mapped.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTableName">
      <MemberSignature Language="C#" Value="public static void SetTableName (this Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, string name, bool fromDataAnnotation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTableName(class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, string name, bool fromDataAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.SetTableName(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetTableName (entityType As IConventionEntityType, name As String, Optional fromDataAnnotation As Boolean = false)" />
      <MemberSignature Language="F#" Value="static member SetTableName : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * string * bool -&gt; unit" Usage="Microsoft.EntityFrameworkCore.RelationalEntityTypeExtensions.SetTableName (entityType, name, fromDataAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fromDataAnnotation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type to set the table name for. </param>
        <param name="name"> The name to set. </param>
        <param name="fromDataAnnotation"> Indicates whether the configuration was specified using a data annotation. </param>
        <summary>
                Sets the name of the table to which the entity type is mapped.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
