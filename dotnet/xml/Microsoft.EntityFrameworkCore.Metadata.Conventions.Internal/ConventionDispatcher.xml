<Type Name="ConventionDispatcher" FullName="Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher">
  <TypeSignature Language="C#" Value="public class ConventionDispatcher" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ConventionDispatcher extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class ConventionDispatcher" />
  <TypeSignature Language="F#" Value="type ConventionDispatcher = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.0.6.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.6.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConventionDispatcher (Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet conventionSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet conventionSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.#ctor(Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (conventionSet As ConventionSet)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher : Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher" Usage="new Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher conventionSet" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="conventionSet" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet" />
      </Parameters>
      <Docs>
        <param name="conventionSet">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DelayConventions">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionBatch DelayConventions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionBatch DelayConventions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.DelayConventions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DelayConventions () As IConventionBatch" />
      <MemberSignature Language="F#" Value="abstract member DelayConventions : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionBatch&#xA;override this.DelayConventions : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionBatch" Usage="conventionDispatcher.DelayConventions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionBatch</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBaseEntityTypeChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder OnBaseEntityTypeChanged (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType previousBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder OnBaseEntityTypeChanged(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType previousBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnBaseEntityTypeChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnBaseEntityTypeChanged (entityTypeBuilder As InternalEntityTypeBuilder, previousBaseType As EntityType) As InternalEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnBaseEntityTypeChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder&#xA;override this.OnBaseEntityTypeChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Usage="conventionDispatcher.OnBaseEntityTypeChanged (entityTypeBuilder, previousBaseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="previousBaseType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="previousBaseType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBaseEntityTypeSet">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder OnBaseEntityTypeSet (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType previousBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder OnBaseEntityTypeSet(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType previousBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnBaseEntityTypeSet(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnBaseEntityTypeSet (entityTypeBuilder As InternalEntityTypeBuilder, previousBaseType As EntityType) As InternalEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnBaseEntityTypeSet : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder&#xA;override this.OnBaseEntityTypeSet : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Usage="conventionDispatcher.OnBaseEntityTypeSet (entityTypeBuilder, previousBaseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="previousBaseType" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="previousBaseType">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntityTypeAdded">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder OnEntityTypeAdded (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder OnEntityTypeAdded(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnEntityTypeAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnEntityTypeAdded (entityTypeBuilder As IConventionEntityTypeBuilder) As IConventionEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnEntityTypeAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder&#xA;override this.OnEntityTypeAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Usage="conventionDispatcher.OnEntityTypeAdded entityTypeBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntityTypeAdded">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder OnEntityTypeAdded (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder OnEntityTypeAdded(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnEntityTypeAdded(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnEntityTypeAdded (entityTypeBuilder As InternalEntityTypeBuilder) As InternalEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnEntityTypeAdded : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder&#xA;override this.OnEntityTypeAdded : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Usage="conventionDispatcher.OnEntityTypeAdded entityTypeBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntityTypeAnnotationChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation OnEntityTypeAnnotationChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string name, Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation annotation, Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation oldAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation OnEntityTypeAnnotationChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string name, class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation annotation, class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation oldAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnEntityTypeAnnotationChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.String,Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation,Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnEntityTypeAnnotationChanged (entityTypeBuilder As IConventionEntityTypeBuilder, name As String, annotation As IConventionAnnotation, oldAnnotation As IConventionAnnotation) As IConventionAnnotation" />
      <MemberSignature Language="F#" Value="abstract member OnEntityTypeAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * string * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation&#xA;override this.OnEntityTypeAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * string * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation" Usage="conventionDispatcher.OnEntityTypeAnnotationChanged (entityTypeBuilder, name, annotation, oldAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="oldAnnotation" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <param name="annotation">To be added.</param>
        <param name="oldAnnotation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntityTypeAnnotationChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.Annotation OnEntityTypeAnnotationChanged (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, string name, Microsoft.EntityFrameworkCore.Infrastructure.Annotation annotation, Microsoft.EntityFrameworkCore.Infrastructure.Annotation oldAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.Annotation OnEntityTypeAnnotationChanged(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, string name, class Microsoft.EntityFrameworkCore.Infrastructure.Annotation annotation, class Microsoft.EntityFrameworkCore.Infrastructure.Annotation oldAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnEntityTypeAnnotationChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String,Microsoft.EntityFrameworkCore.Infrastructure.Annotation,Microsoft.EntityFrameworkCore.Infrastructure.Annotation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnEntityTypeAnnotationChanged (entityTypeBuilder As InternalEntityTypeBuilder, name As String, annotation As Annotation, oldAnnotation As Annotation) As Annotation" />
      <MemberSignature Language="F#" Value="abstract member OnEntityTypeAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * string * Microsoft.EntityFrameworkCore.Infrastructure.Annotation * Microsoft.EntityFrameworkCore.Infrastructure.Annotation -&gt; Microsoft.EntityFrameworkCore.Infrastructure.Annotation&#xA;override this.OnEntityTypeAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * string * Microsoft.EntityFrameworkCore.Infrastructure.Annotation * Microsoft.EntityFrameworkCore.Infrastructure.Annotation -&gt; Microsoft.EntityFrameworkCore.Infrastructure.Annotation" Usage="conventionDispatcher.OnEntityTypeAnnotationChanged (entityTypeBuilder, name, annotation, oldAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.Annotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.Annotation" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="oldAnnotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.Annotation" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <param name="annotation">To be added.</param>
        <param name="oldAnnotation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntityTypeAnnotationSet">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.Annotation OnEntityTypeAnnotationSet (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, string name, Microsoft.EntityFrameworkCore.Infrastructure.Annotation annotation, Microsoft.EntityFrameworkCore.Infrastructure.Annotation oldAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.Annotation OnEntityTypeAnnotationSet(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, string name, class Microsoft.EntityFrameworkCore.Infrastructure.Annotation annotation, class Microsoft.EntityFrameworkCore.Infrastructure.Annotation oldAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnEntityTypeAnnotationSet(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String,Microsoft.EntityFrameworkCore.Infrastructure.Annotation,Microsoft.EntityFrameworkCore.Infrastructure.Annotation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnEntityTypeAnnotationSet (entityTypeBuilder As InternalEntityTypeBuilder, name As String, annotation As Annotation, oldAnnotation As Annotation) As Annotation" />
      <MemberSignature Language="F#" Value="abstract member OnEntityTypeAnnotationSet : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * string * Microsoft.EntityFrameworkCore.Infrastructure.Annotation * Microsoft.EntityFrameworkCore.Infrastructure.Annotation -&gt; Microsoft.EntityFrameworkCore.Infrastructure.Annotation&#xA;override this.OnEntityTypeAnnotationSet : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * string * Microsoft.EntityFrameworkCore.Infrastructure.Annotation * Microsoft.EntityFrameworkCore.Infrastructure.Annotation -&gt; Microsoft.EntityFrameworkCore.Infrastructure.Annotation" Usage="conventionDispatcher.OnEntityTypeAnnotationSet (entityTypeBuilder, name, annotation, oldAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.Annotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-1.1" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-1.1" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.Annotation" Index="2" FrameworkAlternate="efcore-1.1" />
        <Parameter Name="oldAnnotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.Annotation" Index="3" FrameworkAlternate="efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <param name="annotation">To be added.</param>
        <param name="oldAnnotation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntityTypeBaseTypeChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType OnEntityTypeBaseTypeChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType newBaseType, Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType previousBaseType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType OnEntityTypeBaseTypeChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType newBaseType, class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType previousBaseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnEntityTypeBaseTypeChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnEntityTypeBaseTypeChanged (entityTypeBuilder As IConventionEntityTypeBuilder, newBaseType As IConventionEntityType, previousBaseType As IConventionEntityType) As IConventionEntityType" />
      <MemberSignature Language="F#" Value="abstract member OnEntityTypeBaseTypeChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&#xA;override this.OnEntityTypeBaseTypeChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" Usage="conventionDispatcher.OnEntityTypeBaseTypeChanged (entityTypeBuilder, newBaseType, previousBaseType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="newBaseType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="previousBaseType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="newBaseType">To be added.</param>
        <param name="previousBaseType">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntityTypeIgnored">
      <MemberSignature Language="C#" Value="public virtual string OnEntityTypeIgnored (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string name, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string OnEntityTypeIgnored(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string name, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnEntityTypeIgnored(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnEntityTypeIgnored (modelBuilder As IConventionModelBuilder, name As String, type As Type) As String" />
      <MemberSignature Language="F#" Value="abstract member OnEntityTypeIgnored : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * string * Type -&gt; string&#xA;override this.OnEntityTypeIgnored : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * string * Type -&gt; string" Usage="conventionDispatcher.OnEntityTypeIgnored (modelBuilder, name, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="type" Type="System.Type" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntityTypeIgnored">
      <MemberSignature Language="C#" Value="public virtual bool OnEntityTypeIgnored (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder, string name, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnEntityTypeIgnored(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder, string name, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnEntityTypeIgnored(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnEntityTypeIgnored (modelBuilder As InternalModelBuilder, name As String, type As Type) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member OnEntityTypeIgnored : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder * string * Type -&gt; bool&#xA;override this.OnEntityTypeIgnored : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder * string * Type -&gt; bool" Usage="conventionDispatcher.OnEntityTypeIgnored (modelBuilder, name, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="type" Type="System.Type" Index="2" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntityTypeMemberIgnored">
      <MemberSignature Language="C#" Value="public virtual string OnEntityTypeMemberIgnored (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string OnEntityTypeMemberIgnored(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnEntityTypeMemberIgnored(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnEntityTypeMemberIgnored (entityTypeBuilder As IConventionEntityTypeBuilder, name As String) As String" />
      <MemberSignature Language="F#" Value="abstract member OnEntityTypeMemberIgnored : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * string -&gt; string&#xA;override this.OnEntityTypeMemberIgnored : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * string -&gt; string" Usage="conventionDispatcher.OnEntityTypeMemberIgnored (entityTypeBuilder, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntityTypeMemberIgnored">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder OnEntityTypeMemberIgnored (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, string ignoredMemberName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder OnEntityTypeMemberIgnored(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, string ignoredMemberName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnEntityTypeMemberIgnored(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnEntityTypeMemberIgnored (entityTypeBuilder As InternalEntityTypeBuilder, ignoredMemberName As String) As InternalEntityTypeBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnEntityTypeMemberIgnored : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder&#xA;override this.OnEntityTypeMemberIgnored : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * string -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Usage="conventionDispatcher.OnEntityTypeMemberIgnored (entityTypeBuilder, ignoredMemberName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="ignoredMemberName" Type="System.String" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="ignoredMemberName">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntityTypeRemoved">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType OnEntityTypeRemoved (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType OnEntityTypeRemoved(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnEntityTypeRemoved(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnEntityTypeRemoved (modelBuilder As IConventionModelBuilder, type As IConventionEntityType) As IConventionEntityType" />
      <MemberSignature Language="F#" Value="abstract member OnEntityTypeRemoved : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&#xA;override this.OnEntityTypeRemoved : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" Usage="conventionDispatcher.OnEntityTypeRemoved (modelBuilder, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="type" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEntityTypeRemoved">
      <MemberSignature Language="C#" Value="public virtual bool OnEntityTypeRemoved (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnEntityTypeRemoved(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnEntityTypeRemoved(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnEntityTypeRemoved (modelBuilder As InternalModelBuilder, type As EntityType) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member OnEntityTypeRemoved : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType -&gt; bool&#xA;override this.OnEntityTypeRemoved : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType -&gt; bool" Usage="conventionDispatcher.OnEntityTypeRemoved (modelBuilder, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="type" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <param name="type">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnForeignKeyAdded">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder OnForeignKeyAdded (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationshipBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder OnForeignKeyAdded(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationshipBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnForeignKeyAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnForeignKeyAdded (relationshipBuilder As IConventionRelationshipBuilder) As IConventionRelationshipBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnForeignKeyAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder&#xA;override this.OnForeignKeyAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder" Usage="conventionDispatcher.OnForeignKeyAdded relationshipBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnForeignKeyAdded">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder OnForeignKeyAdded (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder OnForeignKeyAdded(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnForeignKeyAdded(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnForeignKeyAdded (relationshipBuilder As InternalRelationshipBuilder) As InternalRelationshipBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnForeignKeyAdded : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.OnForeignKeyAdded : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="conventionDispatcher.OnForeignKeyAdded relationshipBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnForeignKeyAnnotationChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation OnForeignKeyAnnotationChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationshipBuilder, string name, Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation annotation, Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation oldAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation OnForeignKeyAnnotationChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationshipBuilder, string name, class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation annotation, class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation oldAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnForeignKeyAnnotationChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder,System.String,Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation,Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnForeignKeyAnnotationChanged (relationshipBuilder As IConventionRelationshipBuilder, name As String, annotation As IConventionAnnotation, oldAnnotation As IConventionAnnotation) As IConventionAnnotation" />
      <MemberSignature Language="F#" Value="abstract member OnForeignKeyAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder * string * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation&#xA;override this.OnForeignKeyAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder * string * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation" Usage="conventionDispatcher.OnForeignKeyAnnotationChanged (relationshipBuilder, name, annotation, oldAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="oldAnnotation" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <param name="annotation">To be added.</param>
        <param name="oldAnnotation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnForeignKeyOwnershipChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder OnForeignKeyOwnershipChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationshipBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder OnForeignKeyOwnershipChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationshipBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnForeignKeyOwnershipChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnForeignKeyOwnershipChanged (relationshipBuilder As IConventionRelationshipBuilder) As IConventionRelationshipBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnForeignKeyOwnershipChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder&#xA;override this.OnForeignKeyOwnershipChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder" Usage="conventionDispatcher.OnForeignKeyOwnershipChanged relationshipBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnForeignKeyOwnershipChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder OnForeignKeyOwnershipChanged (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder OnForeignKeyOwnershipChanged(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnForeignKeyOwnershipChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnForeignKeyOwnershipChanged (relationshipBuilder As InternalRelationshipBuilder) As InternalRelationshipBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnForeignKeyOwnershipChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.OnForeignKeyOwnershipChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="conventionDispatcher.OnForeignKeyOwnershipChanged relationshipBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnForeignKeyPrincipalEndChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder OnForeignKeyPrincipalEndChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationshipBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder OnForeignKeyPrincipalEndChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationshipBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnForeignKeyPrincipalEndChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnForeignKeyPrincipalEndChanged (relationshipBuilder As IConventionRelationshipBuilder) As IConventionRelationshipBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnForeignKeyPrincipalEndChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder&#xA;override this.OnForeignKeyPrincipalEndChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder" Usage="conventionDispatcher.OnForeignKeyPrincipalEndChanged relationshipBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnForeignKeyPropertiesChanged">
      <MemberSignature Language="C#" Value="public virtual void OnForeignKeyPropertiesChanged (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder, System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; oldDependentProperties, Microsoft.EntityFrameworkCore.Metadata.Internal.Key oldPrincipalKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnForeignKeyPropertiesChanged(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder, class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; oldDependentProperties, class Microsoft.EntityFrameworkCore.Metadata.Internal.Key oldPrincipalKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnForeignKeyPropertiesChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.Key)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnForeignKeyPropertiesChanged (relationshipBuilder As InternalRelationshipBuilder, oldDependentProperties As IReadOnlyList(Of Property), oldPrincipalKey As Key)" />
      <MemberSignature Language="F#" Value="abstract member OnForeignKeyPropertiesChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; * Microsoft.EntityFrameworkCore.Metadata.Internal.Key -&gt; unit&#xA;override this.OnForeignKeyPropertiesChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder * System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt; * Microsoft.EntityFrameworkCore.Metadata.Internal.Key -&gt; unit" Usage="conventionDispatcher.OnForeignKeyPropertiesChanged (relationshipBuilder, oldDependentProperties, oldPrincipalKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="oldDependentProperties" Type="System.Collections.Generic.IReadOnlyList&lt;Microsoft.EntityFrameworkCore.Metadata.Internal.Property&gt;" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="oldPrincipalKey" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.Key" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <param name="oldDependentProperties">To be added.</param>
        <param name="oldPrincipalKey">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnForeignKeyRemoved">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey OnForeignKeyRemoved (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey OnForeignKeyRemoved(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnForeignKeyRemoved(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnForeignKeyRemoved (entityTypeBuilder As IConventionEntityTypeBuilder, foreignKey As IConventionForeignKey) As IConventionForeignKey" />
      <MemberSignature Language="F#" Value="abstract member OnForeignKeyRemoved : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&#xA;override this.OnForeignKeyRemoved : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey" Usage="conventionDispatcher.OnForeignKeyRemoved (entityTypeBuilder, foreignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnForeignKeyRemoved">
      <MemberSignature Language="C#" Value="public virtual void OnForeignKeyRemoved (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnForeignKeyRemoved(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnForeignKeyRemoved(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnForeignKeyRemoved (entityTypeBuilder As InternalEntityTypeBuilder, foreignKey As ForeignKey)" />
      <MemberSignature Language="F#" Value="abstract member OnForeignKeyRemoved : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey -&gt; unit&#xA;override this.OnForeignKeyRemoved : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey -&gt; unit" Usage="conventionDispatcher.OnForeignKeyRemoved (entityTypeBuilder, foreignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnForeignKeyRequirednessChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder OnForeignKeyRequirednessChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationshipBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder OnForeignKeyRequirednessChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationshipBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnForeignKeyRequirednessChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnForeignKeyRequirednessChanged (relationshipBuilder As IConventionRelationshipBuilder) As IConventionRelationshipBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnForeignKeyRequirednessChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder&#xA;override this.OnForeignKeyRequirednessChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder" Usage="conventionDispatcher.OnForeignKeyRequirednessChanged relationshipBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnForeignKeyRequirednessChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder OnForeignKeyRequirednessChanged (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder OnForeignKeyRequirednessChanged(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnForeignKeyRequirednessChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnForeignKeyRequirednessChanged (relationshipBuilder As InternalRelationshipBuilder) As InternalRelationshipBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnForeignKeyRequirednessChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.OnForeignKeyRequirednessChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="conventionDispatcher.OnForeignKeyRequirednessChanged relationshipBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Index="0" FrameworkAlternate="efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnForeignKeyUniquenessChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder OnForeignKeyUniquenessChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationshipBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder OnForeignKeyUniquenessChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationshipBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnForeignKeyUniquenessChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnForeignKeyUniquenessChanged (relationshipBuilder As IConventionRelationshipBuilder) As IConventionRelationshipBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnForeignKeyUniquenessChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder&#xA;override this.OnForeignKeyUniquenessChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder" Usage="conventionDispatcher.OnForeignKeyUniquenessChanged relationshipBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnForeignKeyUniquenessChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder OnForeignKeyUniquenessChanged (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder OnForeignKeyUniquenessChanged(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnForeignKeyUniquenessChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnForeignKeyUniquenessChanged (relationshipBuilder As InternalRelationshipBuilder) As InternalRelationshipBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnForeignKeyUniquenessChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.OnForeignKeyUniquenessChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="conventionDispatcher.OnForeignKeyUniquenessChanged relationshipBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIndexAdded">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder OnIndexAdded (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder OnIndexAdded(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnIndexAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnIndexAdded (indexBuilder As IConventionIndexBuilder) As IConventionIndexBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnIndexAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder&#xA;override this.OnIndexAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder" Usage="conventionDispatcher.OnIndexAdded indexBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="indexBuilder">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIndexAdded">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder OnIndexAdded (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder indexBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder OnIndexAdded(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder indexBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnIndexAdded(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnIndexAdded (indexBuilder As InternalIndexBuilder) As InternalIndexBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnIndexAdded : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder&#xA;override this.OnIndexAdded : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder" Usage="conventionDispatcher.OnIndexAdded indexBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="indexBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIndexAnnotationChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation OnIndexAnnotationChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder, string name, Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation annotation, Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation oldAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation OnIndexAnnotationChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder, string name, class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation annotation, class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation oldAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnIndexAnnotationChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder,System.String,Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation,Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnIndexAnnotationChanged (indexBuilder As IConventionIndexBuilder, name As String, annotation As IConventionAnnotation, oldAnnotation As IConventionAnnotation) As IConventionAnnotation" />
      <MemberSignature Language="F#" Value="abstract member OnIndexAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder * string * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation&#xA;override this.OnIndexAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder * string * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation" Usage="conventionDispatcher.OnIndexAnnotationChanged (indexBuilder, name, annotation, oldAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="oldAnnotation" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="indexBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <param name="annotation">To be added.</param>
        <param name="oldAnnotation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIndexAnnotationChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.Annotation OnIndexAnnotationChanged (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder indexBuilder, string name, Microsoft.EntityFrameworkCore.Infrastructure.Annotation annotation, Microsoft.EntityFrameworkCore.Infrastructure.Annotation oldAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.Annotation OnIndexAnnotationChanged(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder indexBuilder, string name, class Microsoft.EntityFrameworkCore.Infrastructure.Annotation annotation, class Microsoft.EntityFrameworkCore.Infrastructure.Annotation oldAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnIndexAnnotationChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder,System.String,Microsoft.EntityFrameworkCore.Infrastructure.Annotation,Microsoft.EntityFrameworkCore.Infrastructure.Annotation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnIndexAnnotationChanged (indexBuilder As InternalIndexBuilder, name As String, annotation As Annotation, oldAnnotation As Annotation) As Annotation" />
      <MemberSignature Language="F#" Value="abstract member OnIndexAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder * string * Microsoft.EntityFrameworkCore.Infrastructure.Annotation * Microsoft.EntityFrameworkCore.Infrastructure.Annotation -&gt; Microsoft.EntityFrameworkCore.Infrastructure.Annotation&#xA;override this.OnIndexAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder * string * Microsoft.EntityFrameworkCore.Infrastructure.Annotation * Microsoft.EntityFrameworkCore.Infrastructure.Annotation -&gt; Microsoft.EntityFrameworkCore.Infrastructure.Annotation" Usage="conventionDispatcher.OnIndexAnnotationChanged (indexBuilder, name, annotation, oldAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.Annotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.Annotation" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="oldAnnotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.Annotation" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="indexBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <param name="annotation">To be added.</param>
        <param name="oldAnnotation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIndexRemoved">
      <MemberSignature Language="C#" Value="public virtual void OnIndexRemoved (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.Index index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnIndexRemoved(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.Index index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnIndexRemoved(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Index)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnIndexRemoved (entityTypeBuilder As InternalEntityTypeBuilder, index As Index)" />
      <MemberSignature Language="F#" Value="abstract member OnIndexRemoved : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Index -&gt; unit&#xA;override this.OnIndexRemoved : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Index -&gt; unit" Usage="conventionDispatcher.OnIndexRemoved (entityTypeBuilder, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.Index" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="index">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIndexUniquenessChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder OnIndexUniquenessChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder OnIndexUniquenessChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder indexBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnIndexUniquenessChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnIndexUniquenessChanged (indexBuilder As IConventionIndexBuilder) As IConventionIndexBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnIndexUniquenessChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder&#xA;override this.OnIndexUniquenessChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder" Usage="conventionDispatcher.OnIndexUniquenessChanged indexBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionIndexBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="indexBuilder">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIndexUniquenessChanged">
      <MemberSignature Language="C#" Value="public virtual bool OnIndexUniquenessChanged (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder indexBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnIndexUniquenessChanged(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder indexBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnIndexUniquenessChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnIndexUniquenessChanged (indexBuilder As InternalIndexBuilder) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member OnIndexUniquenessChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder -&gt; bool&#xA;override this.OnIndexUniquenessChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder -&gt; bool" Usage="conventionDispatcher.OnIndexUniquenessChanged indexBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="indexBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyAdded">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder OnKeyAdded (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder keyBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder OnKeyAdded(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder keyBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnKeyAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnKeyAdded (keyBuilder As IConventionKeyBuilder) As IConventionKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnKeyAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder&#xA;override this.OnKeyAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder" Usage="conventionDispatcher.OnKeyAdded keyBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="keyBuilder">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyAdded">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder OnKeyAdded (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder keyBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder OnKeyAdded(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder keyBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnKeyAdded(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnKeyAdded (keyBuilder As InternalKeyBuilder) As InternalKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnKeyAdded : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder&#xA;override this.OnKeyAdded : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder" Usage="conventionDispatcher.OnKeyAdded keyBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="keyBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyAnnotationChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation OnKeyAnnotationChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder keyBuilder, string name, Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation annotation, Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation oldAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation OnKeyAnnotationChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder keyBuilder, string name, class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation annotation, class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation oldAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnKeyAnnotationChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder,System.String,Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation,Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnKeyAnnotationChanged (keyBuilder As IConventionKeyBuilder, name As String, annotation As IConventionAnnotation, oldAnnotation As IConventionAnnotation) As IConventionAnnotation" />
      <MemberSignature Language="F#" Value="abstract member OnKeyAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder * string * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation&#xA;override this.OnKeyAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder * string * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation" Usage="conventionDispatcher.OnKeyAnnotationChanged (keyBuilder, name, annotation, oldAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionKeyBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="oldAnnotation" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="keyBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <param name="annotation">To be added.</param>
        <param name="oldAnnotation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyRemoved">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IConventionKey OnKeyRemoved (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.IConventionKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionKey OnKeyRemoved(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.IConventionKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnKeyRemoved(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionKey)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnKeyRemoved (entityTypeBuilder As IConventionEntityTypeBuilder, key As IConventionKey) As IConventionKey" />
      <MemberSignature Language="F#" Value="abstract member OnKeyRemoved : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionKey -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionKey&#xA;override this.OnKeyRemoved : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionKey -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionKey" Usage="conventionDispatcher.OnKeyRemoved (entityTypeBuilder, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="key" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionKey" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="key">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyRemoved">
      <MemberSignature Language="C#" Value="public virtual void OnKeyRemoved (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnKeyRemoved(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnKeyRemoved(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Key)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnKeyRemoved (entityTypeBuilder As InternalEntityTypeBuilder, key As Key)" />
      <MemberSignature Language="F#" Value="abstract member OnKeyRemoved : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Key -&gt; unit&#xA;override this.OnKeyRemoved : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Key -&gt; unit" Usage="conventionDispatcher.OnKeyRemoved (entityTypeBuilder, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="key" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.Key" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="key">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnModelAnnotationChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation OnModelAnnotationChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string name, Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation annotation, Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation oldAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation OnModelAnnotationChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string name, class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation annotation, class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation oldAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnModelAnnotationChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.String,Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation,Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnModelAnnotationChanged (modelBuilder As IConventionModelBuilder, name As String, annotation As IConventionAnnotation, oldAnnotation As IConventionAnnotation) As IConventionAnnotation" />
      <MemberSignature Language="F#" Value="abstract member OnModelAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * string * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation&#xA;override this.OnModelAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * string * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation" Usage="conventionDispatcher.OnModelAnnotationChanged (modelBuilder, name, annotation, oldAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="oldAnnotation" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <param name="annotation">To be added.</param>
        <param name="oldAnnotation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnModelAnnotationChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.Annotation OnModelAnnotationChanged (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder, string name, Microsoft.EntityFrameworkCore.Infrastructure.Annotation annotation, Microsoft.EntityFrameworkCore.Infrastructure.Annotation oldAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.Annotation OnModelAnnotationChanged(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder, string name, class Microsoft.EntityFrameworkCore.Infrastructure.Annotation annotation, class Microsoft.EntityFrameworkCore.Infrastructure.Annotation oldAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnModelAnnotationChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,System.String,Microsoft.EntityFrameworkCore.Infrastructure.Annotation,Microsoft.EntityFrameworkCore.Infrastructure.Annotation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnModelAnnotationChanged (modelBuilder As InternalModelBuilder, name As String, annotation As Annotation, oldAnnotation As Annotation) As Annotation" />
      <MemberSignature Language="F#" Value="abstract member OnModelAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder * string * Microsoft.EntityFrameworkCore.Infrastructure.Annotation * Microsoft.EntityFrameworkCore.Infrastructure.Annotation -&gt; Microsoft.EntityFrameworkCore.Infrastructure.Annotation&#xA;override this.OnModelAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder * string * Microsoft.EntityFrameworkCore.Infrastructure.Annotation * Microsoft.EntityFrameworkCore.Infrastructure.Annotation -&gt; Microsoft.EntityFrameworkCore.Infrastructure.Annotation" Usage="conventionDispatcher.OnModelAnnotationChanged (modelBuilder, name, annotation, oldAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.Annotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.Annotation" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="oldAnnotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.Annotation" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <param name="annotation">To be added.</param>
        <param name="oldAnnotation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnModelBuilt">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder OnModelBuilt (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder OnModelBuilt(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnModelBuilt(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnModelBuilt (modelBuilder As InternalModelBuilder) As InternalModelBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnModelBuilt : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder&#xA;override this.OnModelBuilt : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder" Usage="conventionDispatcher.OnModelBuilt modelBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnModelFinalized">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder OnModelFinalized (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder OnModelFinalized(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnModelFinalized(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnModelFinalized (modelBuilder As IConventionModelBuilder) As IConventionModelBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnModelFinalized : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder&#xA;override this.OnModelFinalized : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" Usage="conventionDispatcher.OnModelFinalized modelBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnModelInitialized">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder OnModelInitialized (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder OnModelInitialized(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnModelInitialized(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnModelInitialized (modelBuilder As IConventionModelBuilder) As IConventionModelBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnModelInitialized : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder&#xA;override this.OnModelInitialized : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" Usage="conventionDispatcher.OnModelInitialized modelBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnModelInitialized">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder OnModelInitialized (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder OnModelInitialized(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder modelBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnModelInitialized(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnModelInitialized (modelBuilder As InternalModelBuilder) As InternalModelBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnModelInitialized : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder&#xA;override this.OnModelInitialized : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder" Usage="conventionDispatcher.OnModelInitialized modelBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="modelBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNavigationAdded">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation OnNavigationAdded (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationshipBuilder, Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation OnNavigationAdded(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationshipBuilder, class Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnNavigationAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnNavigationAdded (relationshipBuilder As IConventionRelationshipBuilder, navigation As IConventionNavigation) As IConventionNavigation" />
      <MemberSignature Language="F#" Value="abstract member OnNavigationAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation&#xA;override this.OnNavigationAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation" Usage="conventionDispatcher.OnNavigationAdded (relationshipBuilder, navigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <param name="navigation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNavigationAdded">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder OnNavigationAdded (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation navigation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder OnNavigationAdded(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation navigation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnNavigationAdded(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnNavigationAdded (relationshipBuilder As InternalRelationshipBuilder, navigation As Navigation) As InternalRelationshipBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnNavigationAdded : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.OnNavigationAdded : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="conventionDispatcher.OnNavigationAdded (relationshipBuilder, navigation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <param name="navigation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNavigationRemoved">
      <MemberSignature Language="C#" Value="public virtual string OnNavigationRemoved (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder sourceEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder targetEntityTypeBuilder, string navigationName, System.Reflection.MemberInfo memberInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string OnNavigationRemoved(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder sourceEntityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder targetEntityTypeBuilder, string navigationName, class System.Reflection.MemberInfo memberInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnNavigationRemoved(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.String,System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnNavigationRemoved (sourceEntityTypeBuilder As IConventionEntityTypeBuilder, targetEntityTypeBuilder As IConventionEntityTypeBuilder, navigationName As String, memberInfo As MemberInfo) As String" />
      <MemberSignature Language="F#" Value="abstract member OnNavigationRemoved : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * string * System.Reflection.MemberInfo -&gt; string&#xA;override this.OnNavigationRemoved : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * string * System.Reflection.MemberInfo -&gt; string" Usage="conventionDispatcher.OnNavigationRemoved (sourceEntityTypeBuilder, targetEntityTypeBuilder, navigationName, memberInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEntityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="targetEntityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="navigationName" Type="System.String" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="sourceEntityTypeBuilder">To be added.</param>
        <param name="targetEntityTypeBuilder">To be added.</param>
        <param name="navigationName">To be added.</param>
        <param name="memberInfo">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNavigationRemoved">
      <MemberSignature Language="C#" Value="public virtual void OnNavigationRemoved (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder sourceEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder targetEntityTypeBuilder, string navigationName, System.Reflection.MemberInfo memberInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnNavigationRemoved(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder sourceEntityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder targetEntityTypeBuilder, string navigationName, class System.Reflection.MemberInfo memberInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnNavigationRemoved(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String,System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnNavigationRemoved (sourceEntityTypeBuilder As InternalEntityTypeBuilder, targetEntityTypeBuilder As InternalEntityTypeBuilder, navigationName As String, memberInfo As MemberInfo)" />
      <MemberSignature Language="F#" Value="abstract member OnNavigationRemoved : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * string * System.Reflection.MemberInfo -&gt; unit&#xA;override this.OnNavigationRemoved : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * string * System.Reflection.MemberInfo -&gt; unit" Usage="conventionDispatcher.OnNavigationRemoved (sourceEntityTypeBuilder, targetEntityTypeBuilder, navigationName, memberInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEntityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="targetEntityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="navigationName" Type="System.String" Index="2" FrameworkAlternate="efcore-2.1;efcore-2.2" />
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" Index="3" FrameworkAlternate="efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="sourceEntityTypeBuilder">To be added.</param>
        <param name="targetEntityTypeBuilder">To be added.</param>
        <param name="navigationName">To be added.</param>
        <param name="memberInfo">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNavigationRemoved">
      <MemberSignature Language="C#" Value="public virtual void OnNavigationRemoved (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder sourceEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder targetEntityTypeBuilder, string navigationName, System.Reflection.PropertyInfo propertyInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnNavigationRemoved(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder sourceEntityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder targetEntityTypeBuilder, string navigationName, class System.Reflection.PropertyInfo propertyInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnNavigationRemoved(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String,System.Reflection.PropertyInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnNavigationRemoved (sourceEntityTypeBuilder As InternalEntityTypeBuilder, targetEntityTypeBuilder As InternalEntityTypeBuilder, navigationName As String, propertyInfo As PropertyInfo)" />
      <MemberSignature Language="F#" Value="abstract member OnNavigationRemoved : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * string * System.Reflection.PropertyInfo -&gt; unit&#xA;override this.OnNavigationRemoved : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * string * System.Reflection.PropertyInfo -&gt; unit" Usage="conventionDispatcher.OnNavigationRemoved (sourceEntityTypeBuilder, targetEntityTypeBuilder, navigationName, propertyInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEntityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
        <Parameter Name="targetEntityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
        <Parameter Name="navigationName" Type="System.String" Index="2" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" Index="3" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0" />
      </Parameters>
      <Docs>
        <param name="sourceEntityTypeBuilder">To be added.</param>
        <param name="targetEntityTypeBuilder">To be added.</param>
        <param name="navigationName">To be added.</param>
        <param name="propertyInfo">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPrimaryKeyChanged">
      <MemberSignature Language="C#" Value="public virtual void OnPrimaryKeyChanged (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.Key previousPrimaryKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPrimaryKeyChanged(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.Key previousPrimaryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnPrimaryKeyChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Key)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnPrimaryKeyChanged (entityTypeBuilder As InternalEntityTypeBuilder, previousPrimaryKey As Key)" />
      <MemberSignature Language="F#" Value="abstract member OnPrimaryKeyChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Key -&gt; unit&#xA;override this.OnPrimaryKeyChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Key -&gt; unit" Usage="conventionDispatcher.OnPrimaryKeyChanged (entityTypeBuilder, previousPrimaryKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="previousPrimaryKey" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.Key" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="previousPrimaryKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPrimaryKeyChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IConventionKey OnPrimaryKeyChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.IConventionKey newPrimaryKey, Microsoft.EntityFrameworkCore.Metadata.IConventionKey previousPrimaryKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionKey OnPrimaryKeyChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.IConventionKey newPrimaryKey, class Microsoft.EntityFrameworkCore.Metadata.IConventionKey previousPrimaryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnPrimaryKeyChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionKey,Microsoft.EntityFrameworkCore.Metadata.IConventionKey)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnPrimaryKeyChanged (entityTypeBuilder As IConventionEntityTypeBuilder, newPrimaryKey As IConventionKey, previousPrimaryKey As IConventionKey) As IConventionKey" />
      <MemberSignature Language="F#" Value="abstract member OnPrimaryKeyChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionKey * Microsoft.EntityFrameworkCore.Metadata.IConventionKey -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionKey&#xA;override this.OnPrimaryKeyChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionKey * Microsoft.EntityFrameworkCore.Metadata.IConventionKey -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionKey" Usage="conventionDispatcher.OnPrimaryKeyChanged (entityTypeBuilder, newPrimaryKey, previousPrimaryKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="newPrimaryKey" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionKey" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="previousPrimaryKey" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionKey" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="newPrimaryKey">To be added.</param>
        <param name="previousPrimaryKey">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPrimaryKeySet">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder OnPrimaryKeySet (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder keyBuilder, Microsoft.EntityFrameworkCore.Metadata.Internal.Key previousPrimaryKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder OnPrimaryKeySet(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder keyBuilder, class Microsoft.EntityFrameworkCore.Metadata.Internal.Key previousPrimaryKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnPrimaryKeySet(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Key)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnPrimaryKeySet (keyBuilder As InternalKeyBuilder, previousPrimaryKey As Key) As InternalKeyBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnPrimaryKeySet : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Key -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder&#xA;override this.OnPrimaryKeySet : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder * Microsoft.EntityFrameworkCore.Metadata.Internal.Key -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder" Usage="conventionDispatcher.OnPrimaryKeySet (keyBuilder, previousPrimaryKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
        <Parameter Name="previousPrimaryKey" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.Key" Index="1" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="keyBuilder">To be added.</param>
        <param name="previousPrimaryKey">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPrincipalEndChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder OnPrincipalEndChanged (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder OnPrincipalEndChanged(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnPrincipalEndChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnPrincipalEndChanged (relationshipBuilder As InternalRelationshipBuilder) As InternalRelationshipBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnPrincipalEndChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.OnPrincipalEndChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="conventionDispatcher.OnPrincipalEndChanged relationshipBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPrincipalEndSet">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder OnPrincipalEndSet (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder OnPrincipalEndSet(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder relationshipBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnPrincipalEndSet(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnPrincipalEndSet (relationshipBuilder As InternalRelationshipBuilder) As InternalRelationshipBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnPrincipalEndSet : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder&#xA;override this.OnPrincipalEndSet : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Usage="conventionDispatcher.OnPrincipalEndSet relationshipBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyAdded">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder OnPropertyAdded (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder propertyBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder OnPropertyAdded(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder propertyBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnPropertyAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnPropertyAdded (propertyBuilder As IConventionPropertyBuilder) As IConventionPropertyBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder&#xA;override this.OnPropertyAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder" Usage="conventionDispatcher.OnPropertyAdded propertyBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="propertyBuilder">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyAdded">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder OnPropertyAdded (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder propertyBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder OnPropertyAdded(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder propertyBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnPropertyAdded(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnPropertyAdded (propertyBuilder As InternalPropertyBuilder) As InternalPropertyBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyAdded : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder&#xA;override this.OnPropertyAdded : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder" Usage="conventionDispatcher.OnPropertyAdded propertyBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="propertyBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyAnnotationChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation OnPropertyAnnotationChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder propertyBuilder, string name, Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation annotation, Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation oldAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation OnPropertyAnnotationChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder propertyBuilder, string name, class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation annotation, class Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation oldAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnPropertyAnnotationChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder,System.String,Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation,Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnPropertyAnnotationChanged (propertyBuilder As IConventionPropertyBuilder, name As String, annotation As IConventionAnnotation, oldAnnotation As IConventionAnnotation) As IConventionAnnotation" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder * string * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation&#xA;override this.OnPropertyAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder * string * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation * Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation -&gt; Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation" Usage="conventionDispatcher.OnPropertyAnnotationChanged (propertyBuilder, name, annotation, oldAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="oldAnnotation" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionAnnotation" Index="3" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="propertyBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <param name="annotation">To be added.</param>
        <param name="oldAnnotation">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyAnnotationChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Infrastructure.Annotation OnPropertyAnnotationChanged (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder propertyBuilder, string name, Microsoft.EntityFrameworkCore.Infrastructure.Annotation annotation, Microsoft.EntityFrameworkCore.Infrastructure.Annotation oldAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Infrastructure.Annotation OnPropertyAnnotationChanged(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder propertyBuilder, string name, class Microsoft.EntityFrameworkCore.Infrastructure.Annotation annotation, class Microsoft.EntityFrameworkCore.Infrastructure.Annotation oldAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnPropertyAnnotationChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder,System.String,Microsoft.EntityFrameworkCore.Infrastructure.Annotation,Microsoft.EntityFrameworkCore.Infrastructure.Annotation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnPropertyAnnotationChanged (propertyBuilder As InternalPropertyBuilder, name As String, annotation As Annotation, oldAnnotation As Annotation) As Annotation" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder * string * Microsoft.EntityFrameworkCore.Infrastructure.Annotation * Microsoft.EntityFrameworkCore.Infrastructure.Annotation -&gt; Microsoft.EntityFrameworkCore.Infrastructure.Annotation&#xA;override this.OnPropertyAnnotationChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder * string * Microsoft.EntityFrameworkCore.Infrastructure.Annotation * Microsoft.EntityFrameworkCore.Infrastructure.Annotation -&gt; Microsoft.EntityFrameworkCore.Infrastructure.Annotation" Usage="conventionDispatcher.OnPropertyAnnotationChanged (propertyBuilder, name, annotation, oldAnnotation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Infrastructure.Annotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="name" Type="System.String" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.Annotation" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="oldAnnotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.Annotation" Index="3" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="propertyBuilder">To be added.</param>
        <param name="name">To be added.</param>
        <param name="annotation">To be added.</param>
        <param name="oldAnnotation">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyFieldChanged">
      <MemberSignature Language="C#" Value="public virtual bool OnPropertyFieldChanged (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder propertyBuilder, System.Reflection.FieldInfo oldFieldInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnPropertyFieldChanged(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder propertyBuilder, class System.Reflection.FieldInfo oldFieldInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnPropertyFieldChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder,System.Reflection.FieldInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnPropertyFieldChanged (propertyBuilder As InternalPropertyBuilder, oldFieldInfo As FieldInfo) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyFieldChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder * System.Reflection.FieldInfo -&gt; bool&#xA;override this.OnPropertyFieldChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder * System.Reflection.FieldInfo -&gt; bool" Usage="conventionDispatcher.OnPropertyFieldChanged (propertyBuilder, oldFieldInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder" Index="0" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="oldFieldInfo" Type="System.Reflection.FieldInfo" Index="1" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="propertyBuilder">To be added.</param>
        <param name="oldFieldInfo">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyFieldChanged">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.FieldInfo OnPropertyFieldChanged (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder propertyBuilder, System.Reflection.FieldInfo newFieldInfo, System.Reflection.FieldInfo oldFieldInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo OnPropertyFieldChanged(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder propertyBuilder, class System.Reflection.FieldInfo newFieldInfo, class System.Reflection.FieldInfo oldFieldInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnPropertyFieldChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder,System.Reflection.FieldInfo,System.Reflection.FieldInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnPropertyFieldChanged (propertyBuilder As InternalPropertyBuilder, newFieldInfo As FieldInfo, oldFieldInfo As FieldInfo) As FieldInfo" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyFieldChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder * System.Reflection.FieldInfo * System.Reflection.FieldInfo -&gt; System.Reflection.FieldInfo&#xA;override this.OnPropertyFieldChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder * System.Reflection.FieldInfo * System.Reflection.FieldInfo -&gt; System.Reflection.FieldInfo" Usage="conventionDispatcher.OnPropertyFieldChanged (propertyBuilder, newFieldInfo, oldFieldInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="newFieldInfo" Type="System.Reflection.FieldInfo" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="oldFieldInfo" Type="System.Reflection.FieldInfo" Index="2" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="propertyBuilder">To be added.</param>
        <param name="newFieldInfo">To be added.</param>
        <param name="oldFieldInfo">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyNullableChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder OnPropertyNullableChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder propertyBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder OnPropertyNullableChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder propertyBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnPropertyNullableChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnPropertyNullableChanged (propertyBuilder As IConventionPropertyBuilder) As IConventionPropertyBuilder" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyNullableChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder&#xA;override this.OnPropertyNullableChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder" Usage="conventionDispatcher.OnPropertyNullableChanged propertyBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionPropertyBuilder" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <param name="propertyBuilder">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyNullableChanged">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder OnPropertyNullableChanged (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder propertyBuilder);" FrameworkAlternate="efcore-1.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder OnPropertyNullableChanged(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder propertyBuilder) cil managed" FrameworkAlternate="efcore-1.0" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnPropertyNullableChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnPropertyNullableChanged (propertyBuilder As InternalPropertyBuilder) As InternalPropertyBuilder" FrameworkAlternate="efcore-1.0" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyNullableChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder&#xA;override this.OnPropertyNullableChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder -&gt; Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder" Usage="conventionDispatcher.OnPropertyNullableChanged propertyBuilder" FrameworkAlternate="efcore-1.0" />
      <MemberSignature Language="C#" Value="public virtual bool OnPropertyNullableChanged (Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder propertyBuilder);" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnPropertyNullableChanged(class Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder propertyBuilder) cil managed" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnPropertyNullableChanged (propertyBuilder As InternalPropertyBuilder) As Boolean" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyNullableChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder -&gt; bool&#xA;override this.OnPropertyNullableChanged : Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder -&gt; bool" Usage="conventionDispatcher.OnPropertyNullableChanged propertyBuilder" FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>1.0.6.0</AssemblyVersion>
        <AssemblyVersion>1.1.6.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType FrameworkAlternate="efcore-1.0">Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder</ReturnType>
        <ReturnType FrameworkAlternate="efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2">System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder" Index="0" FrameworkAlternate="efcore-1.0;efcore-1.1;efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="propertyBuilder">To be added.</param>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used 
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Run&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual T Run&lt;T&gt; (Func&lt;T&gt; func, ref Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey foreignKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T Run&lt;T&gt;(class System.Func`1&lt;!!T&gt; func, class Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey&amp; foreignKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.Run``1(System.Func{``0},Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Run(Of T) (func As Func(Of T), ByRef foreignKey As ForeignKey) As T" />
      <MemberSignature Language="F#" Value="abstract member Run : Func&lt;'T&gt; * ForeignKey -&gt; 'T&#xA;override this.Run : Func&lt;'T&gt; * ForeignKey -&gt; 'T" Usage="conventionDispatcher.Run (func, foreignKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="func" Type="System.Func&lt;T&gt;" Index="0" FrameworkAlternate="efcore-3.0;efcore-3.1" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey" RefType="ref" Index="1" FrameworkAlternate="efcore-3.0;efcore-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="func">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartBatch">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionBatch StartBatch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionBatch StartBatch() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.StartBatch" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartBatch () As IConventionBatch" />
      <MemberSignature Language="F#" Value="abstract member StartBatch : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionBatch&#xA;override this.StartBatch : unit -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionBatch" Usage="conventionDispatcher.StartBatch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionBatch</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tracker">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.MetadataTracker Tracker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.MetadataTracker Tracker" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.Tracker" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Tracker As MetadataTracker" />
      <MemberSignature Language="F#" Value="member this.Tracker : Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.MetadataTracker" Usage="Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.Tracker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2;efcore-3.0;efcore-3.1">
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.MetadataTracker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
