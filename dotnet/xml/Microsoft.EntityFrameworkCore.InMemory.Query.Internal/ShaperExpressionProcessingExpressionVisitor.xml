<Type Name="ShaperExpressionProcessingExpressionVisitor" FullName="Microsoft.EntityFrameworkCore.InMemory.Query.Internal.ShaperExpressionProcessingExpressionVisitor">
  <TypeSignature Language="C#" Value="public class ShaperExpressionProcessingExpressionVisitor : System.Linq.Expressions.ExpressionVisitor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ShaperExpressionProcessingExpressionVisitor extends System.Linq.Expressions.ExpressionVisitor" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.InMemory.Query.Internal.ShaperExpressionProcessingExpressionVisitor" />
  <TypeSignature Language="VB.NET" Value="Public Class ShaperExpressionProcessingExpressionVisitor&#xA;Inherits ExpressionVisitor" />
  <TypeSignature Language="F#" Value="type ShaperExpressionProcessingExpressionVisitor = class&#xA;    inherit ExpressionVisitor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Linq.Expressions.ExpressionVisitor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ShaperExpressionProcessingExpressionVisitor (Microsoft.EntityFrameworkCore.InMemory.Query.Internal.InMemoryQueryExpression queryExpression, System.Linq.Expressions.ParameterExpression valueBufferParameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.InMemory.Query.Internal.InMemoryQueryExpression queryExpression, class System.Linq.Expressions.ParameterExpression valueBufferParameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemory.Query.Internal.ShaperExpressionProcessingExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.InMemory.Query.Internal.InMemoryQueryExpression,System.Linq.Expressions.ParameterExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (queryExpression As InMemoryQueryExpression, valueBufferParameter As ParameterExpression)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.InMemory.Query.Internal.ShaperExpressionProcessingExpressionVisitor : Microsoft.EntityFrameworkCore.InMemory.Query.Internal.InMemoryQueryExpression * System.Linq.Expressions.ParameterExpression -&gt; Microsoft.EntityFrameworkCore.InMemory.Query.Internal.ShaperExpressionProcessingExpressionVisitor" Usage="new Microsoft.EntityFrameworkCore.InMemory.Query.Internal.ShaperExpressionProcessingExpressionVisitor (queryExpression, valueBufferParameter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="queryExpression" Type="Microsoft.EntityFrameworkCore.InMemory.Query.Internal.InMemoryQueryExpression" />
        <Parameter Name="valueBufferParameter" Type="System.Linq.Expressions.ParameterExpression" />
      </Parameters>
      <Docs>
        <param name="queryExpression">To be added.</param>
        <param name="valueBufferParameter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Inject">
      <MemberSignature Language="C#" Value="public virtual System.Linq.Expressions.Expression Inject (System.Linq.Expressions.Expression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression Inject(class System.Linq.Expressions.Expression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemory.Query.Internal.ShaperExpressionProcessingExpressionVisitor.Inject(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="F#" Value="abstract member Inject : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression&#xA;override this.Inject : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="shaperExpressionProcessingExpressionVisitor.Inject expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExtension">
      <MemberSignature Language="C#" Value="protected override System.Linq.Expressions.Expression VisitExtension (System.Linq.Expressions.Expression extensionExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Linq.Expressions.Expression VisitExtension(class System.Linq.Expressions.Expression extensionExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.InMemory.Query.Internal.ShaperExpressionProcessingExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function VisitExtension (extensionExpression As Expression) As Expression" />
      <MemberSignature Language="F#" Value="abstract member VisitExtension : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression&#xA;override this.VisitExtension : System.Linq.Expressions.Expression -&gt; System.Linq.Expressions.Expression" Usage="shaperExpressionProcessingExpressionVisitor.VisitExtension extensionExpression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.InMemory</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extensionExpression" Type="System.Linq.Expressions.Expression" />
      </Parameters>
      <Docs>
        <param name="extensionExpression">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
