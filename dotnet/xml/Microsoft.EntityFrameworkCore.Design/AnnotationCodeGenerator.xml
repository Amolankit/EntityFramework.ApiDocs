<Type Name="AnnotationCodeGenerator" FullName="Microsoft.EntityFrameworkCore.Design.AnnotationCodeGenerator">
  <TypeSignature Language="C#" Value="public class AnnotationCodeGenerator : Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AnnotationCodeGenerator extends System.Object implements class Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Design.AnnotationCodeGenerator" />
  <TypeSignature Language="VB.NET" Value="Public Class AnnotationCodeGenerator&#xA;Implements IAnnotationCodeGenerator" />
  <TypeSignature Language="F#" Value="type AnnotationCodeGenerator = class&#xA;    interface IAnnotationCodeGenerator" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.3.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.11.0</AssemblyVersion>
    <AssemblyVersion>2.2.6.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para>
                    Base class to be used by database providers when implementing an <see cref="T:Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator" /></para>
      <para>
                    This implementation returns <c>false</c> for all 'IsHandledByConvention' methods and
                    <c>null</c> for all 'GenerateFluentApi' methods. Providers should override for the
                    annotations that they understand.
                </para>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnnotationCodeGenerator (Microsoft.EntityFrameworkCore.Design.AnnotationCodeGeneratorDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Design.AnnotationCodeGeneratorDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.AnnotationCodeGenerator.#ctor(Microsoft.EntityFrameworkCore.Design.AnnotationCodeGeneratorDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As AnnotationCodeGeneratorDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Design.AnnotationCodeGenerator : Microsoft.EntityFrameworkCore.Design.AnnotationCodeGeneratorDependencies -&gt; Microsoft.EntityFrameworkCore.Design.AnnotationCodeGenerator" Usage="new Microsoft.EntityFrameworkCore.Design.AnnotationCodeGenerator dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Design.AnnotationCodeGeneratorDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies"> Parameter object containing dependencies for this service. </param>
        <summary>
                Initializes a new instance of this class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependencies">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Design.AnnotationCodeGeneratorDependencies Dependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Design.AnnotationCodeGeneratorDependencies Dependencies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Design.AnnotationCodeGenerator.Dependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Dependencies As AnnotationCodeGeneratorDependencies" />
      <MemberSignature Language="F#" Value="member this.Dependencies : Microsoft.EntityFrameworkCore.Design.AnnotationCodeGeneratorDependencies" Usage="Microsoft.EntityFrameworkCore.Design.AnnotationCodeGenerator.Dependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Design.AnnotationCodeGeneratorDependencies</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Parameter object containing dependencies for this service.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateFluentApi">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment GenerateFluentApi (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment GenerateFluentApi(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.AnnotationCodeGenerator.GenerateFluentApi(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateFluentApi (entityType As IEntityType, annotation As IAnnotation) As MethodCallCodeFragment" />
      <MemberSignature Language="F#" Value="abstract member GenerateFluentApi : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation -&gt; Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment&#xA;override this.GenerateFluentApi : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation -&gt; Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment" Usage="annotationCodeGenerator.GenerateFluentApi (entityType, annotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator.GenerateFluentApi(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0" />
      </Parameters>
      <Docs>
        <param name="entityType"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IEntityType" />. </param>
        <param name="annotation"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" />. </param>
        <summary>
                Returns <c>null</c> unless overridden to do otherwise.
            </summary>
        <returns>
          <c>Null.</c>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateFluentApi">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment GenerateFluentApi (Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey, Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment GenerateFluentApi(class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey, class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.AnnotationCodeGenerator.GenerateFluentApi(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateFluentApi (foreignKey As IForeignKey, annotation As IAnnotation) As MethodCallCodeFragment" />
      <MemberSignature Language="F#" Value="abstract member GenerateFluentApi : Microsoft.EntityFrameworkCore.Metadata.IForeignKey * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation -&gt; Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment&#xA;override this.GenerateFluentApi : Microsoft.EntityFrameworkCore.Metadata.IForeignKey * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation -&gt; Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment" Usage="annotationCodeGenerator.GenerateFluentApi (foreignKey, annotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator.GenerateFluentApi(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0" />
      </Parameters>
      <Docs>
        <param name="foreignKey"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IForeignKey" />. </param>
        <param name="annotation"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" />. </param>
        <summary>
                Returns <c>null</c> unless overridden to do otherwise.
            </summary>
        <returns>
          <c>Null.</c>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateFluentApi">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment GenerateFluentApi (Microsoft.EntityFrameworkCore.Metadata.IIndex index, Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment GenerateFluentApi(class Microsoft.EntityFrameworkCore.Metadata.IIndex index, class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.AnnotationCodeGenerator.GenerateFluentApi(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateFluentApi (index As IIndex, annotation As IAnnotation) As MethodCallCodeFragment" />
      <MemberSignature Language="F#" Value="abstract member GenerateFluentApi : Microsoft.EntityFrameworkCore.Metadata.IIndex * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation -&gt; Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment&#xA;override this.GenerateFluentApi : Microsoft.EntityFrameworkCore.Metadata.IIndex * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation -&gt; Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment" Usage="annotationCodeGenerator.GenerateFluentApi (index, annotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator.GenerateFluentApi(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0" />
      </Parameters>
      <Docs>
        <param name="index"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IIndex" />. </param>
        <param name="annotation"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" />. </param>
        <summary>
                Returns <c>null</c> unless overridden to do otherwise.
            </summary>
        <returns>
          <c>Null.</c>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateFluentApi">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment GenerateFluentApi (Microsoft.EntityFrameworkCore.Metadata.IKey key, Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment GenerateFluentApi(class Microsoft.EntityFrameworkCore.Metadata.IKey key, class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.AnnotationCodeGenerator.GenerateFluentApi(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateFluentApi (key As IKey, annotation As IAnnotation) As MethodCallCodeFragment" />
      <MemberSignature Language="F#" Value="abstract member GenerateFluentApi : Microsoft.EntityFrameworkCore.Metadata.IKey * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation -&gt; Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment&#xA;override this.GenerateFluentApi : Microsoft.EntityFrameworkCore.Metadata.IKey * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation -&gt; Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment" Usage="annotationCodeGenerator.GenerateFluentApi (key, annotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator.GenerateFluentApi(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Microsoft.EntityFrameworkCore.Metadata.IKey" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0" />
      </Parameters>
      <Docs>
        <param name="key"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IKey" />. </param>
        <param name="annotation"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" />. </param>
        <summary>
                Returns <c>null</c> unless overridden to do otherwise.
            </summary>
        <returns>
          <c>Null.</c>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateFluentApi">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment GenerateFluentApi (Microsoft.EntityFrameworkCore.Metadata.IModel model, Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment GenerateFluentApi(class Microsoft.EntityFrameworkCore.Metadata.IModel model, class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.AnnotationCodeGenerator.GenerateFluentApi(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateFluentApi (model As IModel, annotation As IAnnotation) As MethodCallCodeFragment" />
      <MemberSignature Language="F#" Value="abstract member GenerateFluentApi : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation -&gt; Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment&#xA;override this.GenerateFluentApi : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation -&gt; Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment" Usage="annotationCodeGenerator.GenerateFluentApi (model, annotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator.GenerateFluentApi(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0" />
      </Parameters>
      <Docs>
        <param name="model"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IModel" />. </param>
        <param name="annotation"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" />. </param>
        <summary>
                Returns <c>null</c> unless overridden to do otherwise.
            </summary>
        <returns>
          <c>Null.</c>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateFluentApi">
      <MemberSignature Language="C#" Value="public virtual Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment GenerateFluentApi (Microsoft.EntityFrameworkCore.Metadata.IProperty property, Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment GenerateFluentApi(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.AnnotationCodeGenerator.GenerateFluentApi(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateFluentApi (property As IProperty, annotation As IAnnotation) As MethodCallCodeFragment" />
      <MemberSignature Language="F#" Value="abstract member GenerateFluentApi : Microsoft.EntityFrameworkCore.Metadata.IProperty * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation -&gt; Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment&#xA;override this.GenerateFluentApi : Microsoft.EntityFrameworkCore.Metadata.IProperty * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation -&gt; Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment" Usage="annotationCodeGenerator.GenerateFluentApi (property, annotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator.GenerateFluentApi(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Design.MethodCallCodeFragment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="0" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" Index="1" FrameworkAlternate="efcore-2.1;efcore-2.2;efcore-3.0" />
      </Parameters>
      <Docs>
        <param name="property"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IProperty" />. </param>
        <param name="annotation"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" />. </param>
        <summary>
                Returns <c>null</c> unless overridden to do otherwise.
            </summary>
        <returns>
          <c>Null.</c>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateFluentApi">
      <MemberSignature Language="C#" Value="public virtual string GenerateFluentApi (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation, string language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateFluentApi(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation, string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.AnnotationCodeGenerator.GenerateFluentApi(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateFluentApi (entityType As IEntityType, annotation As IAnnotation, language As String) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateFluentApi : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation * string -&gt; string&#xA;override this.GenerateFluentApi : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation * string -&gt; string" Usage="annotationCodeGenerator.GenerateFluentApi (entityType, annotation, language)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator.GenerateFluentApi(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.1;efcore-2.2">
          <AttributeName>System.Obsolete("Use GenerateFluentApi(IProperty, IAnnotation) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="language" Type="System.String" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="entityType"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IEntityType" />. </param>
        <param name="annotation"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" />. </param>
        <param name="language"> The programming language to use. For example, CSharp. </param>
        <summary>
                Returns <c>null</c> unless overridden to do otherwise.
            </summary>
        <returns>
          <c>Null.</c>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateFluentApi">
      <MemberSignature Language="C#" Value="public virtual string GenerateFluentApi (Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey, Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation, string language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateFluentApi(class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey, class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation, string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.AnnotationCodeGenerator.GenerateFluentApi(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateFluentApi (foreignKey As IForeignKey, annotation As IAnnotation, language As String) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateFluentApi : Microsoft.EntityFrameworkCore.Metadata.IForeignKey * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation * string -&gt; string&#xA;override this.GenerateFluentApi : Microsoft.EntityFrameworkCore.Metadata.IForeignKey * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation * string -&gt; string" Usage="annotationCodeGenerator.GenerateFluentApi (foreignKey, annotation, language)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator.GenerateFluentApi(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.1;efcore-2.2">
          <AttributeName>System.Obsolete("Use GenerateFluentApi(IProperty, IAnnotation) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="language" Type="System.String" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="foreignKey"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IForeignKey" />. </param>
        <param name="annotation"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" />. </param>
        <param name="language"> The programming language to use. For example, CSharp. </param>
        <summary>
                Returns <c>null</c> unless overridden to do otherwise.
            </summary>
        <returns>
          <c>Null.</c>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateFluentApi">
      <MemberSignature Language="C#" Value="public virtual string GenerateFluentApi (Microsoft.EntityFrameworkCore.Metadata.IIndex index, Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation, string language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateFluentApi(class Microsoft.EntityFrameworkCore.Metadata.IIndex index, class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation, string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.AnnotationCodeGenerator.GenerateFluentApi(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateFluentApi (index As IIndex, annotation As IAnnotation, language As String) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateFluentApi : Microsoft.EntityFrameworkCore.Metadata.IIndex * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation * string -&gt; string&#xA;override this.GenerateFluentApi : Microsoft.EntityFrameworkCore.Metadata.IIndex * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation * string -&gt; string" Usage="annotationCodeGenerator.GenerateFluentApi (index, annotation, language)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator.GenerateFluentApi(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.1;efcore-2.2">
          <AttributeName>System.Obsolete("Use GenerateFluentApi(IProperty, IAnnotation) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="language" Type="System.String" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="index"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IIndex" />. </param>
        <param name="annotation"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" />. </param>
        <param name="language"> The programming language to use. For example, CSharp. </param>
        <summary>
                Returns <c>null</c> unless overridden to do otherwise.
            </summary>
        <returns>
          <c>Null.</c>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateFluentApi">
      <MemberSignature Language="C#" Value="public virtual string GenerateFluentApi (Microsoft.EntityFrameworkCore.Metadata.IKey key, Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation, string language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateFluentApi(class Microsoft.EntityFrameworkCore.Metadata.IKey key, class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation, string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.AnnotationCodeGenerator.GenerateFluentApi(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateFluentApi (key As IKey, annotation As IAnnotation, language As String) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateFluentApi : Microsoft.EntityFrameworkCore.Metadata.IKey * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation * string -&gt; string&#xA;override this.GenerateFluentApi : Microsoft.EntityFrameworkCore.Metadata.IKey * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation * string -&gt; string" Usage="annotationCodeGenerator.GenerateFluentApi (key, annotation, language)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator.GenerateFluentApi(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.1;efcore-2.2">
          <AttributeName>System.Obsolete("Use GenerateFluentApi(IProperty, IAnnotation) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Microsoft.EntityFrameworkCore.Metadata.IKey" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="language" Type="System.String" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="key"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IKey" />. </param>
        <param name="annotation"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" />. </param>
        <param name="language"> The programming language to use. For example, CSharp. </param>
        <summary>
                Returns <c>null</c> unless overridden to do otherwise.
            </summary>
        <returns>
          <c>Null.</c>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateFluentApi">
      <MemberSignature Language="C#" Value="public virtual string GenerateFluentApi (Microsoft.EntityFrameworkCore.Metadata.IModel model, Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation, string language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateFluentApi(class Microsoft.EntityFrameworkCore.Metadata.IModel model, class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation, string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.AnnotationCodeGenerator.GenerateFluentApi(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateFluentApi (model As IModel, annotation As IAnnotation, language As String) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateFluentApi : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation * string -&gt; string&#xA;override this.GenerateFluentApi : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation * string -&gt; string" Usage="annotationCodeGenerator.GenerateFluentApi (model, annotation, language)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator.GenerateFluentApi(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.1;efcore-2.2">
          <AttributeName>System.Obsolete("Use GenerateFluentApi(IProperty, IAnnotation) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="language" Type="System.String" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="model"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IModel" />. </param>
        <param name="annotation"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" />. </param>
        <param name="language"> The programming language to use. For example, CSharp. </param>
        <summary>
                Returns <c>null</c> unless overridden to do otherwise.
            </summary>
        <returns>
          <c>Null.</c>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateFluentApi">
      <MemberSignature Language="C#" Value="public virtual string GenerateFluentApi (Microsoft.EntityFrameworkCore.Metadata.IProperty property, Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation, string language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GenerateFluentApi(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation, string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.AnnotationCodeGenerator.GenerateFluentApi(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateFluentApi (property As IProperty, annotation As IAnnotation, language As String) As String" />
      <MemberSignature Language="F#" Value="abstract member GenerateFluentApi : Microsoft.EntityFrameworkCore.Metadata.IProperty * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation * string -&gt; string&#xA;override this.GenerateFluentApi : Microsoft.EntityFrameworkCore.Metadata.IProperty * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation * string -&gt; string" Usage="annotationCodeGenerator.GenerateFluentApi (property, annotation, language)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator.GenerateFluentApi(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="efcore-2.1;efcore-2.2">
          <AttributeName>System.Obsolete("Use GenerateFluentApi(IProperty, IAnnotation) instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" Index="0" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" Index="1" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
        <Parameter Name="language" Type="System.String" Index="2" FrameworkAlternate="efcore-2.0;efcore-2.1;efcore-2.2" />
      </Parameters>
      <Docs>
        <param name="property"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IProperty" />. </param>
        <param name="annotation"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" />. </param>
        <param name="language"> The programming language to use. For example, CSharp. </param>
        <summary>
                Returns <c>null</c> unless overridden to do otherwise.
            </summary>
        <returns>
          <c>Null.</c>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHandledByConvention">
      <MemberSignature Language="C#" Value="public virtual bool IsHandledByConvention (Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsHandledByConvention(class Microsoft.EntityFrameworkCore.Metadata.IEntityType entityType, class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.AnnotationCodeGenerator.IsHandledByConvention(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsHandledByConvention (entityType As IEntityType, annotation As IAnnotation) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsHandledByConvention : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation -&gt; bool&#xA;override this.IsHandledByConvention : Microsoft.EntityFrameworkCore.Metadata.IEntityType * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation -&gt; bool" Usage="annotationCodeGenerator.IsHandledByConvention (entityType, annotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator.IsHandledByConvention(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IEntityType" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" />
      </Parameters>
      <Docs>
        <param name="entityType"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IEntityType" />. </param>
        <param name="annotation"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" />. </param>
        <summary>
                Returns <c>false</c> unless overridden to do otherwise.
            </summary>
        <returns>
          <c>False.</c>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHandledByConvention">
      <MemberSignature Language="C#" Value="public virtual bool IsHandledByConvention (Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey, Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsHandledByConvention(class Microsoft.EntityFrameworkCore.Metadata.IForeignKey foreignKey, class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.AnnotationCodeGenerator.IsHandledByConvention(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsHandledByConvention (foreignKey As IForeignKey, annotation As IAnnotation) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsHandledByConvention : Microsoft.EntityFrameworkCore.Metadata.IForeignKey * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation -&gt; bool&#xA;override this.IsHandledByConvention : Microsoft.EntityFrameworkCore.Metadata.IForeignKey * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation -&gt; bool" Usage="annotationCodeGenerator.IsHandledByConvention (foreignKey, annotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator.IsHandledByConvention(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IForeignKey" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" />
      </Parameters>
      <Docs>
        <param name="foreignKey"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IForeignKey" />. </param>
        <param name="annotation"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" />. </param>
        <summary>
                Returns <c>false</c> unless overridden to do otherwise.
            </summary>
        <returns>
          <c>False.</c>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHandledByConvention">
      <MemberSignature Language="C#" Value="public virtual bool IsHandledByConvention (Microsoft.EntityFrameworkCore.Metadata.IIndex index, Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsHandledByConvention(class Microsoft.EntityFrameworkCore.Metadata.IIndex index, class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.AnnotationCodeGenerator.IsHandledByConvention(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsHandledByConvention (index As IIndex, annotation As IAnnotation) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsHandledByConvention : Microsoft.EntityFrameworkCore.Metadata.IIndex * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation -&gt; bool&#xA;override this.IsHandledByConvention : Microsoft.EntityFrameworkCore.Metadata.IIndex * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation -&gt; bool" Usage="annotationCodeGenerator.IsHandledByConvention (index, annotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator.IsHandledByConvention(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" />
      </Parameters>
      <Docs>
        <param name="index"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IIndex" />. </param>
        <param name="annotation"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" />. </param>
        <summary>
                Returns <c>false</c> unless overridden to do otherwise.
            </summary>
        <returns>
          <c>False.</c>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHandledByConvention">
      <MemberSignature Language="C#" Value="public virtual bool IsHandledByConvention (Microsoft.EntityFrameworkCore.Metadata.IKey key, Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsHandledByConvention(class Microsoft.EntityFrameworkCore.Metadata.IKey key, class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.AnnotationCodeGenerator.IsHandledByConvention(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsHandledByConvention (key As IKey, annotation As IAnnotation) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsHandledByConvention : Microsoft.EntityFrameworkCore.Metadata.IKey * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation -&gt; bool&#xA;override this.IsHandledByConvention : Microsoft.EntityFrameworkCore.Metadata.IKey * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation -&gt; bool" Usage="annotationCodeGenerator.IsHandledByConvention (key, annotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator.IsHandledByConvention(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="Microsoft.EntityFrameworkCore.Metadata.IKey" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" />
      </Parameters>
      <Docs>
        <param name="key"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IKey" />. </param>
        <param name="annotation"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" />. </param>
        <summary>
                Returns <c>false</c> unless overridden to do otherwise.
            </summary>
        <returns>
          <c>False.</c>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHandledByConvention">
      <MemberSignature Language="C#" Value="public virtual bool IsHandledByConvention (Microsoft.EntityFrameworkCore.Metadata.IModel model, Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsHandledByConvention(class Microsoft.EntityFrameworkCore.Metadata.IModel model, class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.AnnotationCodeGenerator.IsHandledByConvention(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsHandledByConvention (model As IModel, annotation As IAnnotation) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsHandledByConvention : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation -&gt; bool&#xA;override this.IsHandledByConvention : Microsoft.EntityFrameworkCore.Metadata.IModel * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation -&gt; bool" Usage="annotationCodeGenerator.IsHandledByConvention (model, annotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator.IsHandledByConvention(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="model" Type="Microsoft.EntityFrameworkCore.Metadata.IModel" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" />
      </Parameters>
      <Docs>
        <param name="model"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IModel" />. </param>
        <param name="annotation"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" />. </param>
        <summary>
                Returns <c>false</c> unless overridden to do otherwise.
            </summary>
        <returns>
          <c>False.</c>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHandledByConvention">
      <MemberSignature Language="C#" Value="public virtual bool IsHandledByConvention (Microsoft.EntityFrameworkCore.Metadata.IProperty property, Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsHandledByConvention(class Microsoft.EntityFrameworkCore.Metadata.IProperty property, class Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation annotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Design.AnnotationCodeGenerator.IsHandledByConvention(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsHandledByConvention (property As IProperty, annotation As IAnnotation) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member IsHandledByConvention : Microsoft.EntityFrameworkCore.Metadata.IProperty * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation -&gt; bool&#xA;override this.IsHandledByConvention : Microsoft.EntityFrameworkCore.Metadata.IProperty * Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation -&gt; bool" Usage="annotationCodeGenerator.IsHandledByConvention (property, annotation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Design.IAnnotationCodeGenerator.IsHandledByConvention(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.3.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.11.0</AssemblyVersion>
        <AssemblyVersion>2.2.6.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.EntityFrameworkCore.Metadata.IProperty" />
        <Parameter Name="annotation" Type="Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" />
      </Parameters>
      <Docs>
        <param name="property"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IProperty" />. </param>
        <param name="annotation"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation" />. </param>
        <summary>
                Returns <c>false</c> unless overridden to do otherwise.
            </summary>
        <returns>
          <c>False.</c>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
