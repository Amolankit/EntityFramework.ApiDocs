<Type Name="RelationalIndexExtensions" FullName="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalIndexExtensions">
  <TypeSignature Language="C#" Value="public static class RelationalIndexExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RelationalIndexExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalIndexExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RelationalIndexExtensions" />
  <TypeSignature Language="F#" Value="type RelationalIndexExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AreCompatible">
      <MemberSignature Language="C#" Value="public static bool AreCompatible (this Microsoft.EntityFrameworkCore.Metadata.IIndex index, Microsoft.EntityFrameworkCore.Metadata.IIndex duplicateIndex, bool shouldThrow);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool AreCompatible(class Microsoft.EntityFrameworkCore.Metadata.IIndex index, class Microsoft.EntityFrameworkCore.Metadata.IIndex duplicateIndex, bool shouldThrow) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalIndexExtensions.AreCompatible(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.IIndex,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AreCompatible (index As IIndex, duplicateIndex As IIndex, shouldThrow As Boolean) As Boolean" />
      <MemberSignature Language="F#" Value="static member AreCompatible : Microsoft.EntityFrameworkCore.Metadata.IIndex * Microsoft.EntityFrameworkCore.Metadata.IIndex * bool -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalIndexExtensions.AreCompatible (index, duplicateIndex, shouldThrow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore.Relational</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" RefType="this" />
        <Parameter Name="duplicateIndex" Type="Microsoft.EntityFrameworkCore.Metadata.IIndex" />
        <Parameter Name="shouldThrow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <param name="duplicateIndex">To be added.</param>
        <param name="shouldThrow">To be added.</param>
        <summary>
                This is an internal API that supports the Entity Framework Core infrastructure and not subject to
                the same compatibility standards as public APIs. It may be changed or removed without notice in
                any release. You should only use it directly in your code with extreme caution and knowing that
                doing so can result in application failures when updating to a new Entity Framework Core release.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
