<Type Name="RelationshipDiscoveryConvention" FullName="Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention">
  <TypeSignature Language="C#" Value="public class RelationshipDiscoveryConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeAddedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeBaseTypeChangedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeIgnoredConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeMemberIgnoredConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyOwnershipChangedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.INavigationAddedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.INavigationRemovedConvention" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RelationshipDiscoveryConvention extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeAddedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeBaseTypeChangedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeIgnoredConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeMemberIgnoredConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyOwnershipChangedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.INavigationAddedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.INavigationRemovedConvention" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationshipDiscoveryConvention&#xA;Implements IEntityTypeAddedConvention, IEntityTypeBaseTypeChangedConvention, IEntityTypeIgnoredConvention, IEntityTypeMemberIgnoredConvention, IForeignKeyOwnershipChangedConvention, INavigationAddedConvention, INavigationRemovedConvention" />
  <TypeSignature Language="F#" Value="type RelationshipDiscoveryConvention = class&#xA;    interface IEntityTypeAddedConvention&#xA;    interface IConvention&#xA;    interface IEntityTypeIgnoredConvention&#xA;    interface IEntityTypeBaseTypeChangedConvention&#xA;    interface INavigationRemovedConvention&#xA;    interface IEntityTypeMemberIgnoredConvention&#xA;    interface INavigationAddedConvention&#xA;    interface IForeignKeyOwnershipChangedConvention" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeAddedConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeBaseTypeChangedConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeIgnoredConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeMemberIgnoredConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyOwnershipChangedConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.INavigationAddedConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.INavigationRemovedConvention</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                A convention that configures relationships between entity types based on the navigation properties
                as long as there is no ambiguity as to which is the corresponding inverse navigation.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RelationshipDiscoveryConvention (Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention.#ctor(Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As ProviderConventionSetBuilderDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention" Usage="new Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies"> Parameter object containing dependencies for this convention. </param>
        <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependencies">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies Dependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies Dependencies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention.Dependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Dependencies As ProviderConventionSetBuilderDependencies" />
      <MemberSignature Language="F#" Value="member this.Dependencies : Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies" Usage="Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention.Dependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Parameter object containing service dependencies.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEntityTypeAdded">
      <MemberSignature Language="C#" Value="public virtual void ProcessEntityTypeAdded (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessEntityTypeAdded(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention.ProcessEntityTypeAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessEntityTypeAdded (entityTypeBuilder As IConventionEntityTypeBuilder, context As IConventionContext(Of IConventionEntityTypeBuilder))" />
      <MemberSignature Language="F#" Value="abstract member ProcessEntityTypeAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder&gt; -&gt; unit&#xA;override this.ProcessEntityTypeAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder&gt; -&gt; unit" Usage="relationshipDiscoveryConvention.ProcessEntityTypeAdded (entityTypeBuilder, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeAddedConvention.ProcessEntityTypeAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder"> The builder for the entity type. </param>
        <param name="context"> Additional information associated with convention execution. </param>
        <summary>
                Called after an entity type is added to the model.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEntityTypeBaseTypeChanged">
      <MemberSignature Language="C#" Value="public virtual void ProcessEntityTypeBaseTypeChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType newBaseType, Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType oldBaseType, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessEntityTypeBaseTypeChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType newBaseType, class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType oldBaseType, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention.ProcessEntityTypeBaseTypeChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessEntityTypeBaseTypeChanged (entityTypeBuilder As IConventionEntityTypeBuilder, newBaseType As IConventionEntityType, oldBaseType As IConventionEntityType, context As IConventionContext(Of IConventionEntityType))" />
      <MemberSignature Language="F#" Value="abstract member ProcessEntityTypeBaseTypeChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt; -&gt; unit&#xA;override this.ProcessEntityTypeBaseTypeChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt; -&gt; unit" Usage="relationshipDiscoveryConvention.ProcessEntityTypeBaseTypeChanged (entityTypeBuilder, newBaseType, oldBaseType, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeBaseTypeChangedConvention.ProcessEntityTypeBaseTypeChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" />
        <Parameter Name="newBaseType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" />
        <Parameter Name="oldBaseType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt;" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder"> The builder for the entity type. </param>
        <param name="newBaseType"> The new base entity type. </param>
        <param name="oldBaseType"> The old base entity type. </param>
        <param name="context"> Additional information associated with convention execution. </param>
        <summary>
                Called after the base type of an entity type changes.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEntityTypeIgnored">
      <MemberSignature Language="C#" Value="public virtual void ProcessEntityTypeIgnored (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string name, Type type, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessEntityTypeIgnored(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, string name, class System.Type type, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention.ProcessEntityTypeIgnored(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.String,System.Type,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessEntityTypeIgnored (modelBuilder As IConventionModelBuilder, name As String, type As Type, context As IConventionContext(Of String))" />
      <MemberSignature Language="F#" Value="abstract member ProcessEntityTypeIgnored : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * string * Type * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; -&gt; unit&#xA;override this.ProcessEntityTypeIgnored : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * string * Type * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; -&gt; unit" Usage="relationshipDiscoveryConvention.ProcessEntityTypeIgnored (modelBuilder, name, type, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeIgnoredConvention.ProcessEntityTypeIgnored(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.String,System.Type,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="modelBuilder"> The builder for the model. </param>
        <param name="name"> The name of the ignored entity type. </param>
        <param name="type"> The ignored entity type. </param>
        <param name="context"> Additional information associated with convention execution. </param>
        <summary>
                Called after an entity type is ignored.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEntityTypeMemberIgnored">
      <MemberSignature Language="C#" Value="public virtual void ProcessEntityTypeMemberIgnored (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string name, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessEntityTypeMemberIgnored(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, string name, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention.ProcessEntityTypeMemberIgnored(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.String,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessEntityTypeMemberIgnored (entityTypeBuilder As IConventionEntityTypeBuilder, name As String, context As IConventionContext(Of String))" />
      <MemberSignature Language="F#" Value="abstract member ProcessEntityTypeMemberIgnored : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * string * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; -&gt; unit&#xA;override this.ProcessEntityTypeMemberIgnored : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * string * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; -&gt; unit" Usage="relationshipDiscoveryConvention.ProcessEntityTypeMemberIgnored (entityTypeBuilder, name, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IEntityTypeMemberIgnoredConvention.ProcessEntityTypeMemberIgnored(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.String,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder"> The builder for the entity type. </param>
        <param name="name"> The name of the ignored member. </param>
        <param name="context"> Additional information associated with convention execution. </param>
        <summary>
                Called after an entity type member is ignored.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessForeignKeyOwnershipChanged">
      <MemberSignature Language="C#" Value="public virtual void ProcessForeignKeyOwnershipChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationshipBuilder, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessForeignKeyOwnershipChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationshipBuilder, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention.ProcessForeignKeyOwnershipChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessForeignKeyOwnershipChanged (relationshipBuilder As IConventionRelationshipBuilder, context As IConventionContext(Of IConventionRelationshipBuilder))" />
      <MemberSignature Language="F#" Value="abstract member ProcessForeignKeyOwnershipChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder&gt; -&gt; unit&#xA;override this.ProcessForeignKeyOwnershipChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder&gt; -&gt; unit" Usage="relationshipDiscoveryConvention.ProcessForeignKeyOwnershipChanged (relationshipBuilder, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IForeignKeyOwnershipChangedConvention.ProcessForeignKeyOwnershipChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder"> The builder for the foreign key. </param>
        <param name="context"> Additional information associated with convention execution. </param>
        <summary>
                Called after the ownership value for a foreign key is changed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessNavigationAdded">
      <MemberSignature Language="C#" Value="public virtual void ProcessNavigationAdded (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationshipBuilder, Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation navigation, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessNavigationAdded(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationshipBuilder, class Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation navigation, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention.ProcessNavigationAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessNavigationAdded (relationshipBuilder As IConventionRelationshipBuilder, navigation As IConventionNavigation, context As IConventionContext(Of IConventionNavigation))" />
      <MemberSignature Language="F#" Value="abstract member ProcessNavigationAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation&gt; -&gt; unit&#xA;override this.ProcessNavigationAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation&gt; -&gt; unit" Usage="relationshipDiscoveryConvention.ProcessNavigationAdded (relationshipBuilder, navigation, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.INavigationAddedConvention.ProcessNavigationAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation&gt;" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder"> The builder for the foreign key. </param>
        <param name="navigation"> The navigation. </param>
        <param name="context"> Additional information associated with convention execution. </param>
        <summary>
                Called after a navigation is added to the entity type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessNavigationRemoved">
      <MemberSignature Language="C#" Value="public virtual void ProcessNavigationRemoved (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder sourceEntityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder targetEntityTypeBuilder, string navigationName, System.Reflection.MemberInfo memberInfo, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessNavigationRemoved(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder sourceEntityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder targetEntityTypeBuilder, string navigationName, class System.Reflection.MemberInfo memberInfo, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.RelationshipDiscoveryConvention.ProcessNavigationRemoved(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.String,System.Reflection.MemberInfo,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessNavigationRemoved (sourceEntityTypeBuilder As IConventionEntityTypeBuilder, targetEntityTypeBuilder As IConventionEntityTypeBuilder, navigationName As String, memberInfo As MemberInfo, context As IConventionContext(Of String))" />
      <MemberSignature Language="F#" Value="abstract member ProcessNavigationRemoved : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * string * System.Reflection.MemberInfo * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; -&gt; unit&#xA;override this.ProcessNavigationRemoved : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * string * System.Reflection.MemberInfo * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; -&gt; unit" Usage="relationshipDiscoveryConvention.ProcessNavigationRemoved (sourceEntityTypeBuilder, targetEntityTypeBuilder, navigationName, memberInfo, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.INavigationRemovedConvention.ProcessNavigationRemoved(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.String,System.Reflection.MemberInfo,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{System.String})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEntityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" />
        <Parameter Name="targetEntityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" />
        <Parameter Name="navigationName" Type="System.String" />
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="sourceEntityTypeBuilder"> The builder for the entity type that contained the navigation. </param>
        <param name="targetEntityTypeBuilder"> The builder for the target entity type of the navigation. </param>
        <param name="navigationName"> The navigation name. </param>
        <param name="memberInfo"> The member used for by the navigation. </param>
        <param name="context"> Additional information associated with convention execution. </param>
        <summary>
                Called after a navigation is removed from the entity type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
