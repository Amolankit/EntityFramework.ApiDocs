<Type Name="InversePropertyAttributeConvention" FullName="Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention">
  <TypeSignature Language="C#" Value="public class InversePropertyAttributeConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.NavigationAttributeConventionBase&lt;System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute&gt;, Microsoft.EntityFrameworkCore.Metadata.Conventions.IModelFinalizedConvention" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InversePropertyAttributeConvention extends Microsoft.EntityFrameworkCore.Metadata.Conventions.NavigationAttributeConventionBase`1&lt;class System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute&gt; implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IModelFinalizedConvention" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention" />
  <TypeSignature Language="VB.NET" Value="Public Class InversePropertyAttributeConvention&#xA;Inherits NavigationAttributeConventionBase(Of InversePropertyAttribute)&#xA;Implements IModelFinalizedConvention" />
  <TypeSignature Language="F#" Value="type InversePropertyAttributeConvention = class&#xA;    inherit NavigationAttributeConventionBase&lt;InversePropertyAttribute&gt;&#xA;    interface IModelFinalizedConvention&#xA;    interface IConvention" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.EntityFrameworkCore.Metadata.Conventions.NavigationAttributeConventionBase&lt;System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TAttribute">System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IModelFinalizedConvention</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                A convention that configures the inverse navigation property based on the <see cref="T:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" />
                specified on the other navigation property.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InversePropertyAttributeConvention (Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention.#ctor(Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As ProviderConventionSetBuilderDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention" Usage="new Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies"> Parameter object containing dependencies for this convention. </param>
        <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbiguous">
      <MemberSignature Language="C#" Value="public static bool IsAmbiguous (Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, System.Reflection.MemberInfo navigation, Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType targetEntityType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsAmbiguous(class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType entityType, class System.Reflection.MemberInfo navigation, class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType targetEntityType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention.IsAmbiguous(Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.Reflection.MemberInfo,Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAmbiguous (entityType As IConventionEntityType, navigation As MemberInfo, targetEntityType As IConventionEntityType) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsAmbiguous : Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * System.Reflection.MemberInfo * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType -&gt; bool" Usage="Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention.IsAmbiguous (entityType, navigation, targetEntityType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" />
        <Parameter Name="navigation" Type="System.Reflection.MemberInfo" />
        <Parameter Name="targetEntityType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" />
      </Parameters>
      <Docs>
        <param name="entityType"> The entity type. </param>
        <param name="navigation"> The navigation. </param>
        <param name="targetEntityType"> Target entity type. </param>
        <summary>
                Returns a value indication whether the given navigation has ambiguous inverse navigations with
                <see cref="T:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" />.
            </summary>
        <returns>
          <c>true</c> if the given navigation has ambiguous inverse navigations with <see cref="T:System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" />.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEntityTypeAdded">
      <MemberSignature Language="C#" Value="public override void ProcessEntityTypeAdded (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, System.Reflection.MemberInfo navigationMemberInfo, Type targetClrType, System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEntityTypeAdded(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, class System.Reflection.MemberInfo navigationMemberInfo, class System.Type targetClrType, class System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention.ProcessEntityTypeAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.Reflection.MemberInfo,System.Type,System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEntityTypeAdded (entityTypeBuilder As IConventionEntityTypeBuilder, navigationMemberInfo As MemberInfo, targetClrType As Type, attribute As InversePropertyAttribute, context As IConventionContext(Of IConventionEntityTypeBuilder))" />
      <MemberSignature Language="F#" Value="override this.ProcessEntityTypeAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * System.Reflection.MemberInfo * Type * System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder&gt; -&gt; unit" Usage="inversePropertyAttributeConvention.ProcessEntityTypeAdded (entityTypeBuilder, navigationMemberInfo, targetClrType, attribute, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" />
        <Parameter Name="navigationMemberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="targetClrType" Type="System.Type" />
        <Parameter Name="attribute" Type="System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder"> The builder for the entity type. </param>
        <param name="navigationMemberInfo"> The navigation member info. </param>
        <param name="targetClrType"> The CLR type of the target entity type</param>
        <param name="attribute"> The attribute. </param>
        <param name="context"> Additional information associated with convention execution. </param>
        <summary>
                Called for every navigation property that has an attribute after an entity type is added to the model.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEntityTypeBaseTypeChanged">
      <MemberSignature Language="C#" Value="public override void ProcessEntityTypeBaseTypeChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType newBaseType, Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType oldBaseType, System.Reflection.MemberInfo navigationMemberInfo, Type targetClrType, System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEntityTypeBaseTypeChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType newBaseType, class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType oldBaseType, class System.Reflection.MemberInfo navigationMemberInfo, class System.Type targetClrType, class System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention.ProcessEntityTypeBaseTypeChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType,System.Reflection.MemberInfo,System.Type,System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEntityTypeBaseTypeChanged (entityTypeBuilder As IConventionEntityTypeBuilder, newBaseType As IConventionEntityType, oldBaseType As IConventionEntityType, navigationMemberInfo As MemberInfo, targetClrType As Type, attribute As InversePropertyAttribute, context As IConventionContext(Of IConventionEntityType))" />
      <MemberSignature Language="F#" Value="override this.ProcessEntityTypeBaseTypeChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType * System.Reflection.MemberInfo * Type * System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt; -&gt; unit" Usage="inversePropertyAttributeConvention.ProcessEntityTypeBaseTypeChanged (entityTypeBuilder, newBaseType, oldBaseType, navigationMemberInfo, targetClrType, attribute, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" />
        <Parameter Name="newBaseType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" />
        <Parameter Name="oldBaseType" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType" />
        <Parameter Name="navigationMemberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="targetClrType" Type="System.Type" />
        <Parameter Name="attribute" Type="System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionEntityType&gt;" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder"> The builder for the entity type. </param>
        <param name="newBaseType"> The new base type. </param>
        <param name="oldBaseType"> The old base type. </param>
        <param name="navigationMemberInfo"> The navigation member info. </param>
        <param name="targetClrType"> The CLR type of the target entity type. </param>
        <param name="attribute"> The attribute. </param>
        <param name="context"> Additional information associated with convention execution. </param>
        <summary>
                Called for every navigation property that has an attribute after the base type for an entity type is changed.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEntityTypeIgnored">
      <MemberSignature Language="C#" Value="public override void ProcessEntityTypeIgnored (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, Type type, System.Reflection.MemberInfo navigationMemberInfo, Type targetClrType, System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEntityTypeIgnored(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, class System.Type type, class System.Reflection.MemberInfo navigationMemberInfo, class System.Type targetClrType, class System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention.ProcessEntityTypeIgnored(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,System.Type,System.Reflection.MemberInfo,System.Type,System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{System.String})" />
      <MemberSignature Language="F#" Value="override this.ProcessEntityTypeIgnored : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * Type * System.Reflection.MemberInfo * Type * System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; -&gt; unit" Usage="inversePropertyAttributeConvention.ProcessEntityTypeIgnored (modelBuilder, type, navigationMemberInfo, targetClrType, attribute, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="navigationMemberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="targetClrType" Type="System.Type" />
        <Parameter Name="attribute" Type="System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="modelBuilder"> The builder for the model. </param>
        <param name="type"> The ignored entity type. </param>
        <param name="navigationMemberInfo"> The navigation member info. </param>
        <param name="targetClrType"> The CLR type of the target entity type. </param>
        <param name="attribute"> The attribute. </param>
        <param name="context"> Additional information associated with convention execution. </param>
        <summary>
                Called for every navigation property that has an attribute after an entity type is ignored.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessEntityTypeMemberIgnored">
      <MemberSignature Language="C#" Value="public override void ProcessEntityTypeMemberIgnored (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, System.Reflection.MemberInfo navigationMemberInfo, Type targetClrType, System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEntityTypeMemberIgnored(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, class System.Reflection.MemberInfo navigationMemberInfo, class System.Type targetClrType, class System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention.ProcessEntityTypeMemberIgnored(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,System.Reflection.MemberInfo,System.Type,System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEntityTypeMemberIgnored (entityTypeBuilder As IConventionEntityTypeBuilder, navigationMemberInfo As MemberInfo, targetClrType As Type, attribute As InversePropertyAttribute, context As IConventionContext(Of String))" />
      <MemberSignature Language="F#" Value="override this.ProcessEntityTypeMemberIgnored : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * System.Reflection.MemberInfo * Type * System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;string&gt; -&gt; unit" Usage="inversePropertyAttributeConvention.ProcessEntityTypeMemberIgnored (entityTypeBuilder, navigationMemberInfo, targetClrType, attribute, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" />
        <Parameter Name="navigationMemberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="targetClrType" Type="System.Type" />
        <Parameter Name="attribute" Type="System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder"> The builder for the entity type. </param>
        <param name="navigationMemberInfo"> The navigation member info. </param>
        <param name="targetClrType"> The CLR type of the target entity type. </param>
        <param name="attribute"> The attribute. </param>
        <param name="context"> Additional information associated with convention execution. </param>
        <summary>
                Called after a navigation property that has an attribute is ignored.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessModelFinalized">
      <MemberSignature Language="C#" Value="public virtual void ProcessModelFinalized (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessModelFinalized(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder modelBuilder, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention.ProcessModelFinalized(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessModelFinalized (modelBuilder As IConventionModelBuilder, context As IConventionContext(Of IConventionModelBuilder))" />
      <MemberSignature Language="F#" Value="abstract member ProcessModelFinalized : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder&gt; -&gt; unit&#xA;override this.ProcessModelFinalized : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder&gt; -&gt; unit" Usage="inversePropertyAttributeConvention.ProcessModelFinalized (modelBuilder, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.IModelFinalizedConvention.ProcessModelFinalized(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionModelBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="modelBuilder"> The builder for the model. </param>
        <param name="context"> Additional information associated with convention execution. </param>
        <summary>
                Called after a model is finalized.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessNavigationAdded">
      <MemberSignature Language="C#" Value="public override void ProcessNavigationAdded (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationshipBuilder, Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation navigation, System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessNavigationAdded(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder relationshipBuilder, class Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation navigation, class System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute attribute, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.InversePropertyAttributeConvention.ProcessNavigationAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation,System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessNavigationAdded (relationshipBuilder As IConventionRelationshipBuilder, navigation As IConventionNavigation, attribute As InversePropertyAttribute, context As IConventionContext(Of IConventionNavigation))" />
      <MemberSignature Language="F#" Value="override this.ProcessNavigationAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation * System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation&gt; -&gt; unit" Usage="inversePropertyAttributeConvention.ProcessNavigationAdded (relationshipBuilder, navigation, attribute, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionRelationshipBuilder" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation" />
        <Parameter Name="attribute" Type="System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionNavigation&gt;" />
      </Parameters>
      <Docs>
        <param name="relationshipBuilder"> The builder for the relationship. </param>
        <param name="navigation"> The navigation. </param>
        <param name="attribute"> The attribute. </param>
        <param name="context"> Additional information associated with convention execution. </param>
        <summary>
                Called after a navigation property that has an attribute is added to an entity type.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
