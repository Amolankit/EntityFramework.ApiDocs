<Type Name="ManyToManyJoinEntityTypeConvention" FullName="Microsoft.EntityFrameworkCore.Metadata.Conventions.ManyToManyJoinEntityTypeConvention">
  <TypeSignature Language="C#" Value="public class ManyToManyJoinEntityTypeConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.ISkipNavigationAddedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.ISkipNavigationForeignKeyChangedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.ISkipNavigationInverseChangedConvention, Microsoft.EntityFrameworkCore.Metadata.Conventions.ISkipNavigationRemovedConvention" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ManyToManyJoinEntityTypeConvention extends System.Object implements class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.ISkipNavigationAddedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.ISkipNavigationForeignKeyChangedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.ISkipNavigationInverseChangedConvention, class Microsoft.EntityFrameworkCore.Metadata.Conventions.ISkipNavigationRemovedConvention" />
  <TypeSignature Language="DocId" Value="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.ManyToManyJoinEntityTypeConvention" />
  <TypeSignature Language="VB.NET" Value="Public Class ManyToManyJoinEntityTypeConvention&#xA;Implements ISkipNavigationAddedConvention, ISkipNavigationForeignKeyChangedConvention, ISkipNavigationInverseChangedConvention, ISkipNavigationRemovedConvention" />
  <TypeSignature Language="F#" Value="type ManyToManyJoinEntityTypeConvention = class&#xA;    interface ISkipNavigationAddedConvention&#xA;    interface IConvention&#xA;    interface ISkipNavigationInverseChangedConvention&#xA;    interface ISkipNavigationForeignKeyChangedConvention&#xA;    interface ISkipNavigationRemovedConvention" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.IConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.ISkipNavigationAddedConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.ISkipNavigationForeignKeyChangedConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.ISkipNavigationInverseChangedConvention</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.EntityFrameworkCore.Metadata.Conventions.ISkipNavigationRemovedConvention</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
                A convention which looks for matching skip navigations and automatically creates
                a many-to-many join entity with suitable foreign keys, sets the two
                matching skip navigations to use those foreign keys.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManyToManyJoinEntityTypeConvention (Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies dependencies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies dependencies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.ManyToManyJoinEntityTypeConvention.#ctor(Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dependencies As ProviderConventionSetBuilderDependencies)" />
      <MemberSignature Language="F#" Value="new Microsoft.EntityFrameworkCore.Metadata.Conventions.ManyToManyJoinEntityTypeConvention : Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies -&gt; Microsoft.EntityFrameworkCore.Metadata.Conventions.ManyToManyJoinEntityTypeConvention" Usage="new Microsoft.EntityFrameworkCore.Metadata.Conventions.ManyToManyJoinEntityTypeConvention dependencies" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dependencies" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies" />
      </Parameters>
      <Docs>
        <param name="dependencies"> Parameter object containing dependencies for this convention. </param>
        <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.ManyToManyJoinEntityTypeConvention" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dependencies">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies Dependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies Dependencies" />
      <MemberSignature Language="DocId" Value="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ManyToManyJoinEntityTypeConvention.Dependencies" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Dependencies As ProviderConventionSetBuilderDependencies" />
      <MemberSignature Language="F#" Value="member this.Dependencies : Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies" Usage="Microsoft.EntityFrameworkCore.Metadata.Conventions.ManyToManyJoinEntityTypeConvention.Dependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.EntityFrameworkCore.Metadata.Conventions.Infrastructure.ProviderConventionSetBuilderDependencies</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Parameter object containing service dependencies.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessSkipNavigationAdded">
      <MemberSignature Language="C#" Value="public virtual void ProcessSkipNavigationAdded (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder skipNavigationBuilder, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessSkipNavigationAdded(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder skipNavigationBuilder, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.ManyToManyJoinEntityTypeConvention.ProcessSkipNavigationAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessSkipNavigationAdded (skipNavigationBuilder As IConventionSkipNavigationBuilder, context As IConventionContext(Of IConventionSkipNavigationBuilder))" />
      <MemberSignature Language="F#" Value="abstract member ProcessSkipNavigationAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder&gt; -&gt; unit&#xA;override this.ProcessSkipNavigationAdded : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder&gt; -&gt; unit" Usage="manyToManyJoinEntityTypeConvention.ProcessSkipNavigationAdded (skipNavigationBuilder, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.ISkipNavigationAddedConvention.ProcessSkipNavigationAdded(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipNavigationBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="skipNavigationBuilder">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ProcessSkipNavigationForeignKeyChanged">
      <MemberSignature Language="C#" Value="public virtual void ProcessSkipNavigationForeignKeyChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder skipNavigationBuilder, Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey foreignKey, Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey oldForeignKey, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessSkipNavigationForeignKeyChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder skipNavigationBuilder, class Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey foreignKey, class Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey oldForeignKey, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.ManyToManyJoinEntityTypeConvention.ProcessSkipNavigationForeignKeyChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey,Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessSkipNavigationForeignKeyChanged (skipNavigationBuilder As IConventionSkipNavigationBuilder, foreignKey As IConventionForeignKey, oldForeignKey As IConventionForeignKey, context As IConventionContext(Of IConventionForeignKey))" />
      <MemberSignature Language="F#" Value="abstract member ProcessSkipNavigationForeignKeyChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey * Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt; -&gt; unit&#xA;override this.ProcessSkipNavigationForeignKeyChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey * Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt; -&gt; unit" Usage="manyToManyJoinEntityTypeConvention.ProcessSkipNavigationForeignKeyChanged (skipNavigationBuilder, foreignKey, oldForeignKey, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.ISkipNavigationForeignKeyChangedConvention.ProcessSkipNavigationForeignKeyChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey,Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipNavigationBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder" />
        <Parameter Name="foreignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey" />
        <Parameter Name="oldForeignKey" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionForeignKey&gt;" />
      </Parameters>
      <Docs>
        <param name="skipNavigationBuilder">To be added.</param>
        <param name="foreignKey">To be added.</param>
        <param name="oldForeignKey">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ProcessSkipNavigationInverseChanged">
      <MemberSignature Language="C#" Value="public virtual void ProcessSkipNavigationInverseChanged (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder skipNavigationBuilder, Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation inverse, Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation oldInverse, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessSkipNavigationInverseChanged(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder skipNavigationBuilder, class Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation inverse, class Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation oldInverse, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.ManyToManyJoinEntityTypeConvention.ProcessSkipNavigationInverseChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation,Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessSkipNavigationInverseChanged (skipNavigationBuilder As IConventionSkipNavigationBuilder, inverse As IConventionSkipNavigation, oldInverse As IConventionSkipNavigation, context As IConventionContext(Of IConventionSkipNavigation))" />
      <MemberSignature Language="F#" Value="abstract member ProcessSkipNavigationInverseChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation * Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation&gt; -&gt; unit&#xA;override this.ProcessSkipNavigationInverseChanged : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation * Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation&gt; -&gt; unit" Usage="manyToManyJoinEntityTypeConvention.ProcessSkipNavigationInverseChanged (skipNavigationBuilder, inverse, oldInverse, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.ISkipNavigationInverseChangedConvention.ProcessSkipNavigationInverseChanged(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation,Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="skipNavigationBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionSkipNavigationBuilder" />
        <Parameter Name="inverse" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation" />
        <Parameter Name="oldInverse" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation&gt;" />
      </Parameters>
      <Docs>
        <param name="skipNavigationBuilder">To be added.</param>
        <param name="inverse">To be added.</param>
        <param name="oldInverse">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ProcessSkipNavigationRemoved">
      <MemberSignature Language="C#" Value="public virtual void ProcessSkipNavigationRemoved (Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation navigation, Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessSkipNavigationRemoved(class Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder entityTypeBuilder, class Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation navigation, class Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext`1&lt;class Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.ManyToManyJoinEntityTypeConvention.ProcessSkipNavigationRemoved(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessSkipNavigationRemoved (entityTypeBuilder As IConventionEntityTypeBuilder, navigation As IConventionSkipNavigation, context As IConventionContext(Of IConventionSkipNavigation))" />
      <MemberSignature Language="F#" Value="abstract member ProcessSkipNavigationRemoved : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation&gt; -&gt; unit&#xA;override this.ProcessSkipNavigationRemoved : Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder * Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation * Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation&gt; -&gt; unit" Usage="manyToManyJoinEntityTypeConvention.ProcessSkipNavigationRemoved (entityTypeBuilder, navigation, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.EntityFrameworkCore.Metadata.Conventions.ISkipNavigationRemovedConvention.ProcessSkipNavigationRemoved(Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation,Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext{Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.EntityFrameworkCore</AssemblyName>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityTypeBuilder" Type="Microsoft.EntityFrameworkCore.Metadata.Builders.IConventionEntityTypeBuilder" />
        <Parameter Name="navigation" Type="Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation" />
        <Parameter Name="context" Type="Microsoft.EntityFrameworkCore.Metadata.Conventions.IConventionContext&lt;Microsoft.EntityFrameworkCore.Metadata.IConventionSkipNavigation&gt;" />
      </Parameters>
      <Docs>
        <param name="entityTypeBuilder">To be added.</param>
        <param name="navigation">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
