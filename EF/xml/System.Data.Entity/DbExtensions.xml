<Type Name="DbExtensions" FullName="System.Data.Entity.DbExtensions">
  <TypeSignature Language="C#" Value="public static class DbExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DbExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.DbExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DbExtensions" />
  <TypeSignature Language="F#" Value="type DbExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="entity-framework-4.3.1;entity-framework-5.0.0">
      <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709:IdentifiersShouldBeCasedCorrectly", Justification="Casing is intentional")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AsNoTracking">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable AsNoTracking (this System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable AsNoTracking(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.DbExtensions.AsNoTracking(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsNoTracking (source As IQueryable) As IQueryable" />
      <MemberSignature Language="F#" Value="static member AsNoTracking : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="System.Data.Entity.DbExtensions.AsNoTracking source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">The source query.</param>
        <summary>
                Returns a new query where the entities returned will not be cached in the <see cref="T:System.Data.Entity.DbContext" />
                or <see cref="T:System.Data.Objects.ObjectContext" />.  This method works by calling the AsNoTracking method of the
                underlying query object.  If the underlying query object does not have a AsNoTracking method,
                then calling this method will have no affect.
            </summary>
        <returns>A new query with NoTracking applied, or the source query if NoTracking is not supported.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsNoTracking&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;T&gt; AsNoTracking&lt;T&gt; (this System.Linq.IQueryable&lt;T&gt; source) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!T&gt; AsNoTracking&lt;class T&gt;(class System.Linq.IQueryable`1&lt;!!T&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.DbExtensions.AsNoTracking``1(System.Linq.IQueryable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsNoTracking(Of T As Class) (source As IQueryable(Of T)) As IQueryable(Of T)" />
      <MemberSignature Language="F#" Value="static member AsNoTracking : System.Linq.IQueryable&lt;'T (requires 'T : null)&gt; -&gt; System.Linq.IQueryable&lt;'T (requires 'T : null)&gt; (requires 'T : null)" Usage="System.Data.Entity.DbExtensions.AsNoTracking source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">The element type.</typeparam>
        <param name="source">The source query.</param>
        <summary>
                Returns a new query where the entities returned will not be cached in the <see cref="T:System.Data.Entity.DbContext" />
                or <see cref="T:System.Data.Objects.ObjectContext" />.  This method works by calling the AsNoTracking method of the
                underlying query object.  If the underlying query object does not have a AsNoTracking method,
                then calling this method will have no affect.
            </summary>
        <returns>A new query with NoTracking applied, or the source query if NoTracking is not supported.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable Include (this System.Linq.IQueryable source, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable Include(class System.Linq.IQueryable source, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.DbExtensions.Include(System.Linq.IQueryable,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Include (source As IQueryable, path As String) As IQueryable" />
      <MemberSignature Language="F#" Value="static member Include : System.Linq.IQueryable * string -&gt; System.Linq.IQueryable" Usage="System.Data.Entity.DbExtensions.Include (source, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" RefType="this" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;T&gt; Include&lt;T&gt; (this System.Linq.IQueryable&lt;T&gt; source, string path) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!T&gt; Include&lt;class T&gt;(class System.Linq.IQueryable`1&lt;!!T&gt; source, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.DbExtensions.Include``1(System.Linq.IQueryable{``0},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Include(Of T As Class) (source As IQueryable(Of T), path As String) As IQueryable(Of T)" />
      <MemberSignature Language="F#" Value="static member Include : System.Linq.IQueryable&lt;'T (requires 'T : null)&gt; * string -&gt; System.Linq.IQueryable&lt;'T (requires 'T : null)&gt; (requires 'T : null)" Usage="System.Data.Entity.DbExtensions.Include (source, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;T&gt;" RefType="this" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="source">To be added.</param>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include&lt;T,TProperty&gt;">
      <MemberSignature Language="C#" Value="public static System.Linq.IQueryable&lt;T&gt; Include&lt;T,TProperty&gt; (this System.Linq.IQueryable&lt;T&gt; source, System.Linq.Expressions.Expression&lt;Func&lt;T,TProperty&gt;&gt; path) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Linq.IQueryable`1&lt;!!T&gt; Include&lt;class T, TProperty&gt;(class System.Linq.IQueryable`1&lt;!!T&gt; source, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!T, !!TProperty&gt;&gt; path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.DbExtensions.Include``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Include(Of T As Class, TProperty As Class) (source As IQueryable(Of T), path As Expression(Of Func(Of T, TProperty))) As IQueryable(Of T)" />
      <MemberSignature Language="F#" Value="static member Include : System.Linq.IQueryable&lt;'T (requires 'T : null)&gt; * System.Linq.Expressions.Expression&lt;Func&lt;'T, 'Property&gt;&gt; -&gt; System.Linq.IQueryable&lt;'T (requires 'T : null)&gt; (requires 'T : null)" Usage="System.Data.Entity.DbExtensions.Include (source, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="entity-framework-4.3.1;entity-framework-5.0.0">
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011:ConsiderPassingBaseTypesAsParameters")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TProperty" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable&lt;T&gt;" RefType="this" />
        <Parameter Name="path" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;T,TProperty&gt;&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <typeparam name="TProperty">To be added.</typeparam>
        <param name="source">To be added.</param>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static void Load (this System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Load(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.DbExtensions.Load(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub Load (source As IQueryable)" />
      <MemberSignature Language="F#" Value="static member Load : System.Linq.IQueryable -&gt; unit" Usage="System.Data.Entity.DbExtensions.Load source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">The source query.</param>
        <summary>
                Enumerates the query such that for server queries such as those of <see cref="T:System.Data.Entity.DbSet`1" />, <see cref="T:System.Data.Objects.ObjectSet`1" />,
                <see cref="T:System.Data.Objects.ObjectQuery`1" />, and others the results of the query will be loaded into the associated <see cref="T:System.Data.Entity.DbContext" />,
                <see cref="T:System.Data.Objects.ObjectContext" /> or other cache on the client.
                This is equivalent to calling ToList and then throwing away the list without the overhead of actually creating the list.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBindingList&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.BindingList&lt;T&gt; ToBindingList&lt;T&gt; (this System.Collections.ObjectModel.ObservableCollection&lt;T&gt; source) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ComponentModel.BindingList`1&lt;!!T&gt; ToBindingList&lt;class T&gt;(class System.Collections.ObjectModel.ObservableCollection`1&lt;!!T&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.DbExtensions.ToBindingList``1(System.Collections.ObjectModel.ObservableCollection{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToBindingList(Of T As Class) (source As ObservableCollection(Of T)) As BindingList(Of T)" />
      <MemberSignature Language="F#" Value="static member ToBindingList : System.Collections.ObjectModel.ObservableCollection&lt;'T (requires 'T : null)&gt; -&gt; System.ComponentModel.BindingList&lt;'T (requires 'T : null)&gt; (requires 'T : null)" Usage="System.Data.Entity.DbExtensions.ToBindingList source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.BindingList&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.ObjectModel.ObservableCollection&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">The element type.</typeparam>
        <param name="source">The collection that the binding list will stay in sync with.</param>
        <summary>
                Returns an <see cref="T:System.ComponentModel.BindingList`1" /> implementation that stays in sync with the given <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />.
            </summary>
        <returns>The binding list.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>