<Type Name="IDbExecutionStrategy" FullName="System.Data.Entity.Infrastructure.IDbExecutionStrategy">
  <TypeSignature Language="C#" Value="public interface IDbExecutionStrategy" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbExecutionStrategy" />
  <TypeSignature Language="DocId" Value="T:System.Data.Entity.Infrastructure.IDbExecutionStrategy" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbExecutionStrategy" />
  <TypeSignature Language="F#" Value="type IDbExecutionStrategy = interface" />
  <AssemblyInfo>
    <AssemblyName>EntityFramework</AssemblyName>
    <AssemblyVersion>6.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            A strategy that is used to execute a command or query against the database, possibly with logic to retry when a failure occurs.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (Action operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(class System.Action operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.IDbExecutionStrategy.Execute(System.Action)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (operation As Action)" />
      <MemberSignature Language="F#" Value="abstract member Execute : Action -&gt; unit" Usage="iDbExecutionStrategy.Execute operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="operation">A delegate representing an executable operation that doesn't return any results.</param>
        <summary>
            Executes the specified operation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public TResult Execute&lt;TResult&gt; (Func&lt;TResult&gt; operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!TResult Execute&lt;TResult&gt;(class System.Func`1&lt;!!TResult&gt; operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Entity.Infrastructure.IDbExecutionStrategy.Execute``1(System.Func{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Execute(Of TResult) (operation As Func(Of TResult)) As TResult" />
      <MemberSignature Language="F#" Value="abstract member Execute : Func&lt;'Result&gt; -&gt; 'Result" Usage="iDbExecutionStrategy.Execute operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="operation" Type="System.Func&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
            The return type of <paramref name="operation" />.
            </typeparam>
        <param name="operation">
            A delegate representing an executable operation that returns the result of type <typeparamref name="TResult" />.
            </param>
        <summary>
            Executes the specified operation and returns the result.
            </summary>
        <returns>The result from the operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetriesOnFailure">
      <MemberSignature Language="C#" Value="public bool RetriesOnFailure { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RetriesOnFailure" />
      <MemberSignature Language="DocId" Value="P:System.Data.Entity.Infrastructure.IDbExecutionStrategy.RetriesOnFailure" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RetriesOnFailure As Boolean" />
      <MemberSignature Language="F#" Value="member this.RetriesOnFailure : bool" Usage="System.Data.Entity.Infrastructure.IDbExecutionStrategy.RetriesOnFailure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>EntityFramework</AssemblyName>
        <AssemblyVersion>6.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Indicates whether this <see cref="T:System.Data.Entity.Infrastructure.IDbExecutionStrategy" /> might retry the execution after a failure.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>